
namespace beacon::lang {
	class Object {
		public:
		def new() {
		}

		public:
		def print() -> Void {
			Console.write(this);
		}

		def print(Object a) -> Void {
			Console.write(a);
		}

		def printLine() -> Void {
			Console.writeLine(this);
		}

		def printLine(Object a) -> Void {
			Console.writeLine(a);
		}

		def toString() -> String {
			return this.nativeToString();
		}

		def equals(Object a) -> Bool {
			return Object.referenceEquals(this, a);
		}

		def static referenceEquals(Object a, Object b) -> Bool {
			return Object.nativeReferenceEquals(a, b);
		}

		operator ==(Object a) -> Bool {
			return Object.referenceEquals(this, a);
		}

		operator !=(Object a) -> Bool {
			return !(Object.referenceEquals(this, a));
		}

		private:
		def native nativeToString() -> String;

		def static native nativeReferenceEquals(Object a, Object b) -> Bool;
	}
}