import "beacon/lang/Object"
import "beacon/lang/Array"
import "beacon/lang/Int"
import "beacon/lang/Double"
import "beacon/lang/Char"
import "beacon/lang/String"
import "beacon/lang/Bool"
import "beacon/lang/Null"
import "beacon/lang/Void"
import "beacon/lang/Console"
import "beacon/lang/Vector"
import "beacon/lang/VectorIterator"

import "beacon/lang/Exception"
import "beacon/lang/StackTraceElement"
import "beacon/lang/Tuple"

namespace beacon::x {
	class MyClass[T] {
		public:
		Vector[T] v;

		def new() {
			this.v = new Vector[T]();
		}
	}
}

var mc = new beacon::x::MyClass[beacon::x::Tuple[Int, String]]();
var v = mc.v;
v.push(new beacon::x::Tuple[Int, String](10, "mcAAA"));
v.push(new beacon::x::Tuple[Int, String](3, "mcBBB"));
v.push(new beacon::x::Tuple[Int, String](1, "mcCCC"));