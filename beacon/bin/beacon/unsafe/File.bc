namespace beacon::unsafe {
	class File {
		private:
		def new() { }

		public:
		def static open(String filename, String mode) -> File {
			return File.nativeOpen(filename, mode);
		}

		def close() -> Void {
			this.nativeClose();
		}

		def putc(Char c) -> Void {
			nativePut(c);
		}

		def puts(String s) -> Void {
			var offs = 0;
			while(offs < s.length()) {
				putc(s.charAt(offs));
				offs += 1;
			}
		}

		def getc() -> Char {
			return nativeGet();
		}

		private:
		def static native nativeOpen(String filename, String mode) -> File;

		def native nativePut(Char c) -> Void;

		def native nativeGet() -> Char;

		def static native nativeGetStdIn() -> File;

		def static native nativeGetStdOut() -> File;

		def static native nativeGetStdErr() -> File;

		def native nativeClose() -> Void;
	}
}