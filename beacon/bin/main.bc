import "beacon/lang/Object"
import "beacon/lang/Array"
import "beacon/lang/Int"
import "beacon/lang/Double"
import "beacon/lang/Char"
import "beacon/lang/String"
import "beacon/lang/Bool"
import "beacon/lang/Null"
import "beacon/lang/Void"
import "beacon/lang/Console"
import "beacon/lang/Vector"
import "beacon/lang/VectorIterator"

import "beacon/lang/Exception"
import "beacon/lang/StackTraceElement"
import "beacon/lang/Tuple"

namespace beacon.x {
	class Generic {
		public:

		def static beep(Vector[Object] v) -> Void {
			var iter = v.iterate();
			while(iter.hasNext()) {
				var e = iter.next();
				Console.writeLine(e);
			}
		}
	}
}

var v = new Vector[Object]();
v.push(10);
v.push(20);
v.push(30);
beacon::x::Generic.beep(v);