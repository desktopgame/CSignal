//BEGIN-AUTOGENERATED-BLOCK
/**
 * @file bc_array.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
//END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_LIB_SIGNAL_LANG_SG_ARRAY_H
#define BEACON_LIB_SIGNAL_LANG_SG_ARRAY_H
#include "../../bc_library_impl.h"
/**
 * 配列を表すオブジェクトです。
 */
typedef struct Array {
	Object Super;
	Vector* Elements;
} Array;

struct Frame;
struct Type;
struct Object;
struct GenericType;

/**
 * 新しい配列オブジェクトを生成します。
 * @param size
 * @param element_type
 * @return
 */
Array* NewArray(int size, struct GenericType* element_type);

/**
 * beacon::lang::Arrayクラスを初期化します.
 */
void InitBCArray();

/**
 * beacon::lang::Arrayクラスを返します.
 * @return
 */
struct Type* GetBCArrayType();

/**
 * beacon::lang::Arrayクラスを作成します.
 * @param gtype
 * @param length
 * @param fr
 * @return
 */
struct Object* NewBCArray(struct GenericType* gtype, int length, struct Frame* fr);

/**
 * @param arr
 * @param index
 * @param o
 * @return
 */
void SetBCArray(struct Object* arr, int index, struct Object* o);

/**
 * @param arr
 * @param index
 * @return
 */
struct Object* GetBCArray(struct Object* arr, int index);

/**
 * @param arr
 * @return
 */
int GetLengthBCArray(struct Object* arr);
#endif // !SIGNAL_LIB_SIGNAL_LANG_SG_ARRAY_H
