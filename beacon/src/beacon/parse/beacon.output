Terminals which are not used

   LINE
   LGEN
   RGEN
   INC
   DEC
   BOUNDS_EXTENDS
   BOUNDS_SUPER
   PRE_DEC
   PRE_INC
   QUOTE
   POST_DEC
   POST_INC
   '<'
   REF
   FORM_TYPE


State 44 conflicts: 1 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: init_decl body_decl
    2                 | compilation_unit body_decl
    3                 | error '\n'

    4 init_decl: /* empty */
    5          | import_list

    6 body_decl: stmt
    7          | namespace_decl
    8          | function_define

    9 namespace_decl: NAMESPACE namespace_path namespace_body

   10 namespace_body: LCB namespace_member_decl_optional RCB

   11 namespace_member_decl: NAMESPACE namespace_path namespace_body
   12                      | class_decl
   13                      | interface_decl
   14                      | enum_decl

   15 namespace_member_decl_list: namespace_member_decl
   16                           | namespace_member_decl_list namespace_member_decl

   17 namespace_member_decl_optional: /* empty */
   18                               | namespace_member_decl_list

   19 namespace_path: IDENT
   20               | namespace_path DOT IDENT

   21 import_list: import
   22            | import_list import

   23 import: IMPORT STRING_LITERAL

   24 parameterized_typename: IDENT type_parameter_group

   25 type_parameter_group: /* empty */
   26                     | LSB type_parameter_list RSB

   27 type_parameter_list: type_parameter
   28                    | type_parameter_list COMMA type_parameter

   29 type_parameter: IDENT

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   32 enum_decl: ENUM IDENT LCB ident_list RCB
   33          | ENUM IDENT LCB ident_list COMMA RCB

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   36 access_member_tree_opt: /* empty */
   37                       | access_member_tree

   38 access_member_tree: access_member_list
   39                   | access_member_tree access_member_list

   40 access_member_list: access_level_T COLON member_define_list

   41 member_define_list: member_define
   42                   | member_define_list member_define

   43 member_define: constructor_define
   44              | method_define
   45              | field_define

   46 constructor_define: DEF NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | DEF NEW LRB RRB constructor_chain_optional scope_optional

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB
   49                  | COLON constructor_chain_type_T LRB RRB

   50 constructor_chain_type_T: SUPER_TOK
   51                         | THIS_TOK

   52 constructor_chain_optional: /* empty */
   53                           | constructor_chain

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT LRB RRB ARROW typename_T scope_optional

   56 method_define: DEF modifier_type_T IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | DEF modifier_type_T IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

   58 field_define: modifier_type_T typename_T IDENT SEMI

   59 modifier_type_T: /* empty */
   60                | STATIC NATIVE
   61                | NATIVE STATIC
   62                | STATIC
   63                | NATIVE

   64 access_level_T: PUBLIC
   65               | PRIVATE
   66               | PROTECTED

   67 ident_list: IDENT
   68           | ident_list COMMA IDENT

   69 parameter_list: typename_T IDENT
   70               | parameter_list COMMA typename_T IDENT

   71 argument_list: expression
   72              | argument_list COMMA expression

   73 typename_group: /* empty */
   74               | LSB typename_list RSB

   75 typename_list: typename_T
   76              | typename_list COMMA typename_T

   77 typename_T: fqcn_part typename_group

   78 fqcn_part: IDENT
   79          | fqcn_part COLO_COLO IDENT

   80 expression: LRB expression RRB
   81           | primary
   82           | expression_nobrace

   83 expression_nobrace: ADD expression
   84                   | SUB expression
   85                   | expression ADD expression
   86                   | expression SUB expression
   87                   | expression MUL expression
   88                   | expression DIV expression
   89                   | expression MOD expression
   90                   | expression BIT_OR expression
   91                   | expression EQUAL expression
   92                   | expression NOTEQUAL expression
   93                   | expression BIT_AND expression
   94                   | expression EXC_OR expression
   95                   | expression LOGIC_OR expression
   96                   | expression LOGIC_AND expression
   97                   | lhs ASSIGN expression
   98                   | lhs ADD_ASSIGN expression
   99                   | lhs SUB_ASSIGN expression
  100                   | lhs MUL_ASSIGN expression
  101                   | lhs DIV_ASSIGN expression
  102                   | lhs MOD_ASSIGN expression
  103                   | lhs AND_ASSIGN expression
  104                   | lhs OR_ASSIGN expression
  105                   | lhs EXC_OR_ASSIGN expression
  106                   | lhs LSHIFT_ASSIGN expression
  107                   | lhs RSHIFT_ASSIGN expression
  108                   | expression GT expression
  109                   | expression GE expression
  110                   | expression LT expression
  111                   | expression LE expression
  112                   | expression LSHIFT expression
  113                   | expression RSHIFT expression
  114                   | expression INSTANCEOF typename_T
  115                   | expression AS typename_T
  116                   | CHILDA expression
  117                   | NOT expression
  118                   | expression_nobrace LRB argument_list RRB
  119                   | expression_nobrace LRB RRB
  120                   | NEW fqcn_part typename_group LRB argument_list RRB
  121                   | NEW fqcn_part typename_group LRB RRB
  122                   | THIS_TOK
  123                   | SUPER_TOK
  124                   | lhs

  125 lhs: fqcn_part typename_group
  126    | expression DOT IDENT typename_group

  127 primary: INT
  128        | DOUBLE
  129        | CHAR_LITERAL
  130        | STRING_LITERAL
  131        | TRUE_TOK
  132        | FALSE_TOK
  133        | NULL_TOK

  134 stmt_list: stmt
  135          | stmt_list stmt

  136 stmt: expression stmt_term
  137     | variable_decl_stmt
  138     | variable_init_stmt
  139     | inferenced_type_init_stmt
  140     | if_stmt
  141     | while_stmt
  142     | break_stmt
  143     | continue_stmt
  144     | return_stmt
  145     | throw_stmt
  146     | try_stmt
  147     | assert_stmt
  148     | defer_stmt

  149 variable_decl_stmt: typename_T IDENT SEMI

  150 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term

  151 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term

  152 if_stmt: IF expression scope
  153        | IF expression scope ELSE scope
  154        | IF expression scope elif_list
  155        | IF expression scope elif_list ELSE scope

  156 elif_list: elif
  157          | elif_list elif

  158 elif: ELIF expression scope

  159 while_stmt: WHILE expression scope_optional

  160 break_stmt: BREAK stmt_term

  161 continue_stmt: CONTINUE stmt_term

  162 return_stmt: RETURN expression stmt_term

  163 throw_stmt: THROW expression stmt_term

  164 try_stmt: TRY scope catch_stmt_list

  165 catch_stmt_list: catch_stmt
  166                | catch_stmt_list catch_stmt

  167 catch_stmt: CATCH LRB typename_T IDENT RRB scope

  168 assert_stmt: ASSERT_T expression COLON expression SEMI
  169            | ASSERT_T expression SEMI

  170 defer_stmt: DEFER stmt

  171 scope: LCB stmt_list RCB
  172      | LCB RCB

  173 scope_optional: SEMI
  174               | scope

  175 stmt_term: SEMI


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3
'<' (60)
error (256) 3
CHAR_LITERAL (258) 129
STRING_LITERAL (259) 23 130
INT (260) 127
DOUBLE (261) 128
IDENT (262) 19 20 24 29 32 33 54 55 56 57 58 67 68 69 70 78 79 126
    149 150 151 167
DOT (263) 20 126
COMMA (264) 28 33 68 70 72 76
COLON (265) 31 35 40 48 49 168
COLO_COLO (266) 79
LINE (267)
ADD (268) 83 85
SUB (269) 84 86
MUL (270) 87
DIV (271) 88
MOD (272) 89
NOT (273) 117
LSHIFT (274) 112
RSHIFT (275) 113
CHILDA (276) 116
EQUAL (277) 91
NOTEQUAL (278) 92
GT (279) 108
GE (280) 109
LT (281) 110
LE (282) 111
LGEN (283)
RGEN (284)
BIT_AND (285) 93
LOGIC_AND (286) 96
BIT_OR (287) 90
LOGIC_OR (288) 95
ASSIGN (289) 97 150 151
ADD_ASSIGN (290) 98
SUB_ASSIGN (291) 99
MUL_ASSIGN (292) 100
DIV_ASSIGN (293) 101
MOD_ASSIGN (294) 102
AND_ASSIGN (295) 103
OR_ASSIGN (296) 104
LSHIFT_ASSIGN (297) 106
RSHIFT_ASSIGN (298) 107
EXC_OR_ASSIGN (299) 105
INC (300)
DEC (301)
EXC_OR (302) 94
LCB (303) 10 30 31 32 33 34 35 171 172
RCB (304) 10 30 31 32 33 34 35 171 172
LRB (305) 46 47 48 49 54 55 56 57 80 118 119 120 121 167
RRB (306) 46 47 48 49 54 55 56 57 80 118 119 120 121 167
LSB (307) 26 74
RSB (308) 26 74
SEMI (309) 58 149 168 169 173 175
IMPORT (310) 23
VAR (311) 151
THIS_TOK (312) 51 122
SUPER_TOK (313) 50 123
TRUE_TOK (314) 131
FALSE_TOK (315) 132
NULL_TOK (316) 133
AS (317) 115
INTERFACE (318) 34 35
CLASS (319) 30 31
ENUM (320) 32 33
PUBLIC (321) 64
PRIVATE (322) 65
PROTECTED (323) 66
STATIC (324) 60 61 62
NATIVE (325) 60 61 63
NEW (326) 46 47 120 121
DEF (327) 46 47 54 55 56 57
ARROW (328) 54 55 56 57
NAMESPACE (329) 9 11
RETURN (330) 162
IF (331) 152 153 154 155
ELIF (332) 158
ELSE (333) 153 155
WHILE (334) 159
BREAK (335) 160
CONTINUE (336) 161
TRY (337) 164
CATCH (338) 167
THROW (339) 163
ASSERT_T (340) 168 169
DEFER (341) 170
INSTANCEOF (342) 114
BOUNDS_EXTENDS (343)
BOUNDS_SUPER (344)
PRE_DEC (345)
PRE_INC (346)
QUOTE (347)
POST_DEC (348)
POST_INC (349)
FUNCCALL (350)
REF (351)
POSITIVE (352)
NEGATIVE (353)
FORM_TYPE (354)


Nonterminals, with rules where they appear

$accept (102)
    on left: 0
compilation_unit (103)
    on left: 1 2 3, on right: 0 2
init_decl (104)
    on left: 4 5, on right: 1
body_decl (105)
    on left: 6 7 8, on right: 1 2
namespace_decl (106)
    on left: 9, on right: 7
namespace_body (107)
    on left: 10, on right: 9 11
namespace_member_decl (108)
    on left: 11 12 13 14, on right: 15 16
namespace_member_decl_list (109)
    on left: 15 16, on right: 16 18
namespace_member_decl_optional (110)
    on left: 17 18, on right: 10
namespace_path (111)
    on left: 19 20, on right: 9 11 20
import_list (112)
    on left: 21 22, on right: 5 22
import (113)
    on left: 23, on right: 21 22
parameterized_typename (114)
    on left: 24, on right: 30 31 34 35
type_parameter_group (115)
    on left: 25 26, on right: 24 56 57
type_parameter_list (116)
    on left: 27 28, on right: 26 28
type_parameter (117)
    on left: 29, on right: 27 28
class_decl (118)
    on left: 30 31, on right: 12
enum_decl (119)
    on left: 32 33, on right: 14
interface_decl (120)
    on left: 34 35, on right: 13
access_member_tree_opt (121)
    on left: 36 37, on right: 30 31 34 35
access_member_tree (122)
    on left: 38 39, on right: 37 39
access_member_list (123)
    on left: 40, on right: 38 39
member_define_list (124)
    on left: 41 42, on right: 40 42
member_define (125)
    on left: 43 44 45, on right: 41 42
constructor_define (126)
    on left: 46 47, on right: 43
constructor_chain (127)
    on left: 48 49, on right: 53
constructor_chain_type_T (128)
    on left: 50 51, on right: 48 49
constructor_chain_optional (129)
    on left: 52 53, on right: 46 47
function_define (130)
    on left: 54 55, on right: 8
method_define (131)
    on left: 56 57, on right: 44
field_define (132)
    on left: 58, on right: 45
modifier_type_T (133)
    on left: 59 60 61 62 63, on right: 56 57 58
access_level_T (134)
    on left: 64 65 66, on right: 40
ident_list (135)
    on left: 67 68, on right: 32 33 68
parameter_list (136)
    on left: 69 70, on right: 46 54 56 70
argument_list (137)
    on left: 71 72, on right: 48 72 118 120
typename_group (138)
    on left: 73 74, on right: 77 120 121 125 126
typename_list (139)
    on left: 75 76, on right: 31 35 74 76
typename_T (140)
    on left: 77, on right: 54 55 56 57 58 69 70 75 76 114 115 149 150
    167
fqcn_part (141)
    on left: 78 79, on right: 77 79 120 121 125
expression (142)
    on left: 80 81 82, on right: 71 72 80 83 84 85 86 87 88 89 90 91
    92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
    110 111 112 113 114 115 116 117 126 136 150 151 152 153 154 155
    158 159 162 163 168 169
expression_nobrace (143)
    on left: 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116
    117 118 119 120 121 122 123 124, on right: 82 118 119
lhs (144)
    on left: 125 126, on right: 97 98 99 100 101 102 103 104 105 106
    107 124
primary (145)
    on left: 127 128 129 130 131 132 133, on right: 81
stmt_list (146)
    on left: 134 135, on right: 135 171
stmt (147)
    on left: 136 137 138 139 140 141 142 143 144 145 146 147 148,
    on right: 6 134 135 170
variable_decl_stmt (148)
    on left: 149, on right: 137
variable_init_stmt (149)
    on left: 150, on right: 138
inferenced_type_init_stmt (150)
    on left: 151, on right: 139
if_stmt (151)
    on left: 152 153 154 155, on right: 140
elif_list (152)
    on left: 156 157, on right: 154 155 157
elif (153)
    on left: 158, on right: 156 157
while_stmt (154)
    on left: 159, on right: 141
break_stmt (155)
    on left: 160, on right: 142
continue_stmt (156)
    on left: 161, on right: 143
return_stmt (157)
    on left: 162, on right: 144
throw_stmt (158)
    on left: 163, on right: 145
try_stmt (159)
    on left: 164, on right: 146
catch_stmt_list (160)
    on left: 165 166, on right: 164 166
catch_stmt (161)
    on left: 167, on right: 165 166
assert_stmt (162)
    on left: 168 169, on right: 147
defer_stmt (163)
    on left: 170, on right: 148
scope (164)
    on left: 171 172, on right: 152 153 154 155 158 164 167 174
scope_optional (165)
    on left: 173 174, on right: 46 47 54 55 56 57 159
stmt_term (166)
    on left: 175, on right: 136 150 151 160 161 162 163


state 0

    0 $accept: . compilation_unit $end
    1 compilation_unit: . init_decl body_decl
    2                 | . compilation_unit body_decl
    3                 | . error '\n'
    4 init_decl: .  [CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
    5          | . import_list
   21 import_list: . import
   22            | . import_list import
   23 import: . IMPORT STRING_LITERAL

    error   shift, and go to state 1
    IMPORT  shift, and go to state 2

    CHAR_LITERAL    reduce using rule 4 (init_decl)
    STRING_LITERAL  reduce using rule 4 (init_decl)
    INT             reduce using rule 4 (init_decl)
    DOUBLE          reduce using rule 4 (init_decl)
    IDENT           reduce using rule 4 (init_decl)
    ADD             reduce using rule 4 (init_decl)
    SUB             reduce using rule 4 (init_decl)
    NOT             reduce using rule 4 (init_decl)
    CHILDA          reduce using rule 4 (init_decl)
    LRB             reduce using rule 4 (init_decl)
    VAR             reduce using rule 4 (init_decl)
    THIS_TOK        reduce using rule 4 (init_decl)
    SUPER_TOK       reduce using rule 4 (init_decl)
    TRUE_TOK        reduce using rule 4 (init_decl)
    FALSE_TOK       reduce using rule 4 (init_decl)
    NULL_TOK        reduce using rule 4 (init_decl)
    NEW             reduce using rule 4 (init_decl)
    DEF             reduce using rule 4 (init_decl)
    NAMESPACE       reduce using rule 4 (init_decl)
    RETURN          reduce using rule 4 (init_decl)
    IF              reduce using rule 4 (init_decl)
    WHILE           reduce using rule 4 (init_decl)
    BREAK           reduce using rule 4 (init_decl)
    CONTINUE        reduce using rule 4 (init_decl)
    TRY             reduce using rule 4 (init_decl)
    THROW           reduce using rule 4 (init_decl)
    ASSERT_T        reduce using rule 4 (init_decl)
    DEFER           reduce using rule 4 (init_decl)

    compilation_unit  go to state 3
    init_decl         go to state 4
    import_list       go to state 5
    import            go to state 6


state 1

    3 compilation_unit: error . '\n'

    '\n'  shift, and go to state 7


state 2

   23 import: IMPORT . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 8


state 3

    0 $accept: compilation_unit . $end
    2 compilation_unit: compilation_unit . body_decl
    6 body_decl: . stmt
    7          | . namespace_decl
    8          | . function_define
    9 namespace_decl: . NAMESPACE namespace_path namespace_body
   54 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  136 stmt: . expression stmt_term
  137     | . variable_decl_stmt
  138     | . variable_init_stmt
  139     | . inferenced_type_init_stmt
  140     | . if_stmt
  141     | . while_stmt
  142     | . break_stmt
  143     | . continue_stmt
  144     | . return_stmt
  145     | . throw_stmt
  146     | . try_stmt
  147     | . assert_stmt
  148     | . defer_stmt
  149 variable_decl_stmt: . typename_T IDENT SEMI
  150 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  151 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  152 if_stmt: . IF expression scope
  153        | . IF expression scope ELSE scope
  154        | . IF expression scope elif_list
  155        | . IF expression scope elif_list ELSE scope
  159 while_stmt: . WHILE expression scope_optional
  160 break_stmt: . BREAK stmt_term
  161 continue_stmt: . CONTINUE stmt_term
  162 return_stmt: . RETURN expression stmt_term
  163 throw_stmt: . THROW expression stmt_term
  164 try_stmt: . TRY scope catch_stmt_list
  168 assert_stmt: . ASSERT_T expression COLON expression SEMI
  169            | . ASSERT_T expression SEMI
  170 defer_stmt: . DEFER stmt

    $end            shift, and go to state 9
    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    DEF             shift, and go to state 27
    NAMESPACE       shift, and go to state 28
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    body_decl                  go to state 38
    namespace_decl             go to state 39
    function_define            go to state 40
    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt                       go to state 47
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 4

    1 compilation_unit: init_decl . body_decl
    6 body_decl: . stmt
    7          | . namespace_decl
    8          | . function_define
    9 namespace_decl: . NAMESPACE namespace_path namespace_body
   54 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  136 stmt: . expression stmt_term
  137     | . variable_decl_stmt
  138     | . variable_init_stmt
  139     | . inferenced_type_init_stmt
  140     | . if_stmt
  141     | . while_stmt
  142     | . break_stmt
  143     | . continue_stmt
  144     | . return_stmt
  145     | . throw_stmt
  146     | . try_stmt
  147     | . assert_stmt
  148     | . defer_stmt
  149 variable_decl_stmt: . typename_T IDENT SEMI
  150 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  151 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  152 if_stmt: . IF expression scope
  153        | . IF expression scope ELSE scope
  154        | . IF expression scope elif_list
  155        | . IF expression scope elif_list ELSE scope
  159 while_stmt: . WHILE expression scope_optional
  160 break_stmt: . BREAK stmt_term
  161 continue_stmt: . CONTINUE stmt_term
  162 return_stmt: . RETURN expression stmt_term
  163 throw_stmt: . THROW expression stmt_term
  164 try_stmt: . TRY scope catch_stmt_list
  168 assert_stmt: . ASSERT_T expression COLON expression SEMI
  169            | . ASSERT_T expression SEMI
  170 defer_stmt: . DEFER stmt

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    DEF             shift, and go to state 27
    NAMESPACE       shift, and go to state 28
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    body_decl                  go to state 60
    namespace_decl             go to state 39
    function_define            go to state 40
    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt                       go to state 47
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 5

    5 init_decl: import_list .  [CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
   22 import_list: import_list . import
   23 import: . IMPORT STRING_LITERAL

    IMPORT  shift, and go to state 2

    $default  reduce using rule 5 (init_decl)

    import  go to state 61


state 6

   21 import_list: import .

    $default  reduce using rule 21 (import_list)


state 7

    3 compilation_unit: error '\n' .

    $default  reduce using rule 3 (compilation_unit)


state 8

   23 import: IMPORT STRING_LITERAL .

    $default  reduce using rule 23 (import)


state 9

    0 $accept: compilation_unit $end .

    $default  accept


state 10

  129 primary: CHAR_LITERAL .

    $default  reduce using rule 129 (primary)


state 11

  130 primary: STRING_LITERAL .

    $default  reduce using rule 130 (primary)


state 12

  127 primary: INT .

    $default  reduce using rule 127 (primary)


state 13

  128 primary: DOUBLE .

    $default  reduce using rule 128 (primary)


state 14

   78 fqcn_part: IDENT .

    $default  reduce using rule 78 (fqcn_part)


state 15

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   83                   | ADD . expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 63
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 16

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   84                   | SUB . expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 64
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 17

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  117                   | NOT . expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 65
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 18

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  116                   | CHILDA . expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 66
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 19

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   80           | LRB . expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 67
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 20

  151 inferenced_type_init_stmt: VAR . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 68


state 21

  122 expression_nobrace: THIS_TOK .

    $default  reduce using rule 122 (expression_nobrace)


state 22

  123 expression_nobrace: SUPER_TOK .

    $default  reduce using rule 123 (expression_nobrace)


state 23

  131 primary: TRUE_TOK .

    $default  reduce using rule 131 (primary)


state 24

  132 primary: FALSE_TOK .

    $default  reduce using rule 132 (primary)


state 25

  133 primary: NULL_TOK .

    $default  reduce using rule 133 (primary)


state 26

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
  120 expression_nobrace: NEW . fqcn_part typename_group LRB argument_list RRB
  121                   | NEW . fqcn_part typename_group LRB RRB

    IDENT  shift, and go to state 14

    fqcn_part  go to state 69


state 27

   54 function_define: DEF . IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF . IDENT LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 70


state 28

    9 namespace_decl: NAMESPACE . namespace_path namespace_body
   19 namespace_path: . IDENT
   20               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 71

    namespace_path  go to state 72


state 29

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  162 return_stmt: RETURN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 73
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 30

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  152 if_stmt: IF . expression scope
  153        | IF . expression scope ELSE scope
  154        | IF . expression scope elif_list
  155        | IF . expression scope elif_list ELSE scope

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 74
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 31

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  159 while_stmt: WHILE . expression scope_optional

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 75
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 32

  160 break_stmt: BREAK . stmt_term
  175 stmt_term: . SEMI

    SEMI  shift, and go to state 76

    stmt_term  go to state 77


state 33

  161 continue_stmt: CONTINUE . stmt_term
  175 stmt_term: . SEMI

    SEMI  shift, and go to state 76

    stmt_term  go to state 78


state 34

  164 try_stmt: TRY . scope catch_stmt_list
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB

    LCB  shift, and go to state 79

    scope  go to state 80


state 35

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  163 throw_stmt: THROW . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 81
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 36

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  168 assert_stmt: ASSERT_T . expression COLON expression SEMI
  169            | ASSERT_T . expression SEMI

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 82
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 37

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  136 stmt: . expression stmt_term
  137     | . variable_decl_stmt
  138     | . variable_init_stmt
  139     | . inferenced_type_init_stmt
  140     | . if_stmt
  141     | . while_stmt
  142     | . break_stmt
  143     | . continue_stmt
  144     | . return_stmt
  145     | . throw_stmt
  146     | . try_stmt
  147     | . assert_stmt
  148     | . defer_stmt
  149 variable_decl_stmt: . typename_T IDENT SEMI
  150 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  151 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  152 if_stmt: . IF expression scope
  153        | . IF expression scope ELSE scope
  154        | . IF expression scope elif_list
  155        | . IF expression scope elif_list ELSE scope
  159 while_stmt: . WHILE expression scope_optional
  160 break_stmt: . BREAK stmt_term
  161 continue_stmt: . CONTINUE stmt_term
  162 return_stmt: . RETURN expression stmt_term
  163 throw_stmt: . THROW expression stmt_term
  164 try_stmt: . TRY scope catch_stmt_list
  168 assert_stmt: . ASSERT_T expression COLON expression SEMI
  169            | . ASSERT_T expression SEMI
  170 defer_stmt: . DEFER stmt
  170           | DEFER . stmt

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt                       go to state 83
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 38

    2 compilation_unit: compilation_unit body_decl .

    $default  reduce using rule 2 (compilation_unit)


state 39

    7 body_decl: namespace_decl .

    $default  reduce using rule 7 (body_decl)


state 40

    8 body_decl: function_define .

    $default  reduce using rule 8 (body_decl)


state 41

  149 variable_decl_stmt: typename_T . IDENT SEMI
  150 variable_init_stmt: typename_T . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 84


state 42

   73 typename_group: .  [IDENT, DOT, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, SEMI, AS, INSTANCEOF]
   74               | . LSB typename_list RSB
   77 typename_T: fqcn_part . typename_group
   79 fqcn_part: fqcn_part . COLO_COLO IDENT
  125 lhs: fqcn_part . typename_group

    COLO_COLO  shift, and go to state 85
    LSB        shift, and go to state 86

    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 87


state 43

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  136 stmt: expression . stmt_term
  175 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 109


state 44

   82 expression: expression_nobrace .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS, INSTANCEOF]
  118 expression_nobrace: expression_nobrace . LRB argument_list RRB
  119                   | expression_nobrace . LRB RRB

    LRB  shift, and go to state 110

    LRB       [reduce using rule 82 (expression)]
    $default  reduce using rule 82 (expression)


state 45

   97 expression_nobrace: lhs . ASSIGN expression
   98                   | lhs . ADD_ASSIGN expression
   99                   | lhs . SUB_ASSIGN expression
  100                   | lhs . MUL_ASSIGN expression
  101                   | lhs . DIV_ASSIGN expression
  102                   | lhs . MOD_ASSIGN expression
  103                   | lhs . AND_ASSIGN expression
  104                   | lhs . OR_ASSIGN expression
  105                   | lhs . EXC_OR_ASSIGN expression
  106                   | lhs . LSHIFT_ASSIGN expression
  107                   | lhs . RSHIFT_ASSIGN expression
  124                   | lhs .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS, INSTANCEOF]

    ASSIGN         shift, and go to state 111
    ADD_ASSIGN     shift, and go to state 112
    SUB_ASSIGN     shift, and go to state 113
    MUL_ASSIGN     shift, and go to state 114
    DIV_ASSIGN     shift, and go to state 115
    MOD_ASSIGN     shift, and go to state 116
    AND_ASSIGN     shift, and go to state 117
    OR_ASSIGN      shift, and go to state 118
    LSHIFT_ASSIGN  shift, and go to state 119
    RSHIFT_ASSIGN  shift, and go to state 120
    EXC_OR_ASSIGN  shift, and go to state 121

    $default  reduce using rule 124 (expression_nobrace)


state 46

   81 expression: primary .

    $default  reduce using rule 81 (expression)


state 47

    6 body_decl: stmt .

    $default  reduce using rule 6 (body_decl)


state 48

  137 stmt: variable_decl_stmt .

    $default  reduce using rule 137 (stmt)


state 49

  138 stmt: variable_init_stmt .

    $default  reduce using rule 138 (stmt)


state 50

  139 stmt: inferenced_type_init_stmt .

    $default  reduce using rule 139 (stmt)


state 51

  140 stmt: if_stmt .

    $default  reduce using rule 140 (stmt)


state 52

  141 stmt: while_stmt .

    $default  reduce using rule 141 (stmt)


state 53

  142 stmt: break_stmt .

    $default  reduce using rule 142 (stmt)


state 54

  143 stmt: continue_stmt .

    $default  reduce using rule 143 (stmt)


state 55

  144 stmt: return_stmt .

    $default  reduce using rule 144 (stmt)


state 56

  145 stmt: throw_stmt .

    $default  reduce using rule 145 (stmt)


state 57

  146 stmt: try_stmt .

    $default  reduce using rule 146 (stmt)


state 58

  147 stmt: assert_stmt .

    $default  reduce using rule 147 (stmt)


state 59

  148 stmt: defer_stmt .

    $default  reduce using rule 148 (stmt)


state 60

    1 compilation_unit: init_decl body_decl .

    $default  reduce using rule 1 (compilation_unit)


state 61

   22 import_list: import_list import .

    $default  reduce using rule 22 (import_list)


state 62

   73 typename_group: .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LCB, LRB, RRB, SEMI, AS, INSTANCEOF]
   74               | . LSB typename_list RSB
   79 fqcn_part: fqcn_part . COLO_COLO IDENT
  125 lhs: fqcn_part . typename_group

    COLO_COLO  shift, and go to state 85
    LSB        shift, and go to state 86

    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 122


state 63

   83 expression_nobrace: ADD expression .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   85                   | expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 107

    $default  reduce using rule 83 (expression_nobrace)

    Conflict between rule 83 and token DOT resolved as reduce (DOT < POSITIVE).
    Conflict between rule 83 and token ADD resolved as reduce (ADD < POSITIVE).
    Conflict between rule 83 and token SUB resolved as reduce (SUB < POSITIVE).
    Conflict between rule 83 and token MUL resolved as reduce (MUL < POSITIVE).
    Conflict between rule 83 and token DIV resolved as reduce (DIV < POSITIVE).
    Conflict between rule 83 and token MOD resolved as reduce (MOD < POSITIVE).
    Conflict between rule 83 and token LSHIFT resolved as reduce (LSHIFT < POSITIVE).
    Conflict between rule 83 and token RSHIFT resolved as reduce (RSHIFT < POSITIVE).
    Conflict between rule 83 and token EQUAL resolved as reduce (EQUAL < POSITIVE).
    Conflict between rule 83 and token NOTEQUAL resolved as reduce (NOTEQUAL < POSITIVE).
    Conflict between rule 83 and token GT resolved as reduce (GT < POSITIVE).
    Conflict between rule 83 and token GE resolved as reduce (GE < POSITIVE).
    Conflict between rule 83 and token LT resolved as reduce (LT < POSITIVE).
    Conflict between rule 83 and token LE resolved as reduce (LE < POSITIVE).
    Conflict between rule 83 and token BIT_AND resolved as reduce (BIT_AND < POSITIVE).
    Conflict between rule 83 and token LOGIC_AND resolved as reduce (LOGIC_AND < POSITIVE).
    Conflict between rule 83 and token BIT_OR resolved as reduce (BIT_OR < POSITIVE).
    Conflict between rule 83 and token LOGIC_OR resolved as reduce (LOGIC_OR < POSITIVE).
    Conflict between rule 83 and token EXC_OR resolved as reduce (EXC_OR < POSITIVE).
    Conflict between rule 83 and token AS resolved as shift (POSITIVE < AS).
    Conflict between rule 83 and token INSTANCEOF resolved as reduce (INSTANCEOF < POSITIVE).


state 64

   84 expression_nobrace: SUB expression .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   85                   | expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 107

    $default  reduce using rule 84 (expression_nobrace)

    Conflict between rule 84 and token DOT resolved as reduce (DOT < NEGATIVE).
    Conflict between rule 84 and token ADD resolved as reduce (ADD < NEGATIVE).
    Conflict between rule 84 and token SUB resolved as reduce (SUB < NEGATIVE).
    Conflict between rule 84 and token MUL resolved as reduce (MUL < NEGATIVE).
    Conflict between rule 84 and token DIV resolved as reduce (DIV < NEGATIVE).
    Conflict between rule 84 and token MOD resolved as reduce (MOD < NEGATIVE).
    Conflict between rule 84 and token LSHIFT resolved as reduce (LSHIFT < NEGATIVE).
    Conflict between rule 84 and token RSHIFT resolved as reduce (RSHIFT < NEGATIVE).
    Conflict between rule 84 and token EQUAL resolved as reduce (EQUAL < NEGATIVE).
    Conflict between rule 84 and token NOTEQUAL resolved as reduce (NOTEQUAL < NEGATIVE).
    Conflict between rule 84 and token GT resolved as reduce (GT < NEGATIVE).
    Conflict between rule 84 and token GE resolved as reduce (GE < NEGATIVE).
    Conflict between rule 84 and token LT resolved as reduce (LT < NEGATIVE).
    Conflict between rule 84 and token LE resolved as reduce (LE < NEGATIVE).
    Conflict between rule 84 and token BIT_AND resolved as reduce (BIT_AND < NEGATIVE).
    Conflict between rule 84 and token LOGIC_AND resolved as reduce (LOGIC_AND < NEGATIVE).
    Conflict between rule 84 and token BIT_OR resolved as reduce (BIT_OR < NEGATIVE).
    Conflict between rule 84 and token LOGIC_OR resolved as reduce (LOGIC_OR < NEGATIVE).
    Conflict between rule 84 and token EXC_OR resolved as reduce (EXC_OR < NEGATIVE).
    Conflict between rule 84 and token AS resolved as shift (NEGATIVE < AS).
    Conflict between rule 84 and token INSTANCEOF resolved as reduce (INSTANCEOF < NEGATIVE).


state 65

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  117                   | NOT expression .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  126 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 107

    $default  reduce using rule 117 (expression_nobrace)

    Conflict between rule 117 and token DOT resolved as reduce (DOT < NOT).
    Conflict between rule 117 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 117 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 117 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 117 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 117 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 117 and token LSHIFT resolved as reduce (LSHIFT < NOT).
    Conflict between rule 117 and token RSHIFT resolved as reduce (RSHIFT < NOT).
    Conflict between rule 117 and token EQUAL resolved as reduce (EQUAL < NOT).
    Conflict between rule 117 and token NOTEQUAL resolved as reduce (NOTEQUAL < NOT).
    Conflict between rule 117 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 117 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 117 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 117 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 117 and token BIT_AND resolved as reduce (BIT_AND < NOT).
    Conflict between rule 117 and token LOGIC_AND resolved as reduce (LOGIC_AND < NOT).
    Conflict between rule 117 and token BIT_OR resolved as reduce (BIT_OR < NOT).
    Conflict between rule 117 and token LOGIC_OR resolved as reduce (LOGIC_OR < NOT).
    Conflict between rule 117 and token EXC_OR resolved as reduce (EXC_OR < NOT).
    Conflict between rule 117 and token AS resolved as shift (NOT < AS).
    Conflict between rule 117 and token INSTANCEOF resolved as reduce (INSTANCEOF < NOT).


state 66

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  116                   | CHILDA expression .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  126 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 107

    $default  reduce using rule 116 (expression_nobrace)

    Conflict between rule 116 and token DOT resolved as reduce (DOT < CHILDA).
    Conflict between rule 116 and token ADD resolved as reduce (ADD < CHILDA).
    Conflict between rule 116 and token SUB resolved as reduce (SUB < CHILDA).
    Conflict between rule 116 and token MUL resolved as reduce (MUL < CHILDA).
    Conflict between rule 116 and token DIV resolved as reduce (DIV < CHILDA).
    Conflict between rule 116 and token MOD resolved as reduce (MOD < CHILDA).
    Conflict between rule 116 and token LSHIFT resolved as reduce (LSHIFT < CHILDA).
    Conflict between rule 116 and token RSHIFT resolved as reduce (RSHIFT < CHILDA).
    Conflict between rule 116 and token EQUAL resolved as reduce (EQUAL < CHILDA).
    Conflict between rule 116 and token NOTEQUAL resolved as reduce (NOTEQUAL < CHILDA).
    Conflict between rule 116 and token GT resolved as reduce (GT < CHILDA).
    Conflict between rule 116 and token GE resolved as reduce (GE < CHILDA).
    Conflict between rule 116 and token LT resolved as reduce (LT < CHILDA).
    Conflict between rule 116 and token LE resolved as reduce (LE < CHILDA).
    Conflict between rule 116 and token BIT_AND resolved as reduce (BIT_AND < CHILDA).
    Conflict between rule 116 and token LOGIC_AND resolved as reduce (LOGIC_AND < CHILDA).
    Conflict between rule 116 and token BIT_OR resolved as reduce (BIT_OR < CHILDA).
    Conflict between rule 116 and token LOGIC_OR resolved as reduce (LOGIC_OR < CHILDA).
    Conflict between rule 116 and token EXC_OR resolved as reduce (EXC_OR < CHILDA).
    Conflict between rule 116 and token AS resolved as shift (CHILDA < AS).
    Conflict between rule 116 and token INSTANCEOF resolved as reduce (INSTANCEOF < CHILDA).


state 67

   80 expression: LRB expression . RRB
   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    RRB         shift, and go to state 123
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108


state 68

  151 inferenced_type_init_stmt: VAR IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 124


state 69

   73 typename_group: .  [LRB]
   74               | . LSB typename_list RSB
   79 fqcn_part: fqcn_part . COLO_COLO IDENT
  120 expression_nobrace: NEW fqcn_part . typename_group LRB argument_list RRB
  121                   | NEW fqcn_part . typename_group LRB RRB

    COLO_COLO  shift, and go to state 85
    LSB        shift, and go to state 86

    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 125


state 70

   54 function_define: DEF IDENT . LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 126


state 71

   19 namespace_path: IDENT .

    $default  reduce using rule 19 (namespace_path)


state 72

    9 namespace_decl: NAMESPACE namespace_path . namespace_body
   10 namespace_body: . LCB namespace_member_decl_optional RCB
   20 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 127
    LCB  shift, and go to state 128

    namespace_body  go to state 129


state 73

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  162 return_stmt: RETURN expression . stmt_term
  175 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 130


state 74

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  152 if_stmt: IF expression . scope
  153        | IF expression . scope ELSE scope
  154        | IF expression . scope elif_list
  155        | IF expression . scope elif_list ELSE scope
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    LCB         shift, and go to state 79
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    scope  go to state 131


state 75

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  159 while_stmt: WHILE expression . scope_optional
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB
  173 scope_optional: . SEMI
  174               | . scope

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    LCB         shift, and go to state 79
    SEMI        shift, and go to state 132
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    scope           go to state 133
    scope_optional  go to state 134


state 76

  175 stmt_term: SEMI .

    $default  reduce using rule 175 (stmt_term)


state 77

  160 break_stmt: BREAK stmt_term .

    $default  reduce using rule 160 (break_stmt)


state 78

  161 continue_stmt: CONTINUE stmt_term .

    $default  reduce using rule 161 (continue_stmt)


state 79

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  134 stmt_list: . stmt
  135          | . stmt_list stmt
  136 stmt: . expression stmt_term
  137     | . variable_decl_stmt
  138     | . variable_init_stmt
  139     | . inferenced_type_init_stmt
  140     | . if_stmt
  141     | . while_stmt
  142     | . break_stmt
  143     | . continue_stmt
  144     | . return_stmt
  145     | . throw_stmt
  146     | . try_stmt
  147     | . assert_stmt
  148     | . defer_stmt
  149 variable_decl_stmt: . typename_T IDENT SEMI
  150 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  151 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  152 if_stmt: . IF expression scope
  153        | . IF expression scope ELSE scope
  154        | . IF expression scope elif_list
  155        | . IF expression scope elif_list ELSE scope
  159 while_stmt: . WHILE expression scope_optional
  160 break_stmt: . BREAK stmt_term
  161 continue_stmt: . CONTINUE stmt_term
  162 return_stmt: . RETURN expression stmt_term
  163 throw_stmt: . THROW expression stmt_term
  164 try_stmt: . TRY scope catch_stmt_list
  168 assert_stmt: . ASSERT_T expression COLON expression SEMI
  169            | . ASSERT_T expression SEMI
  170 defer_stmt: . DEFER stmt
  171 scope: LCB . stmt_list RCB
  172      | LCB . RCB

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    RCB             shift, and go to state 135
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt_list                  go to state 136
    stmt                       go to state 137
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 80

  164 try_stmt: TRY scope . catch_stmt_list
  165 catch_stmt_list: . catch_stmt
  166                | . catch_stmt_list catch_stmt
  167 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 138

    catch_stmt_list  go to state 139
    catch_stmt       go to state 140


state 81

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  163 throw_stmt: THROW expression . stmt_term
  175 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 141


state 82

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  168 assert_stmt: ASSERT_T expression . COLON expression SEMI
  169            | ASSERT_T expression . SEMI

    DOT         shift, and go to state 88
    COLON       shift, and go to state 142
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 143
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108


state 83

  170 defer_stmt: DEFER stmt .

    $default  reduce using rule 170 (defer_stmt)


state 84

  149 variable_decl_stmt: typename_T IDENT . SEMI
  150 variable_init_stmt: typename_T IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 144
    SEMI    shift, and go to state 145


state 85

   79 fqcn_part: fqcn_part COLO_COLO . IDENT

    IDENT  shift, and go to state 146


state 86

   74 typename_group: LSB . typename_list RSB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 147
    typename_T     go to state 148
    fqcn_part      go to state 149


state 87

   77 typename_T: fqcn_part typename_group .  [IDENT]
  125 lhs: fqcn_part typename_group .  [DOT, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, SEMI, AS, INSTANCEOF]

    IDENT     reduce using rule 77 (typename_T)
    $default  reduce using rule 125 (lhs)


state 88

  126 lhs: expression DOT . IDENT typename_group

    IDENT  shift, and go to state 150


state 89

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   85                   | expression ADD . expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 151
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 90

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   86                   | expression SUB . expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 152
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 91

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   87                   | expression MUL . expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 153
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 92

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   88                   | expression DIV . expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 154
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 93

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   89                   | expression MOD . expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 155
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 94

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  112                   | expression LSHIFT . expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 156
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 95

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  113                   | expression RSHIFT . expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 157
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 96

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   91                   | expression EQUAL . expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 158
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 97

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   92                   | expression NOTEQUAL . expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 159
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 98

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  108                   | expression GT . expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 160
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 99

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  109                   | expression GE . expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 161
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 100

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  110                   | expression LT . expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 162
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 101

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  111                   | expression LE . expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 163
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 102

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   93                   | expression BIT_AND . expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 164
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 103

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   96                   | expression LOGIC_AND . expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 165
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 104

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   90                   | expression BIT_OR . expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 166
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 105

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   95                   | expression LOGIC_OR . expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 167
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 106

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   94                   | expression EXC_OR . expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 168
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 107

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
  115 expression_nobrace: expression AS . typename_T

    IDENT  shift, and go to state 14

    typename_T  go to state 169
    fqcn_part   go to state 149


state 108

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
  114 expression_nobrace: expression INSTANCEOF . typename_T

    IDENT  shift, and go to state 14

    typename_T  go to state 170
    fqcn_part   go to state 149


state 109

  136 stmt: expression stmt_term .

    $default  reduce using rule 136 (stmt)


state 110

   71 argument_list: . expression
   72              | . argument_list COMMA expression
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  118                   | expression_nobrace LRB . argument_list RRB
  119                   | . expression_nobrace LRB RRB
  119                   | expression_nobrace LRB . RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 171
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 172
    fqcn_part           go to state 62
    expression          go to state 173
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 111

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   97                   | lhs ASSIGN . expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 174
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 112

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   98                   | lhs ADD_ASSIGN . expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 175
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 113

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
   99                   | lhs SUB_ASSIGN . expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 176
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 114

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  100                   | lhs MUL_ASSIGN . expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 177
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 115

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  101                   | lhs DIV_ASSIGN . expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 178
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 116

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  102                   | lhs MOD_ASSIGN . expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 179
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 117

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  103                   | lhs AND_ASSIGN . expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 180
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 118

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  104                   | lhs OR_ASSIGN . expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 181
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 119

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  106                   | lhs LSHIFT_ASSIGN . expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 182
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 120

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  107                   | lhs RSHIFT_ASSIGN . expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 183
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 121

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  105                   | lhs EXC_OR_ASSIGN . expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 184
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 122

  125 lhs: fqcn_part typename_group .

    $default  reduce using rule 125 (lhs)


state 123

   80 expression: LRB expression RRB .

    $default  reduce using rule 80 (expression)


state 124

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  151 inferenced_type_init_stmt: VAR IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 185
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 125

  120 expression_nobrace: NEW fqcn_part typename_group . LRB argument_list RRB
  121                   | NEW fqcn_part typename_group . LRB RRB

    LRB  shift, and go to state 186


state 126

   54 function_define: DEF IDENT LRB . parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT LRB . RRB ARROW typename_T scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 187

    parameter_list  go to state 188
    typename_T      go to state 189
    fqcn_part       go to state 149


state 127

   20 namespace_path: namespace_path DOT . IDENT

    IDENT  shift, and go to state 190


state 128

   10 namespace_body: LCB . namespace_member_decl_optional RCB
   11 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   12                      | . class_decl
   13                      | . interface_decl
   14                      | . enum_decl
   15 namespace_member_decl_list: . namespace_member_decl
   16                           | . namespace_member_decl_list namespace_member_decl
   17 namespace_member_decl_optional: .  [RCB]
   18                               | . namespace_member_decl_list
   30 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   32 enum_decl: . ENUM IDENT LCB ident_list RCB
   33          | . ENUM IDENT LCB ident_list COMMA RCB
   34 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 191
    CLASS      shift, and go to state 192
    ENUM       shift, and go to state 193
    NAMESPACE  shift, and go to state 194

    $default  reduce using rule 17 (namespace_member_decl_optional)

    namespace_member_decl           go to state 195
    namespace_member_decl_list      go to state 196
    namespace_member_decl_optional  go to state 197
    class_decl                      go to state 198
    enum_decl                       go to state 199
    interface_decl                  go to state 200


state 129

    9 namespace_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 9 (namespace_decl)


state 130

  162 return_stmt: RETURN expression stmt_term .

    $default  reduce using rule 162 (return_stmt)


state 131

  152 if_stmt: IF expression scope .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
  153        | IF expression scope . ELSE scope
  154        | IF expression scope . elif_list
  155        | IF expression scope . elif_list ELSE scope
  156 elif_list: . elif
  157          | . elif_list elif
  158 elif: . ELIF expression scope

    ELIF  shift, and go to state 201
    ELSE  shift, and go to state 202

    $default  reduce using rule 152 (if_stmt)

    elif_list  go to state 203
    elif       go to state 204


state 132

  173 scope_optional: SEMI .

    $default  reduce using rule 173 (scope_optional)


state 133

  174 scope_optional: scope .

    $default  reduce using rule 174 (scope_optional)


state 134

  159 while_stmt: WHILE expression scope_optional .

    $default  reduce using rule 159 (while_stmt)


state 135

  172 scope: LCB RCB .

    $default  reduce using rule 172 (scope)


state 136

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  135 stmt_list: stmt_list . stmt
  136 stmt: . expression stmt_term
  137     | . variable_decl_stmt
  138     | . variable_init_stmt
  139     | . inferenced_type_init_stmt
  140     | . if_stmt
  141     | . while_stmt
  142     | . break_stmt
  143     | . continue_stmt
  144     | . return_stmt
  145     | . throw_stmt
  146     | . try_stmt
  147     | . assert_stmt
  148     | . defer_stmt
  149 variable_decl_stmt: . typename_T IDENT SEMI
  150 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  151 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  152 if_stmt: . IF expression scope
  153        | . IF expression scope ELSE scope
  154        | . IF expression scope elif_list
  155        | . IF expression scope elif_list ELSE scope
  159 while_stmt: . WHILE expression scope_optional
  160 break_stmt: . BREAK stmt_term
  161 continue_stmt: . CONTINUE stmt_term
  162 return_stmt: . RETURN expression stmt_term
  163 throw_stmt: . THROW expression stmt_term
  164 try_stmt: . TRY scope catch_stmt_list
  168 assert_stmt: . ASSERT_T expression COLON expression SEMI
  169            | . ASSERT_T expression SEMI
  170 defer_stmt: . DEFER stmt
  171 scope: LCB stmt_list . RCB

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    RCB             shift, and go to state 205
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt                       go to state 206
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 137

  134 stmt_list: stmt .

    $default  reduce using rule 134 (stmt_list)


state 138

  167 catch_stmt: CATCH . LRB typename_T IDENT RRB scope

    LRB  shift, and go to state 207


state 139

  164 try_stmt: TRY scope catch_stmt_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
  166 catch_stmt_list: catch_stmt_list . catch_stmt
  167 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 138

    $default  reduce using rule 164 (try_stmt)

    catch_stmt  go to state 208


state 140

  165 catch_stmt_list: catch_stmt .

    $default  reduce using rule 165 (catch_stmt_list)


state 141

  163 throw_stmt: THROW expression stmt_term .

    $default  reduce using rule 163 (throw_stmt)


state 142

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  168 assert_stmt: ASSERT_T expression COLON . expression SEMI

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 209
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 143

  169 assert_stmt: ASSERT_T expression SEMI .

    $default  reduce using rule 169 (assert_stmt)


state 144

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  150 variable_init_stmt: typename_T IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 210
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 145

  149 variable_decl_stmt: typename_T IDENT SEMI .

    $default  reduce using rule 149 (variable_decl_stmt)


state 146

   79 fqcn_part: fqcn_part COLO_COLO IDENT .

    $default  reduce using rule 79 (fqcn_part)


state 147

   74 typename_group: LSB typename_list . RSB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 211
    RSB    shift, and go to state 212


state 148

   75 typename_list: typename_T .

    $default  reduce using rule 75 (typename_list)


state 149

   73 typename_group: .  [IDENT, DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, RSB, SEMI, AS, INSTANCEOF]
   74               | . LSB typename_list RSB
   77 typename_T: fqcn_part . typename_group
   79 fqcn_part: fqcn_part . COLO_COLO IDENT

    COLO_COLO  shift, and go to state 85
    LSB        shift, and go to state 86

    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 213


state 150

   73 typename_group: .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LCB, LRB, RRB, SEMI, AS, INSTANCEOF]
   74               | . LSB typename_list RSB
  126 lhs: expression DOT IDENT . typename_group

    LSB  shift, and go to state 86

    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 214


state 151

   85 expression_nobrace: expression . ADD expression  [COMMA, COLON, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   85                   | expression ADD expression .  [COMMA, COLON, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 85 (expression_nobrace)

    Conflict between rule 85 and token DOT resolved as shift (ADD < DOT).
    Conflict between rule 85 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 85 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 85 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 85 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 85 and token MOD resolved as shift (ADD < MOD).
    Conflict between rule 85 and token LSHIFT resolved as reduce (LSHIFT < ADD).
    Conflict between rule 85 and token RSHIFT resolved as reduce (RSHIFT < ADD).
    Conflict between rule 85 and token EQUAL resolved as reduce (EQUAL < ADD).
    Conflict between rule 85 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD).
    Conflict between rule 85 and token GT resolved as reduce (GT < ADD).
    Conflict between rule 85 and token GE resolved as reduce (GE < ADD).
    Conflict between rule 85 and token LT resolved as reduce (LT < ADD).
    Conflict between rule 85 and token LE resolved as reduce (LE < ADD).
    Conflict between rule 85 and token BIT_AND resolved as reduce (BIT_AND < ADD).
    Conflict between rule 85 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD).
    Conflict between rule 85 and token BIT_OR resolved as reduce (BIT_OR < ADD).
    Conflict between rule 85 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD).
    Conflict between rule 85 and token EXC_OR resolved as reduce (EXC_OR < ADD).
    Conflict between rule 85 and token AS resolved as shift (ADD < AS).
    Conflict between rule 85 and token INSTANCEOF resolved as reduce (INSTANCEOF < ADD).


state 152

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression  [COMMA, COLON, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   86                   | expression SUB expression .  [COMMA, COLON, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 86 (expression_nobrace)

    Conflict between rule 86 and token DOT resolved as shift (SUB < DOT).
    Conflict between rule 86 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 86 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 86 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 86 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 86 and token MOD resolved as shift (SUB < MOD).
    Conflict between rule 86 and token LSHIFT resolved as reduce (LSHIFT < SUB).
    Conflict between rule 86 and token RSHIFT resolved as reduce (RSHIFT < SUB).
    Conflict between rule 86 and token EQUAL resolved as reduce (EQUAL < SUB).
    Conflict between rule 86 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB).
    Conflict between rule 86 and token GT resolved as reduce (GT < SUB).
    Conflict between rule 86 and token GE resolved as reduce (GE < SUB).
    Conflict between rule 86 and token LT resolved as reduce (LT < SUB).
    Conflict between rule 86 and token LE resolved as reduce (LE < SUB).
    Conflict between rule 86 and token BIT_AND resolved as reduce (BIT_AND < SUB).
    Conflict between rule 86 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB).
    Conflict between rule 86 and token BIT_OR resolved as reduce (BIT_OR < SUB).
    Conflict between rule 86 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB).
    Conflict between rule 86 and token EXC_OR resolved as reduce (EXC_OR < SUB).
    Conflict between rule 86 and token AS resolved as shift (SUB < AS).
    Conflict between rule 86 and token INSTANCEOF resolved as reduce (INSTANCEOF < SUB).


state 153

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   87                   | expression MUL expression .  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    AS   shift, and go to state 107

    $default  reduce using rule 87 (expression_nobrace)

    Conflict between rule 87 and token DOT resolved as shift (MUL < DOT).
    Conflict between rule 87 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 87 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 87 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 87 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 87 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 87 and token LSHIFT resolved as reduce (LSHIFT < MUL).
    Conflict between rule 87 and token RSHIFT resolved as reduce (RSHIFT < MUL).
    Conflict between rule 87 and token EQUAL resolved as reduce (EQUAL < MUL).
    Conflict between rule 87 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL).
    Conflict between rule 87 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 87 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 87 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 87 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 87 and token BIT_AND resolved as reduce (BIT_AND < MUL).
    Conflict between rule 87 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL).
    Conflict between rule 87 and token BIT_OR resolved as reduce (BIT_OR < MUL).
    Conflict between rule 87 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL).
    Conflict between rule 87 and token EXC_OR resolved as reduce (EXC_OR < MUL).
    Conflict between rule 87 and token AS resolved as shift (MUL < AS).
    Conflict between rule 87 and token INSTANCEOF resolved as reduce (INSTANCEOF < MUL).


state 154

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   88                   | expression DIV expression .  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    AS   shift, and go to state 107

    $default  reduce using rule 88 (expression_nobrace)

    Conflict between rule 88 and token DOT resolved as shift (DIV < DOT).
    Conflict between rule 88 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 88 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 88 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 88 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 88 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 88 and token LSHIFT resolved as reduce (LSHIFT < DIV).
    Conflict between rule 88 and token RSHIFT resolved as reduce (RSHIFT < DIV).
    Conflict between rule 88 and token EQUAL resolved as reduce (EQUAL < DIV).
    Conflict between rule 88 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV).
    Conflict between rule 88 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 88 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 88 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 88 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 88 and token BIT_AND resolved as reduce (BIT_AND < DIV).
    Conflict between rule 88 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV).
    Conflict between rule 88 and token BIT_OR resolved as reduce (BIT_OR < DIV).
    Conflict between rule 88 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV).
    Conflict between rule 88 and token EXC_OR resolved as reduce (EXC_OR < DIV).
    Conflict between rule 88 and token AS resolved as shift (DIV < AS).
    Conflict between rule 88 and token INSTANCEOF resolved as reduce (INSTANCEOF < DIV).


state 155

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   89                   | expression MOD expression .  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    AS   shift, and go to state 107

    $default  reduce using rule 89 (expression_nobrace)

    Conflict between rule 89 and token DOT resolved as shift (MOD < DOT).
    Conflict between rule 89 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 89 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 89 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 89 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 89 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 89 and token LSHIFT resolved as reduce (LSHIFT < MOD).
    Conflict between rule 89 and token RSHIFT resolved as reduce (RSHIFT < MOD).
    Conflict between rule 89 and token EQUAL resolved as reduce (EQUAL < MOD).
    Conflict between rule 89 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD).
    Conflict between rule 89 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 89 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 89 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 89 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 89 and token BIT_AND resolved as reduce (BIT_AND < MOD).
    Conflict between rule 89 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD).
    Conflict between rule 89 and token BIT_OR resolved as reduce (BIT_OR < MOD).
    Conflict between rule 89 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD).
    Conflict between rule 89 and token EXC_OR resolved as reduce (EXC_OR < MOD).
    Conflict between rule 89 and token AS resolved as shift (MOD < AS).
    Conflict between rule 89 and token INSTANCEOF resolved as reduce (INSTANCEOF < MOD).


state 156

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  112                   | expression LSHIFT expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 112 (expression_nobrace)

    Conflict between rule 112 and token DOT resolved as shift (LSHIFT < DOT).
    Conflict between rule 112 and token ADD resolved as shift (LSHIFT < ADD).
    Conflict between rule 112 and token SUB resolved as shift (LSHIFT < SUB).
    Conflict between rule 112 and token MUL resolved as shift (LSHIFT < MUL).
    Conflict between rule 112 and token DIV resolved as shift (LSHIFT < DIV).
    Conflict between rule 112 and token MOD resolved as shift (LSHIFT < MOD).
    Conflict between rule 112 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 112 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 112 and token EQUAL resolved as reduce (EQUAL < LSHIFT).
    Conflict between rule 112 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT).
    Conflict between rule 112 and token GT resolved as shift (LSHIFT < GT).
    Conflict between rule 112 and token GE resolved as shift (LSHIFT < GE).
    Conflict between rule 112 and token LT resolved as shift (LSHIFT < LT).
    Conflict between rule 112 and token LE resolved as shift (LSHIFT < LE).
    Conflict between rule 112 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT).
    Conflict between rule 112 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT).
    Conflict between rule 112 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT).
    Conflict between rule 112 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT).
    Conflict between rule 112 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT).
    Conflict between rule 112 and token AS resolved as shift (LSHIFT < AS).
    Conflict between rule 112 and token INSTANCEOF resolved as shift (LSHIFT < INSTANCEOF).


state 157

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  113                   | expression RSHIFT expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 113 (expression_nobrace)

    Conflict between rule 113 and token DOT resolved as shift (RSHIFT < DOT).
    Conflict between rule 113 and token ADD resolved as shift (RSHIFT < ADD).
    Conflict between rule 113 and token SUB resolved as shift (RSHIFT < SUB).
    Conflict between rule 113 and token MUL resolved as shift (RSHIFT < MUL).
    Conflict between rule 113 and token DIV resolved as shift (RSHIFT < DIV).
    Conflict between rule 113 and token MOD resolved as shift (RSHIFT < MOD).
    Conflict between rule 113 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 113 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 113 and token EQUAL resolved as reduce (EQUAL < RSHIFT).
    Conflict between rule 113 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT).
    Conflict between rule 113 and token GT resolved as shift (RSHIFT < GT).
    Conflict between rule 113 and token GE resolved as shift (RSHIFT < GE).
    Conflict between rule 113 and token LT resolved as shift (RSHIFT < LT).
    Conflict between rule 113 and token LE resolved as shift (RSHIFT < LE).
    Conflict between rule 113 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT).
    Conflict between rule 113 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT).
    Conflict between rule 113 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT).
    Conflict between rule 113 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT).
    Conflict between rule 113 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT).
    Conflict between rule 113 and token AS resolved as shift (RSHIFT < AS).
    Conflict between rule 113 and token INSTANCEOF resolved as shift (RSHIFT < INSTANCEOF).


state 158

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression  [COMMA, COLON, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
   91                   | expression EQUAL expression .  [COMMA, COLON, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 91 (expression_nobrace)

    Conflict between rule 91 and token DOT resolved as shift (EQUAL < DOT).
    Conflict between rule 91 and token ADD resolved as shift (EQUAL < ADD).
    Conflict between rule 91 and token SUB resolved as shift (EQUAL < SUB).
    Conflict between rule 91 and token MUL resolved as shift (EQUAL < MUL).
    Conflict between rule 91 and token DIV resolved as shift (EQUAL < DIV).
    Conflict between rule 91 and token MOD resolved as shift (EQUAL < MOD).
    Conflict between rule 91 and token LSHIFT resolved as shift (EQUAL < LSHIFT).
    Conflict between rule 91 and token RSHIFT resolved as shift (EQUAL < RSHIFT).
    Conflict between rule 91 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 91 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 91 and token GT resolved as shift (EQUAL < GT).
    Conflict between rule 91 and token GE resolved as shift (EQUAL < GE).
    Conflict between rule 91 and token LT resolved as shift (EQUAL < LT).
    Conflict between rule 91 and token LE resolved as shift (EQUAL < LE).
    Conflict between rule 91 and token BIT_AND resolved as shift (EQUAL < BIT_AND).
    Conflict between rule 91 and token LOGIC_AND resolved as shift (EQUAL < LOGIC_AND).
    Conflict between rule 91 and token BIT_OR resolved as shift (EQUAL < BIT_OR).
    Conflict between rule 91 and token LOGIC_OR resolved as shift (EQUAL < LOGIC_OR).
    Conflict between rule 91 and token EXC_OR resolved as shift (EQUAL < EXC_OR).
    Conflict between rule 91 and token AS resolved as shift (EQUAL < AS).
    Conflict between rule 91 and token INSTANCEOF resolved as shift (EQUAL < INSTANCEOF).


state 159

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression  [COMMA, COLON, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
   92                   | expression NOTEQUAL expression .  [COMMA, COLON, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 92 (expression_nobrace)

    Conflict between rule 92 and token DOT resolved as shift (NOTEQUAL < DOT).
    Conflict between rule 92 and token ADD resolved as shift (NOTEQUAL < ADD).
    Conflict between rule 92 and token SUB resolved as shift (NOTEQUAL < SUB).
    Conflict between rule 92 and token MUL resolved as shift (NOTEQUAL < MUL).
    Conflict between rule 92 and token DIV resolved as shift (NOTEQUAL < DIV).
    Conflict between rule 92 and token MOD resolved as shift (NOTEQUAL < MOD).
    Conflict between rule 92 and token LSHIFT resolved as shift (NOTEQUAL < LSHIFT).
    Conflict between rule 92 and token RSHIFT resolved as shift (NOTEQUAL < RSHIFT).
    Conflict between rule 92 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 92 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 92 and token GT resolved as shift (NOTEQUAL < GT).
    Conflict between rule 92 and token GE resolved as shift (NOTEQUAL < GE).
    Conflict between rule 92 and token LT resolved as shift (NOTEQUAL < LT).
    Conflict between rule 92 and token LE resolved as shift (NOTEQUAL < LE).
    Conflict between rule 92 and token BIT_AND resolved as shift (NOTEQUAL < BIT_AND).
    Conflict between rule 92 and token LOGIC_AND resolved as shift (NOTEQUAL < LOGIC_AND).
    Conflict between rule 92 and token BIT_OR resolved as shift (NOTEQUAL < BIT_OR).
    Conflict between rule 92 and token LOGIC_OR resolved as shift (NOTEQUAL < LOGIC_OR).
    Conflict between rule 92 and token EXC_OR resolved as shift (NOTEQUAL < EXC_OR).
    Conflict between rule 92 and token AS resolved as shift (NOTEQUAL < AS).
    Conflict between rule 92 and token INSTANCEOF resolved as shift (NOTEQUAL < INSTANCEOF).


state 160

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  108                   | expression GT expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 108 (expression_nobrace)

    Conflict between rule 108 and token DOT resolved as shift (GT < DOT).
    Conflict between rule 108 and token ADD resolved as shift (GT < ADD).
    Conflict between rule 108 and token SUB resolved as shift (GT < SUB).
    Conflict between rule 108 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 108 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 108 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 108 and token LSHIFT resolved as reduce (LSHIFT < GT).
    Conflict between rule 108 and token RSHIFT resolved as reduce (RSHIFT < GT).
    Conflict between rule 108 and token EQUAL resolved as reduce (EQUAL < GT).
    Conflict between rule 108 and token NOTEQUAL resolved as reduce (NOTEQUAL < GT).
    Conflict between rule 108 and token GT resolved as reduce (%left GT).
    Conflict between rule 108 and token GE resolved as reduce (%left GE).
    Conflict between rule 108 and token LT resolved as reduce (%left LT).
    Conflict between rule 108 and token LE resolved as reduce (%left LE).
    Conflict between rule 108 and token BIT_AND resolved as reduce (BIT_AND < GT).
    Conflict between rule 108 and token LOGIC_AND resolved as reduce (LOGIC_AND < GT).
    Conflict between rule 108 and token BIT_OR resolved as reduce (BIT_OR < GT).
    Conflict between rule 108 and token LOGIC_OR resolved as reduce (LOGIC_OR < GT).
    Conflict between rule 108 and token EXC_OR resolved as reduce (EXC_OR < GT).
    Conflict between rule 108 and token AS resolved as shift (GT < AS).
    Conflict between rule 108 and token INSTANCEOF resolved as reduce (%left INSTANCEOF).


state 161

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  109                   | expression GE expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 109 (expression_nobrace)

    Conflict between rule 109 and token DOT resolved as shift (GE < DOT).
    Conflict between rule 109 and token ADD resolved as shift (GE < ADD).
    Conflict between rule 109 and token SUB resolved as shift (GE < SUB).
    Conflict between rule 109 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 109 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 109 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 109 and token LSHIFT resolved as reduce (LSHIFT < GE).
    Conflict between rule 109 and token RSHIFT resolved as reduce (RSHIFT < GE).
    Conflict between rule 109 and token EQUAL resolved as reduce (EQUAL < GE).
    Conflict between rule 109 and token NOTEQUAL resolved as reduce (NOTEQUAL < GE).
    Conflict between rule 109 and token GT resolved as reduce (%left GT).
    Conflict between rule 109 and token GE resolved as reduce (%left GE).
    Conflict between rule 109 and token LT resolved as reduce (%left LT).
    Conflict between rule 109 and token LE resolved as reduce (%left LE).
    Conflict between rule 109 and token BIT_AND resolved as reduce (BIT_AND < GE).
    Conflict between rule 109 and token LOGIC_AND resolved as reduce (LOGIC_AND < GE).
    Conflict between rule 109 and token BIT_OR resolved as reduce (BIT_OR < GE).
    Conflict between rule 109 and token LOGIC_OR resolved as reduce (LOGIC_OR < GE).
    Conflict between rule 109 and token EXC_OR resolved as reduce (EXC_OR < GE).
    Conflict between rule 109 and token AS resolved as shift (GE < AS).
    Conflict between rule 109 and token INSTANCEOF resolved as reduce (%left INSTANCEOF).


state 162

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  110                   | expression LT expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 110 (expression_nobrace)

    Conflict between rule 110 and token DOT resolved as shift (LT < DOT).
    Conflict between rule 110 and token ADD resolved as shift (LT < ADD).
    Conflict between rule 110 and token SUB resolved as shift (LT < SUB).
    Conflict between rule 110 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 110 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 110 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 110 and token LSHIFT resolved as reduce (LSHIFT < LT).
    Conflict between rule 110 and token RSHIFT resolved as reduce (RSHIFT < LT).
    Conflict between rule 110 and token EQUAL resolved as reduce (EQUAL < LT).
    Conflict between rule 110 and token NOTEQUAL resolved as reduce (NOTEQUAL < LT).
    Conflict between rule 110 and token GT resolved as reduce (%left GT).
    Conflict between rule 110 and token GE resolved as reduce (%left GE).
    Conflict between rule 110 and token LT resolved as reduce (%left LT).
    Conflict between rule 110 and token LE resolved as reduce (%left LE).
    Conflict between rule 110 and token BIT_AND resolved as reduce (BIT_AND < LT).
    Conflict between rule 110 and token LOGIC_AND resolved as reduce (LOGIC_AND < LT).
    Conflict between rule 110 and token BIT_OR resolved as reduce (BIT_OR < LT).
    Conflict between rule 110 and token LOGIC_OR resolved as reduce (LOGIC_OR < LT).
    Conflict between rule 110 and token EXC_OR resolved as reduce (EXC_OR < LT).
    Conflict between rule 110 and token AS resolved as shift (LT < AS).
    Conflict between rule 110 and token INSTANCEOF resolved as reduce (%left INSTANCEOF).


state 163

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  111                   | expression LE expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 111 (expression_nobrace)

    Conflict between rule 111 and token DOT resolved as shift (LE < DOT).
    Conflict between rule 111 and token ADD resolved as shift (LE < ADD).
    Conflict between rule 111 and token SUB resolved as shift (LE < SUB).
    Conflict between rule 111 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 111 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 111 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 111 and token LSHIFT resolved as reduce (LSHIFT < LE).
    Conflict between rule 111 and token RSHIFT resolved as reduce (RSHIFT < LE).
    Conflict between rule 111 and token EQUAL resolved as reduce (EQUAL < LE).
    Conflict between rule 111 and token NOTEQUAL resolved as reduce (NOTEQUAL < LE).
    Conflict between rule 111 and token GT resolved as reduce (%left GT).
    Conflict between rule 111 and token GE resolved as reduce (%left GE).
    Conflict between rule 111 and token LT resolved as reduce (%left LT).
    Conflict between rule 111 and token LE resolved as reduce (%left LE).
    Conflict between rule 111 and token BIT_AND resolved as reduce (BIT_AND < LE).
    Conflict between rule 111 and token LOGIC_AND resolved as reduce (LOGIC_AND < LE).
    Conflict between rule 111 and token BIT_OR resolved as reduce (BIT_OR < LE).
    Conflict between rule 111 and token LOGIC_OR resolved as reduce (LOGIC_OR < LE).
    Conflict between rule 111 and token EXC_OR resolved as reduce (EXC_OR < LE).
    Conflict between rule 111 and token AS resolved as shift (LE < AS).
    Conflict between rule 111 and token INSTANCEOF resolved as reduce (%left INSTANCEOF).


state 164

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
   93                   | expression BIT_AND expression .  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_OR      shift, and go to state 104
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 93 (expression_nobrace)

    Conflict between rule 93 and token DOT resolved as shift (BIT_AND < DOT).
    Conflict between rule 93 and token ADD resolved as shift (BIT_AND < ADD).
    Conflict between rule 93 and token SUB resolved as shift (BIT_AND < SUB).
    Conflict between rule 93 and token MUL resolved as shift (BIT_AND < MUL).
    Conflict between rule 93 and token DIV resolved as shift (BIT_AND < DIV).
    Conflict between rule 93 and token MOD resolved as shift (BIT_AND < MOD).
    Conflict between rule 93 and token LSHIFT resolved as shift (BIT_AND < LSHIFT).
    Conflict between rule 93 and token RSHIFT resolved as shift (BIT_AND < RSHIFT).
    Conflict between rule 93 and token EQUAL resolved as reduce (EQUAL < BIT_AND).
    Conflict between rule 93 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_AND).
    Conflict between rule 93 and token GT resolved as shift (BIT_AND < GT).
    Conflict between rule 93 and token GE resolved as shift (BIT_AND < GE).
    Conflict between rule 93 and token LT resolved as shift (BIT_AND < LT).
    Conflict between rule 93 and token LE resolved as shift (BIT_AND < LE).
    Conflict between rule 93 and token BIT_AND resolved as reduce (%left BIT_AND).
    Conflict between rule 93 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_AND).
    Conflict between rule 93 and token BIT_OR resolved as shift (BIT_AND < BIT_OR).
    Conflict between rule 93 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_AND).
    Conflict between rule 93 and token EXC_OR resolved as shift (BIT_AND < EXC_OR).
    Conflict between rule 93 and token AS resolved as shift (BIT_AND < AS).
    Conflict between rule 93 and token INSTANCEOF resolved as shift (BIT_AND < INSTANCEOF).


state 165

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression  [COMMA, COLON, EQUAL, NOTEQUAL, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
   96                   | expression LOGIC_AND expression .  [COMMA, COLON, EQUAL, NOTEQUAL, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    BIT_OR      shift, and go to state 104
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 96 (expression_nobrace)

    Conflict between rule 96 and token DOT resolved as shift (LOGIC_AND < DOT).
    Conflict between rule 96 and token ADD resolved as shift (LOGIC_AND < ADD).
    Conflict between rule 96 and token SUB resolved as shift (LOGIC_AND < SUB).
    Conflict between rule 96 and token MUL resolved as shift (LOGIC_AND < MUL).
    Conflict between rule 96 and token DIV resolved as shift (LOGIC_AND < DIV).
    Conflict between rule 96 and token MOD resolved as shift (LOGIC_AND < MOD).
    Conflict between rule 96 and token LSHIFT resolved as shift (LOGIC_AND < LSHIFT).
    Conflict between rule 96 and token RSHIFT resolved as shift (LOGIC_AND < RSHIFT).
    Conflict between rule 96 and token EQUAL resolved as reduce (EQUAL < LOGIC_AND).
    Conflict between rule 96 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_AND).
    Conflict between rule 96 and token GT resolved as shift (LOGIC_AND < GT).
    Conflict between rule 96 and token GE resolved as shift (LOGIC_AND < GE).
    Conflict between rule 96 and token LT resolved as shift (LOGIC_AND < LT).
    Conflict between rule 96 and token LE resolved as shift (LOGIC_AND < LE).
    Conflict between rule 96 and token BIT_AND resolved as shift (LOGIC_AND < BIT_AND).
    Conflict between rule 96 and token LOGIC_AND resolved as reduce (%left LOGIC_AND).
    Conflict between rule 96 and token BIT_OR resolved as shift (LOGIC_AND < BIT_OR).
    Conflict between rule 96 and token LOGIC_OR resolved as reduce (LOGIC_OR < LOGIC_AND).
    Conflict between rule 96 and token EXC_OR resolved as shift (LOGIC_AND < EXC_OR).
    Conflict between rule 96 and token AS resolved as shift (LOGIC_AND < AS).
    Conflict between rule 96 and token INSTANCEOF resolved as shift (LOGIC_AND < INSTANCEOF).


state 166

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, LCB, LRB, RRB, SEMI]
   90                   | expression BIT_OR expression .  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, LCB, LRB, RRB, SEMI]
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 90 (expression_nobrace)

    Conflict between rule 90 and token DOT resolved as shift (BIT_OR < DOT).
    Conflict between rule 90 and token ADD resolved as shift (BIT_OR < ADD).
    Conflict between rule 90 and token SUB resolved as shift (BIT_OR < SUB).
    Conflict between rule 90 and token MUL resolved as shift (BIT_OR < MUL).
    Conflict between rule 90 and token DIV resolved as shift (BIT_OR < DIV).
    Conflict between rule 90 and token MOD resolved as shift (BIT_OR < MOD).
    Conflict between rule 90 and token LSHIFT resolved as shift (BIT_OR < LSHIFT).
    Conflict between rule 90 and token RSHIFT resolved as shift (BIT_OR < RSHIFT).
    Conflict between rule 90 and token EQUAL resolved as reduce (EQUAL < BIT_OR).
    Conflict between rule 90 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_OR).
    Conflict between rule 90 and token GT resolved as shift (BIT_OR < GT).
    Conflict between rule 90 and token GE resolved as shift (BIT_OR < GE).
    Conflict between rule 90 and token LT resolved as shift (BIT_OR < LT).
    Conflict between rule 90 and token LE resolved as shift (BIT_OR < LE).
    Conflict between rule 90 and token BIT_AND resolved as reduce (BIT_AND < BIT_OR).
    Conflict between rule 90 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_OR).
    Conflict between rule 90 and token BIT_OR resolved as reduce (%left BIT_OR).
    Conflict between rule 90 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_OR).
    Conflict between rule 90 and token EXC_OR resolved as shift (BIT_OR < EXC_OR).
    Conflict between rule 90 and token AS resolved as shift (BIT_OR < AS).
    Conflict between rule 90 and token INSTANCEOF resolved as shift (BIT_OR < INSTANCEOF).


state 167

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression  [COMMA, COLON, EQUAL, NOTEQUAL, LOGIC_OR, LCB, LRB, RRB, SEMI]
   95                   | expression LOGIC_OR expression .  [COMMA, COLON, EQUAL, NOTEQUAL, LOGIC_OR, LCB, LRB, RRB, SEMI]
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 95 (expression_nobrace)

    Conflict between rule 95 and token DOT resolved as shift (LOGIC_OR < DOT).
    Conflict between rule 95 and token ADD resolved as shift (LOGIC_OR < ADD).
    Conflict between rule 95 and token SUB resolved as shift (LOGIC_OR < SUB).
    Conflict between rule 95 and token MUL resolved as shift (LOGIC_OR < MUL).
    Conflict between rule 95 and token DIV resolved as shift (LOGIC_OR < DIV).
    Conflict between rule 95 and token MOD resolved as shift (LOGIC_OR < MOD).
    Conflict between rule 95 and token LSHIFT resolved as shift (LOGIC_OR < LSHIFT).
    Conflict between rule 95 and token RSHIFT resolved as shift (LOGIC_OR < RSHIFT).
    Conflict between rule 95 and token EQUAL resolved as reduce (EQUAL < LOGIC_OR).
    Conflict between rule 95 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_OR).
    Conflict between rule 95 and token GT resolved as shift (LOGIC_OR < GT).
    Conflict between rule 95 and token GE resolved as shift (LOGIC_OR < GE).
    Conflict between rule 95 and token LT resolved as shift (LOGIC_OR < LT).
    Conflict between rule 95 and token LE resolved as shift (LOGIC_OR < LE).
    Conflict between rule 95 and token BIT_AND resolved as shift (LOGIC_OR < BIT_AND).
    Conflict between rule 95 and token LOGIC_AND resolved as shift (LOGIC_OR < LOGIC_AND).
    Conflict between rule 95 and token BIT_OR resolved as shift (LOGIC_OR < BIT_OR).
    Conflict between rule 95 and token LOGIC_OR resolved as reduce (%left LOGIC_OR).
    Conflict between rule 95 and token EXC_OR resolved as shift (LOGIC_OR < EXC_OR).
    Conflict between rule 95 and token AS resolved as shift (LOGIC_OR < AS).
    Conflict between rule 95 and token INSTANCEOF resolved as shift (LOGIC_OR < INSTANCEOF).


state 168

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   94                   | expression EXC_OR expression .  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 94 (expression_nobrace)

    Conflict between rule 94 and token DOT resolved as shift (EXC_OR < DOT).
    Conflict between rule 94 and token ADD resolved as shift (EXC_OR < ADD).
    Conflict between rule 94 and token SUB resolved as shift (EXC_OR < SUB).
    Conflict between rule 94 and token MUL resolved as shift (EXC_OR < MUL).
    Conflict between rule 94 and token DIV resolved as shift (EXC_OR < DIV).
    Conflict between rule 94 and token MOD resolved as shift (EXC_OR < MOD).
    Conflict between rule 94 and token LSHIFT resolved as shift (EXC_OR < LSHIFT).
    Conflict between rule 94 and token RSHIFT resolved as shift (EXC_OR < RSHIFT).
    Conflict between rule 94 and token EQUAL resolved as reduce (EQUAL < EXC_OR).
    Conflict between rule 94 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR).
    Conflict between rule 94 and token GT resolved as shift (EXC_OR < GT).
    Conflict between rule 94 and token GE resolved as shift (EXC_OR < GE).
    Conflict between rule 94 and token LT resolved as shift (EXC_OR < LT).
    Conflict between rule 94 and token LE resolved as shift (EXC_OR < LE).
    Conflict between rule 94 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR).
    Conflict between rule 94 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR).
    Conflict between rule 94 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR).
    Conflict between rule 94 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR).
    Conflict between rule 94 and token EXC_OR resolved as reduce (%left EXC_OR).
    Conflict between rule 94 and token AS resolved as shift (EXC_OR < AS).
    Conflict between rule 94 and token INSTANCEOF resolved as shift (EXC_OR < INSTANCEOF).


state 169

  115 expression_nobrace: expression AS typename_T .

    $default  reduce using rule 115 (expression_nobrace)


state 170

  114 expression_nobrace: expression INSTANCEOF typename_T .

    $default  reduce using rule 114 (expression_nobrace)


state 171

  119 expression_nobrace: expression_nobrace LRB RRB .

    $default  reduce using rule 119 (expression_nobrace)


state 172

   72 argument_list: argument_list . COMMA expression
  118 expression_nobrace: expression_nobrace LRB argument_list . RRB

    COMMA  shift, and go to state 215
    RRB    shift, and go to state 216


state 173

   71 argument_list: expression .  [COMMA, RRB]
   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 71 (argument_list)


state 174

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | lhs ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 97 (expression_nobrace)

    Conflict between rule 97 and token DOT resolved as shift (ASSIGN < DOT).
    Conflict between rule 97 and token ADD resolved as shift (ASSIGN < ADD).
    Conflict between rule 97 and token SUB resolved as shift (ASSIGN < SUB).
    Conflict between rule 97 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 97 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 97 and token MOD resolved as shift (ASSIGN < MOD).
    Conflict between rule 97 and token LSHIFT resolved as shift (ASSIGN < LSHIFT).
    Conflict between rule 97 and token RSHIFT resolved as shift (ASSIGN < RSHIFT).
    Conflict between rule 97 and token EQUAL resolved as shift (ASSIGN < EQUAL).
    Conflict between rule 97 and token NOTEQUAL resolved as shift (ASSIGN < NOTEQUAL).
    Conflict between rule 97 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 97 and token GE resolved as shift (ASSIGN < GE).
    Conflict between rule 97 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 97 and token LE resolved as shift (ASSIGN < LE).
    Conflict between rule 97 and token BIT_AND resolved as shift (ASSIGN < BIT_AND).
    Conflict between rule 97 and token LOGIC_AND resolved as shift (ASSIGN < LOGIC_AND).
    Conflict between rule 97 and token BIT_OR resolved as shift (ASSIGN < BIT_OR).
    Conflict between rule 97 and token LOGIC_OR resolved as shift (ASSIGN < LOGIC_OR).
    Conflict between rule 97 and token EXC_OR resolved as shift (ASSIGN < EXC_OR).
    Conflict between rule 97 and token AS resolved as shift (ASSIGN < AS).
    Conflict between rule 97 and token INSTANCEOF resolved as shift (ASSIGN < INSTANCEOF).


state 175

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   98                   | lhs ADD_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 98 (expression_nobrace)

    Conflict between rule 98 and token DOT resolved as shift (ADD_ASSIGN < DOT).
    Conflict between rule 98 and token ADD resolved as shift (ADD_ASSIGN < ADD).
    Conflict between rule 98 and token SUB resolved as shift (ADD_ASSIGN < SUB).
    Conflict between rule 98 and token MUL resolved as shift (ADD_ASSIGN < MUL).
    Conflict between rule 98 and token DIV resolved as shift (ADD_ASSIGN < DIV).
    Conflict between rule 98 and token MOD resolved as shift (ADD_ASSIGN < MOD).
    Conflict between rule 98 and token LSHIFT resolved as shift (ADD_ASSIGN < LSHIFT).
    Conflict between rule 98 and token RSHIFT resolved as shift (ADD_ASSIGN < RSHIFT).
    Conflict between rule 98 and token EQUAL resolved as shift (ADD_ASSIGN < EQUAL).
    Conflict between rule 98 and token NOTEQUAL resolved as shift (ADD_ASSIGN < NOTEQUAL).
    Conflict between rule 98 and token GT resolved as shift (ADD_ASSIGN < GT).
    Conflict between rule 98 and token GE resolved as shift (ADD_ASSIGN < GE).
    Conflict between rule 98 and token LT resolved as shift (ADD_ASSIGN < LT).
    Conflict between rule 98 and token LE resolved as shift (ADD_ASSIGN < LE).
    Conflict between rule 98 and token BIT_AND resolved as shift (ADD_ASSIGN < BIT_AND).
    Conflict between rule 98 and token LOGIC_AND resolved as shift (ADD_ASSIGN < LOGIC_AND).
    Conflict between rule 98 and token BIT_OR resolved as shift (ADD_ASSIGN < BIT_OR).
    Conflict between rule 98 and token LOGIC_OR resolved as shift (ADD_ASSIGN < LOGIC_OR).
    Conflict between rule 98 and token EXC_OR resolved as shift (ADD_ASSIGN < EXC_OR).
    Conflict between rule 98 and token AS resolved as shift (ADD_ASSIGN < AS).
    Conflict between rule 98 and token INSTANCEOF resolved as shift (ADD_ASSIGN < INSTANCEOF).


state 176

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   99                   | lhs SUB_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 99 (expression_nobrace)

    Conflict between rule 99 and token DOT resolved as shift (SUB_ASSIGN < DOT).
    Conflict between rule 99 and token ADD resolved as shift (SUB_ASSIGN < ADD).
    Conflict between rule 99 and token SUB resolved as shift (SUB_ASSIGN < SUB).
    Conflict between rule 99 and token MUL resolved as shift (SUB_ASSIGN < MUL).
    Conflict between rule 99 and token DIV resolved as shift (SUB_ASSIGN < DIV).
    Conflict between rule 99 and token MOD resolved as shift (SUB_ASSIGN < MOD).
    Conflict between rule 99 and token LSHIFT resolved as shift (SUB_ASSIGN < LSHIFT).
    Conflict between rule 99 and token RSHIFT resolved as shift (SUB_ASSIGN < RSHIFT).
    Conflict between rule 99 and token EQUAL resolved as shift (SUB_ASSIGN < EQUAL).
    Conflict between rule 99 and token NOTEQUAL resolved as shift (SUB_ASSIGN < NOTEQUAL).
    Conflict between rule 99 and token GT resolved as shift (SUB_ASSIGN < GT).
    Conflict between rule 99 and token GE resolved as shift (SUB_ASSIGN < GE).
    Conflict between rule 99 and token LT resolved as shift (SUB_ASSIGN < LT).
    Conflict between rule 99 and token LE resolved as shift (SUB_ASSIGN < LE).
    Conflict between rule 99 and token BIT_AND resolved as shift (SUB_ASSIGN < BIT_AND).
    Conflict between rule 99 and token LOGIC_AND resolved as shift (SUB_ASSIGN < LOGIC_AND).
    Conflict between rule 99 and token BIT_OR resolved as shift (SUB_ASSIGN < BIT_OR).
    Conflict between rule 99 and token LOGIC_OR resolved as shift (SUB_ASSIGN < LOGIC_OR).
    Conflict between rule 99 and token EXC_OR resolved as shift (SUB_ASSIGN < EXC_OR).
    Conflict between rule 99 and token AS resolved as shift (SUB_ASSIGN < AS).
    Conflict between rule 99 and token INSTANCEOF resolved as shift (SUB_ASSIGN < INSTANCEOF).


state 177

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  100                   | lhs MUL_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 100 (expression_nobrace)

    Conflict between rule 100 and token DOT resolved as shift (MUL_ASSIGN < DOT).
    Conflict between rule 100 and token ADD resolved as shift (MUL_ASSIGN < ADD).
    Conflict between rule 100 and token SUB resolved as shift (MUL_ASSIGN < SUB).
    Conflict between rule 100 and token MUL resolved as shift (MUL_ASSIGN < MUL).
    Conflict between rule 100 and token DIV resolved as shift (MUL_ASSIGN < DIV).
    Conflict between rule 100 and token MOD resolved as shift (MUL_ASSIGN < MOD).
    Conflict between rule 100 and token LSHIFT resolved as shift (MUL_ASSIGN < LSHIFT).
    Conflict between rule 100 and token RSHIFT resolved as shift (MUL_ASSIGN < RSHIFT).
    Conflict between rule 100 and token EQUAL resolved as shift (MUL_ASSIGN < EQUAL).
    Conflict between rule 100 and token NOTEQUAL resolved as shift (MUL_ASSIGN < NOTEQUAL).
    Conflict between rule 100 and token GT resolved as shift (MUL_ASSIGN < GT).
    Conflict between rule 100 and token GE resolved as shift (MUL_ASSIGN < GE).
    Conflict between rule 100 and token LT resolved as shift (MUL_ASSIGN < LT).
    Conflict between rule 100 and token LE resolved as shift (MUL_ASSIGN < LE).
    Conflict between rule 100 and token BIT_AND resolved as shift (MUL_ASSIGN < BIT_AND).
    Conflict between rule 100 and token LOGIC_AND resolved as shift (MUL_ASSIGN < LOGIC_AND).
    Conflict between rule 100 and token BIT_OR resolved as shift (MUL_ASSIGN < BIT_OR).
    Conflict between rule 100 and token LOGIC_OR resolved as shift (MUL_ASSIGN < LOGIC_OR).
    Conflict between rule 100 and token EXC_OR resolved as shift (MUL_ASSIGN < EXC_OR).
    Conflict between rule 100 and token AS resolved as shift (MUL_ASSIGN < AS).
    Conflict between rule 100 and token INSTANCEOF resolved as shift (MUL_ASSIGN < INSTANCEOF).


state 178

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  101                   | lhs DIV_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 101 (expression_nobrace)

    Conflict between rule 101 and token DOT resolved as shift (DIV_ASSIGN < DOT).
    Conflict between rule 101 and token ADD resolved as shift (DIV_ASSIGN < ADD).
    Conflict between rule 101 and token SUB resolved as shift (DIV_ASSIGN < SUB).
    Conflict between rule 101 and token MUL resolved as shift (DIV_ASSIGN < MUL).
    Conflict between rule 101 and token DIV resolved as shift (DIV_ASSIGN < DIV).
    Conflict between rule 101 and token MOD resolved as shift (DIV_ASSIGN < MOD).
    Conflict between rule 101 and token LSHIFT resolved as shift (DIV_ASSIGN < LSHIFT).
    Conflict between rule 101 and token RSHIFT resolved as shift (DIV_ASSIGN < RSHIFT).
    Conflict between rule 101 and token EQUAL resolved as shift (DIV_ASSIGN < EQUAL).
    Conflict between rule 101 and token NOTEQUAL resolved as shift (DIV_ASSIGN < NOTEQUAL).
    Conflict between rule 101 and token GT resolved as shift (DIV_ASSIGN < GT).
    Conflict between rule 101 and token GE resolved as shift (DIV_ASSIGN < GE).
    Conflict between rule 101 and token LT resolved as shift (DIV_ASSIGN < LT).
    Conflict between rule 101 and token LE resolved as shift (DIV_ASSIGN < LE).
    Conflict between rule 101 and token BIT_AND resolved as shift (DIV_ASSIGN < BIT_AND).
    Conflict between rule 101 and token LOGIC_AND resolved as shift (DIV_ASSIGN < LOGIC_AND).
    Conflict between rule 101 and token BIT_OR resolved as shift (DIV_ASSIGN < BIT_OR).
    Conflict between rule 101 and token LOGIC_OR resolved as shift (DIV_ASSIGN < LOGIC_OR).
    Conflict between rule 101 and token EXC_OR resolved as shift (DIV_ASSIGN < EXC_OR).
    Conflict between rule 101 and token AS resolved as shift (DIV_ASSIGN < AS).
    Conflict between rule 101 and token INSTANCEOF resolved as shift (DIV_ASSIGN < INSTANCEOF).


state 179

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  102                   | lhs MOD_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 102 (expression_nobrace)

    Conflict between rule 102 and token DOT resolved as shift (MOD_ASSIGN < DOT).
    Conflict between rule 102 and token ADD resolved as shift (MOD_ASSIGN < ADD).
    Conflict between rule 102 and token SUB resolved as shift (MOD_ASSIGN < SUB).
    Conflict between rule 102 and token MUL resolved as shift (MOD_ASSIGN < MUL).
    Conflict between rule 102 and token DIV resolved as shift (MOD_ASSIGN < DIV).
    Conflict between rule 102 and token MOD resolved as shift (MOD_ASSIGN < MOD).
    Conflict between rule 102 and token LSHIFT resolved as shift (MOD_ASSIGN < LSHIFT).
    Conflict between rule 102 and token RSHIFT resolved as shift (MOD_ASSIGN < RSHIFT).
    Conflict between rule 102 and token EQUAL resolved as shift (MOD_ASSIGN < EQUAL).
    Conflict between rule 102 and token NOTEQUAL resolved as shift (MOD_ASSIGN < NOTEQUAL).
    Conflict between rule 102 and token GT resolved as shift (MOD_ASSIGN < GT).
    Conflict between rule 102 and token GE resolved as shift (MOD_ASSIGN < GE).
    Conflict between rule 102 and token LT resolved as shift (MOD_ASSIGN < LT).
    Conflict between rule 102 and token LE resolved as shift (MOD_ASSIGN < LE).
    Conflict between rule 102 and token BIT_AND resolved as shift (MOD_ASSIGN < BIT_AND).
    Conflict between rule 102 and token LOGIC_AND resolved as shift (MOD_ASSIGN < LOGIC_AND).
    Conflict between rule 102 and token BIT_OR resolved as shift (MOD_ASSIGN < BIT_OR).
    Conflict between rule 102 and token LOGIC_OR resolved as shift (MOD_ASSIGN < LOGIC_OR).
    Conflict between rule 102 and token EXC_OR resolved as shift (MOD_ASSIGN < EXC_OR).
    Conflict between rule 102 and token AS resolved as shift (MOD_ASSIGN < AS).
    Conflict between rule 102 and token INSTANCEOF resolved as shift (MOD_ASSIGN < INSTANCEOF).


state 180

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  103                   | lhs AND_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 103 (expression_nobrace)

    Conflict between rule 103 and token DOT resolved as shift (AND_ASSIGN < DOT).
    Conflict between rule 103 and token ADD resolved as shift (AND_ASSIGN < ADD).
    Conflict between rule 103 and token SUB resolved as shift (AND_ASSIGN < SUB).
    Conflict between rule 103 and token MUL resolved as shift (AND_ASSIGN < MUL).
    Conflict between rule 103 and token DIV resolved as shift (AND_ASSIGN < DIV).
    Conflict between rule 103 and token MOD resolved as shift (AND_ASSIGN < MOD).
    Conflict between rule 103 and token LSHIFT resolved as shift (AND_ASSIGN < LSHIFT).
    Conflict between rule 103 and token RSHIFT resolved as shift (AND_ASSIGN < RSHIFT).
    Conflict between rule 103 and token EQUAL resolved as shift (AND_ASSIGN < EQUAL).
    Conflict between rule 103 and token NOTEQUAL resolved as shift (AND_ASSIGN < NOTEQUAL).
    Conflict between rule 103 and token GT resolved as shift (AND_ASSIGN < GT).
    Conflict between rule 103 and token GE resolved as shift (AND_ASSIGN < GE).
    Conflict between rule 103 and token LT resolved as shift (AND_ASSIGN < LT).
    Conflict between rule 103 and token LE resolved as shift (AND_ASSIGN < LE).
    Conflict between rule 103 and token BIT_AND resolved as shift (AND_ASSIGN < BIT_AND).
    Conflict between rule 103 and token LOGIC_AND resolved as shift (AND_ASSIGN < LOGIC_AND).
    Conflict between rule 103 and token BIT_OR resolved as shift (AND_ASSIGN < BIT_OR).
    Conflict between rule 103 and token LOGIC_OR resolved as shift (AND_ASSIGN < LOGIC_OR).
    Conflict between rule 103 and token EXC_OR resolved as shift (AND_ASSIGN < EXC_OR).
    Conflict between rule 103 and token AS resolved as shift (AND_ASSIGN < AS).
    Conflict between rule 103 and token INSTANCEOF resolved as shift (AND_ASSIGN < INSTANCEOF).


state 181

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  104                   | lhs OR_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 104 (expression_nobrace)

    Conflict between rule 104 and token DOT resolved as shift (OR_ASSIGN < DOT).
    Conflict between rule 104 and token ADD resolved as shift (OR_ASSIGN < ADD).
    Conflict between rule 104 and token SUB resolved as shift (OR_ASSIGN < SUB).
    Conflict between rule 104 and token MUL resolved as shift (OR_ASSIGN < MUL).
    Conflict between rule 104 and token DIV resolved as shift (OR_ASSIGN < DIV).
    Conflict between rule 104 and token MOD resolved as shift (OR_ASSIGN < MOD).
    Conflict between rule 104 and token LSHIFT resolved as shift (OR_ASSIGN < LSHIFT).
    Conflict between rule 104 and token RSHIFT resolved as shift (OR_ASSIGN < RSHIFT).
    Conflict between rule 104 and token EQUAL resolved as shift (OR_ASSIGN < EQUAL).
    Conflict between rule 104 and token NOTEQUAL resolved as shift (OR_ASSIGN < NOTEQUAL).
    Conflict between rule 104 and token GT resolved as shift (OR_ASSIGN < GT).
    Conflict between rule 104 and token GE resolved as shift (OR_ASSIGN < GE).
    Conflict between rule 104 and token LT resolved as shift (OR_ASSIGN < LT).
    Conflict between rule 104 and token LE resolved as shift (OR_ASSIGN < LE).
    Conflict between rule 104 and token BIT_AND resolved as shift (OR_ASSIGN < BIT_AND).
    Conflict between rule 104 and token LOGIC_AND resolved as shift (OR_ASSIGN < LOGIC_AND).
    Conflict between rule 104 and token BIT_OR resolved as shift (OR_ASSIGN < BIT_OR).
    Conflict between rule 104 and token LOGIC_OR resolved as shift (OR_ASSIGN < LOGIC_OR).
    Conflict between rule 104 and token EXC_OR resolved as shift (OR_ASSIGN < EXC_OR).
    Conflict between rule 104 and token AS resolved as shift (OR_ASSIGN < AS).
    Conflict between rule 104 and token INSTANCEOF resolved as shift (OR_ASSIGN < INSTANCEOF).


state 182

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  106                   | lhs LSHIFT_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 106 (expression_nobrace)

    Conflict between rule 106 and token DOT resolved as shift (LSHIFT_ASSIGN < DOT).
    Conflict between rule 106 and token ADD resolved as shift (LSHIFT_ASSIGN < ADD).
    Conflict between rule 106 and token SUB resolved as shift (LSHIFT_ASSIGN < SUB).
    Conflict between rule 106 and token MUL resolved as shift (LSHIFT_ASSIGN < MUL).
    Conflict between rule 106 and token DIV resolved as shift (LSHIFT_ASSIGN < DIV).
    Conflict between rule 106 and token MOD resolved as shift (LSHIFT_ASSIGN < MOD).
    Conflict between rule 106 and token LSHIFT resolved as shift (LSHIFT_ASSIGN < LSHIFT).
    Conflict between rule 106 and token RSHIFT resolved as shift (LSHIFT_ASSIGN < RSHIFT).
    Conflict between rule 106 and token EQUAL resolved as shift (LSHIFT_ASSIGN < EQUAL).
    Conflict between rule 106 and token NOTEQUAL resolved as shift (LSHIFT_ASSIGN < NOTEQUAL).
    Conflict between rule 106 and token GT resolved as shift (LSHIFT_ASSIGN < GT).
    Conflict between rule 106 and token GE resolved as shift (LSHIFT_ASSIGN < GE).
    Conflict between rule 106 and token LT resolved as shift (LSHIFT_ASSIGN < LT).
    Conflict between rule 106 and token LE resolved as shift (LSHIFT_ASSIGN < LE).
    Conflict between rule 106 and token BIT_AND resolved as shift (LSHIFT_ASSIGN < BIT_AND).
    Conflict between rule 106 and token LOGIC_AND resolved as shift (LSHIFT_ASSIGN < LOGIC_AND).
    Conflict between rule 106 and token BIT_OR resolved as shift (LSHIFT_ASSIGN < BIT_OR).
    Conflict between rule 106 and token LOGIC_OR resolved as shift (LSHIFT_ASSIGN < LOGIC_OR).
    Conflict between rule 106 and token EXC_OR resolved as shift (LSHIFT_ASSIGN < EXC_OR).
    Conflict between rule 106 and token AS resolved as shift (LSHIFT_ASSIGN < AS).
    Conflict between rule 106 and token INSTANCEOF resolved as shift (LSHIFT_ASSIGN < INSTANCEOF).


state 183

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  107                   | lhs RSHIFT_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 107 (expression_nobrace)

    Conflict between rule 107 and token DOT resolved as shift (RSHIFT_ASSIGN < DOT).
    Conflict between rule 107 and token ADD resolved as shift (RSHIFT_ASSIGN < ADD).
    Conflict between rule 107 and token SUB resolved as shift (RSHIFT_ASSIGN < SUB).
    Conflict between rule 107 and token MUL resolved as shift (RSHIFT_ASSIGN < MUL).
    Conflict between rule 107 and token DIV resolved as shift (RSHIFT_ASSIGN < DIV).
    Conflict between rule 107 and token MOD resolved as shift (RSHIFT_ASSIGN < MOD).
    Conflict between rule 107 and token LSHIFT resolved as shift (RSHIFT_ASSIGN < LSHIFT).
    Conflict between rule 107 and token RSHIFT resolved as shift (RSHIFT_ASSIGN < RSHIFT).
    Conflict between rule 107 and token EQUAL resolved as shift (RSHIFT_ASSIGN < EQUAL).
    Conflict between rule 107 and token NOTEQUAL resolved as shift (RSHIFT_ASSIGN < NOTEQUAL).
    Conflict between rule 107 and token GT resolved as shift (RSHIFT_ASSIGN < GT).
    Conflict between rule 107 and token GE resolved as shift (RSHIFT_ASSIGN < GE).
    Conflict between rule 107 and token LT resolved as shift (RSHIFT_ASSIGN < LT).
    Conflict between rule 107 and token LE resolved as shift (RSHIFT_ASSIGN < LE).
    Conflict between rule 107 and token BIT_AND resolved as shift (RSHIFT_ASSIGN < BIT_AND).
    Conflict between rule 107 and token LOGIC_AND resolved as shift (RSHIFT_ASSIGN < LOGIC_AND).
    Conflict between rule 107 and token BIT_OR resolved as shift (RSHIFT_ASSIGN < BIT_OR).
    Conflict between rule 107 and token LOGIC_OR resolved as shift (RSHIFT_ASSIGN < LOGIC_OR).
    Conflict between rule 107 and token EXC_OR resolved as shift (RSHIFT_ASSIGN < EXC_OR).
    Conflict between rule 107 and token AS resolved as shift (RSHIFT_ASSIGN < AS).
    Conflict between rule 107 and token INSTANCEOF resolved as shift (RSHIFT_ASSIGN < INSTANCEOF).


state 184

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  105                   | lhs EXC_OR_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 105 (expression_nobrace)

    Conflict between rule 105 and token DOT resolved as shift (EXC_OR_ASSIGN < DOT).
    Conflict between rule 105 and token ADD resolved as shift (EXC_OR_ASSIGN < ADD).
    Conflict between rule 105 and token SUB resolved as shift (EXC_OR_ASSIGN < SUB).
    Conflict between rule 105 and token MUL resolved as shift (EXC_OR_ASSIGN < MUL).
    Conflict between rule 105 and token DIV resolved as shift (EXC_OR_ASSIGN < DIV).
    Conflict between rule 105 and token MOD resolved as shift (EXC_OR_ASSIGN < MOD).
    Conflict between rule 105 and token LSHIFT resolved as shift (EXC_OR_ASSIGN < LSHIFT).
    Conflict between rule 105 and token RSHIFT resolved as shift (EXC_OR_ASSIGN < RSHIFT).
    Conflict between rule 105 and token EQUAL resolved as shift (EXC_OR_ASSIGN < EQUAL).
    Conflict between rule 105 and token NOTEQUAL resolved as shift (EXC_OR_ASSIGN < NOTEQUAL).
    Conflict between rule 105 and token GT resolved as shift (EXC_OR_ASSIGN < GT).
    Conflict between rule 105 and token GE resolved as shift (EXC_OR_ASSIGN < GE).
    Conflict between rule 105 and token LT resolved as shift (EXC_OR_ASSIGN < LT).
    Conflict between rule 105 and token LE resolved as shift (EXC_OR_ASSIGN < LE).
    Conflict between rule 105 and token BIT_AND resolved as shift (EXC_OR_ASSIGN < BIT_AND).
    Conflict between rule 105 and token LOGIC_AND resolved as shift (EXC_OR_ASSIGN < LOGIC_AND).
    Conflict between rule 105 and token BIT_OR resolved as shift (EXC_OR_ASSIGN < BIT_OR).
    Conflict between rule 105 and token LOGIC_OR resolved as shift (EXC_OR_ASSIGN < LOGIC_OR).
    Conflict between rule 105 and token EXC_OR resolved as shift (EXC_OR_ASSIGN < EXC_OR).
    Conflict between rule 105 and token AS resolved as shift (EXC_OR_ASSIGN < AS).
    Conflict between rule 105 and token INSTANCEOF resolved as shift (EXC_OR_ASSIGN < INSTANCEOF).


state 185

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  151 inferenced_type_init_stmt: VAR IDENT ASSIGN expression . stmt_term
  175 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 217


state 186

   71 argument_list: . expression
   72              | . argument_list COMMA expression
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  120                   | NEW fqcn_part typename_group LRB . argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  121                   | NEW fqcn_part typename_group LRB . RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 218
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 219
    fqcn_part           go to state 62
    expression          go to state 173
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 187

   55 function_define: DEF IDENT LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 220


state 188

   54 function_define: DEF IDENT LRB parameter_list . RRB ARROW typename_T scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 221
    RRB    shift, and go to state 222


state 189

   69 parameter_list: typename_T . IDENT

    IDENT  shift, and go to state 223


state 190

   20 namespace_path: namespace_path DOT IDENT .

    $default  reduce using rule 20 (namespace_path)


state 191

   24 parameterized_typename: . IDENT type_parameter_group
   34 interface_decl: INTERFACE . parameterized_typename LCB access_member_tree_opt RCB
   35               | INTERFACE . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 224

    parameterized_typename  go to state 225


state 192

   24 parameterized_typename: . IDENT type_parameter_group
   30 class_decl: CLASS . parameterized_typename LCB access_member_tree_opt RCB
   31           | CLASS . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 224

    parameterized_typename  go to state 226


state 193

   32 enum_decl: ENUM . IDENT LCB ident_list RCB
   33          | ENUM . IDENT LCB ident_list COMMA RCB

    IDENT  shift, and go to state 227


state 194

   11 namespace_member_decl: NAMESPACE . namespace_path namespace_body
   19 namespace_path: . IDENT
   20               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 71

    namespace_path  go to state 228


state 195

   15 namespace_member_decl_list: namespace_member_decl .

    $default  reduce using rule 15 (namespace_member_decl_list)


state 196

   11 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   12                      | . class_decl
   13                      | . interface_decl
   14                      | . enum_decl
   16 namespace_member_decl_list: namespace_member_decl_list . namespace_member_decl
   18 namespace_member_decl_optional: namespace_member_decl_list .  [RCB]
   30 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   32 enum_decl: . ENUM IDENT LCB ident_list RCB
   33          | . ENUM IDENT LCB ident_list COMMA RCB
   34 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 191
    CLASS      shift, and go to state 192
    ENUM       shift, and go to state 193
    NAMESPACE  shift, and go to state 194

    $default  reduce using rule 18 (namespace_member_decl_optional)

    namespace_member_decl  go to state 229
    class_decl             go to state 198
    enum_decl              go to state 199
    interface_decl         go to state 200


state 197

   10 namespace_body: LCB namespace_member_decl_optional . RCB

    RCB  shift, and go to state 230


state 198

   12 namespace_member_decl: class_decl .

    $default  reduce using rule 12 (namespace_member_decl)


state 199

   14 namespace_member_decl: enum_decl .

    $default  reduce using rule 14 (namespace_member_decl)


state 200

   13 namespace_member_decl: interface_decl .

    $default  reduce using rule 13 (namespace_member_decl)


state 201

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK
  158 elif: ELIF . expression scope

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 231
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 202

  153 if_stmt: IF expression scope ELSE . scope
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB

    LCB  shift, and go to state 79

    scope  go to state 232


state 203

  154 if_stmt: IF expression scope elif_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
  155        | IF expression scope elif_list . ELSE scope
  157 elif_list: elif_list . elif
  158 elif: . ELIF expression scope

    ELIF  shift, and go to state 201
    ELSE  shift, and go to state 233

    $default  reduce using rule 154 (if_stmt)

    elif  go to state 234


state 204

  156 elif_list: elif .

    $default  reduce using rule 156 (elif_list)


state 205

  171 scope: LCB stmt_list RCB .

    $default  reduce using rule 171 (scope)


state 206

  135 stmt_list: stmt_list stmt .

    $default  reduce using rule 135 (stmt_list)


state 207

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
  167 catch_stmt: CATCH LRB . typename_T IDENT RRB scope

    IDENT  shift, and go to state 14

    typename_T  go to state 235
    fqcn_part   go to state 149


state 208

  166 catch_stmt_list: catch_stmt_list catch_stmt .

    $default  reduce using rule 166 (catch_stmt_list)


state 209

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  168 assert_stmt: ASSERT_T expression COLON expression . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 236
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108


state 210

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  150 variable_init_stmt: typename_T IDENT ASSIGN expression . stmt_term
  175 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 237


state 211

   76 typename_list: typename_list COMMA . typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 238
    fqcn_part   go to state 149


state 212

   74 typename_group: LSB typename_list RSB .

    $default  reduce using rule 74 (typename_group)


state 213

   77 typename_T: fqcn_part typename_group .

    $default  reduce using rule 77 (typename_T)


state 214

  126 lhs: expression DOT IDENT typename_group .

    $default  reduce using rule 126 (lhs)


state 215

   72 argument_list: argument_list COMMA . expression
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 239
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 216

  118 expression_nobrace: expression_nobrace LRB argument_list RRB .

    $default  reduce using rule 118 (expression_nobrace)


state 217

  151 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 151 (inferenced_type_init_stmt)


state 218

  121 expression_nobrace: NEW fqcn_part typename_group LRB RRB .

    $default  reduce using rule 121 (expression_nobrace)


state 219

   72 argument_list: argument_list . COMMA expression
  120 expression_nobrace: NEW fqcn_part typename_group LRB argument_list . RRB

    COMMA  shift, and go to state 215
    RRB    shift, and go to state 240


state 220

   55 function_define: DEF IDENT LRB RRB ARROW . typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 241
    fqcn_part   go to state 149


state 221

   70 parameter_list: parameter_list COMMA . typename_T IDENT
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 242
    fqcn_part   go to state 149


state 222

   54 function_define: DEF IDENT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 243


state 223

   69 parameter_list: typename_T IDENT .

    $default  reduce using rule 69 (parameter_list)


state 224

   24 parameterized_typename: IDENT . type_parameter_group
   25 type_parameter_group: .  [COLON, LCB]
   26                     | . LSB type_parameter_list RSB

    LSB  shift, and go to state 244

    $default  reduce using rule 25 (type_parameter_group)

    type_parameter_group  go to state 245


state 225

   34 interface_decl: INTERFACE parameterized_typename . LCB access_member_tree_opt RCB
   35               | INTERFACE parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 246
    LCB    shift, and go to state 247


state 226

   30 class_decl: CLASS parameterized_typename . LCB access_member_tree_opt RCB
   31           | CLASS parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 248
    LCB    shift, and go to state 249


state 227

   32 enum_decl: ENUM IDENT . LCB ident_list RCB
   33          | ENUM IDENT . LCB ident_list COMMA RCB

    LCB  shift, and go to state 250


state 228

   10 namespace_body: . LCB namespace_member_decl_optional RCB
   11 namespace_member_decl: NAMESPACE namespace_path . namespace_body
   20 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 127
    LCB  shift, and go to state 128

    namespace_body  go to state 251


state 229

   16 namespace_member_decl_list: namespace_member_decl_list namespace_member_decl .

    $default  reduce using rule 16 (namespace_member_decl_list)


state 230

   10 namespace_body: LCB namespace_member_decl_optional RCB .

    $default  reduce using rule 10 (namespace_body)


state 231

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group
  158 elif: ELIF expression . scope
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    LCB         shift, and go to state 79
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    scope  go to state 252


state 232

  153 if_stmt: IF expression scope ELSE scope .

    $default  reduce using rule 153 (if_stmt)


state 233

  155 if_stmt: IF expression scope elif_list ELSE . scope
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB

    LCB  shift, and go to state 79

    scope  go to state 253


state 234

  157 elif_list: elif_list elif .

    $default  reduce using rule 157 (elif_list)


state 235

  167 catch_stmt: CATCH LRB typename_T . IDENT RRB scope

    IDENT  shift, and go to state 254


state 236

  168 assert_stmt: ASSERT_T expression COLON expression SEMI .

    $default  reduce using rule 168 (assert_stmt)


state 237

  150 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 150 (variable_init_stmt)


state 238

   76 typename_list: typename_list COMMA typename_T .

    $default  reduce using rule 76 (typename_list)


state 239

   72 argument_list: argument_list COMMA expression .  [COMMA, RRB]
   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . INSTANCEOF typename_T
  115                   | expression . AS typename_T
  126 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 72 (argument_list)


state 240

  120 expression_nobrace: NEW fqcn_part typename_group LRB argument_list RRB .

    $default  reduce using rule 120 (expression_nobrace)


state 241

   55 function_define: DEF IDENT LRB RRB ARROW typename_T . scope_optional
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB
  173 scope_optional: . SEMI
  174               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 255


state 242

   70 parameter_list: parameter_list COMMA typename_T . IDENT

    IDENT  shift, and go to state 256


state 243

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW . typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 257
    fqcn_part   go to state 149


state 244

   26 type_parameter_group: LSB . type_parameter_list RSB
   27 type_parameter_list: . type_parameter
   28                    | . type_parameter_list COMMA type_parameter
   29 type_parameter: . IDENT

    IDENT  shift, and go to state 258

    type_parameter_list  go to state 259
    type_parameter       go to state 260


state 245

   24 parameterized_typename: IDENT type_parameter_group .

    $default  reduce using rule 24 (parameterized_typename)


state 246

   35 interface_decl: INTERFACE parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 261
    typename_T     go to state 148
    fqcn_part      go to state 149


state 247

   34 interface_decl: INTERFACE parameterized_typename LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 262
    PRIVATE    shift, and go to state 263
    PROTECTED  shift, and go to state 264

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 265
    access_member_tree      go to state 266
    access_member_list      go to state 267
    access_level_T          go to state 268


state 248

   31 class_decl: CLASS parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 269
    typename_T     go to state 148
    fqcn_part      go to state 149


state 249

   30 class_decl: CLASS parameterized_typename LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 262
    PRIVATE    shift, and go to state 263
    PROTECTED  shift, and go to state 264

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 270
    access_member_tree      go to state 266
    access_member_list      go to state 267
    access_level_T          go to state 268


state 250

   32 enum_decl: ENUM IDENT LCB . ident_list RCB
   33          | ENUM IDENT LCB . ident_list COMMA RCB
   67 ident_list: . IDENT
   68           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 271

    ident_list  go to state 272


state 251

   11 namespace_member_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 11 (namespace_member_decl)


state 252

  158 elif: ELIF expression scope .

    $default  reduce using rule 158 (elif)


state 253

  155 if_stmt: IF expression scope elif_list ELSE scope .

    $default  reduce using rule 155 (if_stmt)


state 254

  167 catch_stmt: CATCH LRB typename_T IDENT . RRB scope

    RRB  shift, and go to state 273


state 255

   55 function_define: DEF IDENT LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 55 (function_define)


state 256

   70 parameter_list: parameter_list COMMA typename_T IDENT .

    $default  reduce using rule 70 (parameter_list)


state 257

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T . scope_optional
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB
  173 scope_optional: . SEMI
  174               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 274


state 258

   29 type_parameter: IDENT .

    $default  reduce using rule 29 (type_parameter)


state 259

   26 type_parameter_group: LSB type_parameter_list . RSB
   28 type_parameter_list: type_parameter_list . COMMA type_parameter

    COMMA  shift, and go to state 275
    RSB    shift, and go to state 276


state 260

   27 type_parameter_list: type_parameter .

    $default  reduce using rule 27 (type_parameter_list)


state 261

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 211
    LCB    shift, and go to state 277


state 262

   64 access_level_T: PUBLIC .

    $default  reduce using rule 64 (access_level_T)


state 263

   65 access_level_T: PRIVATE .

    $default  reduce using rule 65 (access_level_T)


state 264

   66 access_level_T: PROTECTED .

    $default  reduce using rule 66 (access_level_T)


state 265

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 278


state 266

   37 access_member_tree_opt: access_member_tree .  [RCB]
   39 access_member_tree: access_member_tree . access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 262
    PRIVATE    shift, and go to state 263
    PROTECTED  shift, and go to state 264

    $default  reduce using rule 37 (access_member_tree_opt)

    access_member_list  go to state 279
    access_level_T      go to state 268


state 267

   38 access_member_tree: access_member_list .

    $default  reduce using rule 38 (access_member_tree)


state 268

   40 access_member_list: access_level_T . COLON member_define_list

    COLON  shift, and go to state 280


state 269

   31 class_decl: CLASS parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 211
    LCB    shift, and go to state 281


state 270

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 282


state 271

   67 ident_list: IDENT .

    $default  reduce using rule 67 (ident_list)


state 272

   32 enum_decl: ENUM IDENT LCB ident_list . RCB
   33          | ENUM IDENT LCB ident_list . COMMA RCB
   68 ident_list: ident_list . COMMA IDENT

    COMMA  shift, and go to state 283
    RCB    shift, and go to state 284


state 273

  167 catch_stmt: CATCH LRB typename_T IDENT RRB . scope
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB

    LCB  shift, and go to state 79

    scope  go to state 285


state 274

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 54 (function_define)


state 275

   28 type_parameter_list: type_parameter_list COMMA . type_parameter
   29 type_parameter: . IDENT

    IDENT  shift, and go to state 258

    type_parameter  go to state 286


state 276

   26 type_parameter_group: LSB type_parameter_list RSB .

    $default  reduce using rule 26 (type_parameter_group)


state 277

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 262
    PRIVATE    shift, and go to state 263
    PROTECTED  shift, and go to state 264

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 287
    access_member_tree      go to state 266
    access_member_list      go to state 267
    access_level_T          go to state 268


state 278

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 34 (interface_decl)


state 279

   39 access_member_tree: access_member_tree access_member_list .

    $default  reduce using rule 39 (access_member_tree)


state 280

   40 access_member_list: access_level_T COLON . member_define_list
   41 member_define_list: . member_define
   42                   | . member_define_list member_define
   43 member_define: . constructor_define
   44              | . method_define
   45              | . field_define
   46 constructor_define: . DEF NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | . DEF NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: . DEF modifier_type_T IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | . DEF modifier_type_T IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: . modifier_type_T typename_T IDENT SEMI
   59 modifier_type_T: .  [IDENT]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 288
    NATIVE  shift, and go to state 289
    DEF     shift, and go to state 290

    $default  reduce using rule 59 (modifier_type_T)

    member_define_list  go to state 291
    member_define       go to state 292
    constructor_define  go to state 293
    method_define       go to state 294
    field_define        go to state 295
    modifier_type_T     go to state 296


state 281

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 262
    PRIVATE    shift, and go to state 263
    PROTECTED  shift, and go to state 264

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 297
    access_member_tree      go to state 266
    access_member_list      go to state 267
    access_level_T          go to state 268


state 282

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 30 (class_decl)


state 283

   33 enum_decl: ENUM IDENT LCB ident_list COMMA . RCB
   68 ident_list: ident_list COMMA . IDENT

    IDENT  shift, and go to state 298
    RCB    shift, and go to state 299


state 284

   32 enum_decl: ENUM IDENT LCB ident_list RCB .

    $default  reduce using rule 32 (enum_decl)


state 285

  167 catch_stmt: CATCH LRB typename_T IDENT RRB scope .

    $default  reduce using rule 167 (catch_stmt)


state 286

   28 type_parameter_list: type_parameter_list COMMA type_parameter .

    $default  reduce using rule 28 (type_parameter_list)


state 287

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 300


state 288

   60 modifier_type_T: STATIC . NATIVE
   62                | STATIC .  [IDENT]

    NATIVE  shift, and go to state 301

    $default  reduce using rule 62 (modifier_type_T)


state 289

   61 modifier_type_T: NATIVE . STATIC
   63                | NATIVE .  [IDENT]

    STATIC  shift, and go to state 302

    $default  reduce using rule 63 (modifier_type_T)


state 290

   46 constructor_define: DEF . NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | DEF . NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: DEF . modifier_type_T IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | DEF . modifier_type_T IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   59 modifier_type_T: .  [IDENT]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 288
    NATIVE  shift, and go to state 289
    NEW     shift, and go to state 303

    $default  reduce using rule 59 (modifier_type_T)

    modifier_type_T  go to state 304


state 291

   40 access_member_list: access_level_T COLON member_define_list .  [RCB, PUBLIC, PRIVATE, PROTECTED]
   42 member_define_list: member_define_list . member_define
   43 member_define: . constructor_define
   44              | . method_define
   45              | . field_define
   46 constructor_define: . DEF NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | . DEF NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: . DEF modifier_type_T IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | . DEF modifier_type_T IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: . modifier_type_T typename_T IDENT SEMI
   59 modifier_type_T: .  [IDENT]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 288
    NATIVE  shift, and go to state 289
    DEF     shift, and go to state 290

    IDENT     reduce using rule 59 (modifier_type_T)
    $default  reduce using rule 40 (access_member_list)

    member_define       go to state 305
    constructor_define  go to state 293
    method_define       go to state 294
    field_define        go to state 295
    modifier_type_T     go to state 296


state 292

   41 member_define_list: member_define .

    $default  reduce using rule 41 (member_define_list)


state 293

   43 member_define: constructor_define .

    $default  reduce using rule 43 (member_define)


state 294

   44 member_define: method_define .

    $default  reduce using rule 44 (member_define)


state 295

   45 member_define: field_define .

    $default  reduce using rule 45 (member_define)


state 296

   58 field_define: modifier_type_T . typename_T IDENT SEMI
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 306
    fqcn_part   go to state 149


state 297

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 307


state 298

   68 ident_list: ident_list COMMA IDENT .

    $default  reduce using rule 68 (ident_list)


state 299

   33 enum_decl: ENUM IDENT LCB ident_list COMMA RCB .

    $default  reduce using rule 33 (enum_decl)


state 300

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 35 (interface_decl)


state 301

   60 modifier_type_T: STATIC NATIVE .

    $default  reduce using rule 60 (modifier_type_T)


state 302

   61 modifier_type_T: NATIVE STATIC .

    $default  reduce using rule 61 (modifier_type_T)


state 303

   46 constructor_define: DEF NEW . LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | DEF NEW . LRB RRB constructor_chain_optional scope_optional

    LRB  shift, and go to state 308


state 304

   56 method_define: DEF modifier_type_T . IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | DEF modifier_type_T . IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 309


state 305

   42 member_define_list: member_define_list member_define .

    $default  reduce using rule 42 (member_define_list)


state 306

   58 field_define: modifier_type_T typename_T . IDENT SEMI

    IDENT  shift, and go to state 310


state 307

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 31 (class_decl)


state 308

   46 constructor_define: DEF NEW LRB . parameter_list RRB constructor_chain_optional scope_optional
   47                   | DEF NEW LRB . RRB constructor_chain_optional scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 311

    parameter_list  go to state 312
    typename_T      go to state 189
    fqcn_part       go to state 149


state 309

   25 type_parameter_group: .  [LRB]
   26                     | . LSB type_parameter_list RSB
   56 method_define: DEF modifier_type_T IDENT . type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | DEF modifier_type_T IDENT . type_parameter_group LRB RRB ARROW typename_T scope_optional

    LSB  shift, and go to state 244

    $default  reduce using rule 25 (type_parameter_group)

    type_parameter_group  go to state 313


state 310

   58 field_define: modifier_type_T typename_T IDENT . SEMI

    SEMI  shift, and go to state 314


state 311

   47 constructor_define: DEF NEW LRB RRB . constructor_chain_optional scope_optional
   48 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   49                  | . COLON constructor_chain_type_T LRB RRB
   52 constructor_chain_optional: .  [LCB, SEMI]
   53                           | . constructor_chain

    COLON  shift, and go to state 315

    $default  reduce using rule 52 (constructor_chain_optional)

    constructor_chain           go to state 316
    constructor_chain_optional  go to state 317


state 312

   46 constructor_define: DEF NEW LRB parameter_list . RRB constructor_chain_optional scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 221
    RRB    shift, and go to state 318


state 313

   56 method_define: DEF modifier_type_T IDENT type_parameter_group . LRB parameter_list RRB ARROW typename_T scope_optional
   57              | DEF modifier_type_T IDENT type_parameter_group . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 319


state 314

   58 field_define: modifier_type_T typename_T IDENT SEMI .

    $default  reduce using rule 58 (field_define)


state 315

   48 constructor_chain: COLON . constructor_chain_type_T LRB argument_list RRB
   49                  | COLON . constructor_chain_type_T LRB RRB
   50 constructor_chain_type_T: . SUPER_TOK
   51                         | . THIS_TOK

    THIS_TOK   shift, and go to state 320
    SUPER_TOK  shift, and go to state 321

    constructor_chain_type_T  go to state 322


state 316

   53 constructor_chain_optional: constructor_chain .

    $default  reduce using rule 53 (constructor_chain_optional)


state 317

   47 constructor_define: DEF NEW LRB RRB constructor_chain_optional . scope_optional
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB
  173 scope_optional: . SEMI
  174               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 323


state 318

   46 constructor_define: DEF NEW LRB parameter_list RRB . constructor_chain_optional scope_optional
   48 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   49                  | . COLON constructor_chain_type_T LRB RRB
   52 constructor_chain_optional: .  [LCB, SEMI]
   53                           | . constructor_chain

    COLON  shift, and go to state 315

    $default  reduce using rule 52 (constructor_chain_optional)

    constructor_chain           go to state 316
    constructor_chain_optional  go to state 324


state 319

   56 method_define: DEF modifier_type_T IDENT type_parameter_group LRB . parameter_list RRB ARROW typename_T scope_optional
   57              | DEF modifier_type_T IDENT type_parameter_group LRB . RRB ARROW typename_T scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 325

    parameter_list  go to state 326
    typename_T      go to state 189
    fqcn_part       go to state 149


state 320

   51 constructor_chain_type_T: THIS_TOK .

    $default  reduce using rule 51 (constructor_chain_type_T)


state 321

   50 constructor_chain_type_T: SUPER_TOK .

    $default  reduce using rule 50 (constructor_chain_type_T)


state 322

   48 constructor_chain: COLON constructor_chain_type_T . LRB argument_list RRB
   49                  | COLON constructor_chain_type_T . LRB RRB

    LRB  shift, and go to state 327


state 323

   47 constructor_define: DEF NEW LRB RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 47 (constructor_define)


state 324

   46 constructor_define: DEF NEW LRB parameter_list RRB constructor_chain_optional . scope_optional
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB
  173 scope_optional: . SEMI
  174               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 328


state 325

   57 method_define: DEF modifier_type_T IDENT type_parameter_group LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 329


state 326

   56 method_define: DEF modifier_type_T IDENT type_parameter_group LRB parameter_list . RRB ARROW typename_T scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 221
    RRB    shift, and go to state 330


state 327

   48 constructor_chain: COLON constructor_chain_type_T LRB . argument_list RRB
   49                  | COLON constructor_chain_type_T LRB . RRB
   71 argument_list: . expression
   72              | . argument_list COMMA expression
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . primary
   82           | . expression_nobrace
   83 expression_nobrace: . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . lhs ASSIGN expression
   98                   | . lhs ADD_ASSIGN expression
   99                   | . lhs SUB_ASSIGN expression
  100                   | . lhs MUL_ASSIGN expression
  101                   | . lhs DIV_ASSIGN expression
  102                   | . lhs MOD_ASSIGN expression
  103                   | . lhs AND_ASSIGN expression
  104                   | . lhs OR_ASSIGN expression
  105                   | . lhs EXC_OR_ASSIGN expression
  106                   | . lhs LSHIFT_ASSIGN expression
  107                   | . lhs RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression INSTANCEOF typename_T
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW fqcn_part typename_group LRB argument_list RRB
  121                   | . NEW fqcn_part typename_group LRB RRB
  122                   | . THIS_TOK
  123                   | . SUPER_TOK
  124                   | . lhs
  125 lhs: . fqcn_part typename_group
  126    | . expression DOT IDENT typename_group
  127 primary: . INT
  128        | . DOUBLE
  129        | . CHAR_LITERAL
  130        | . STRING_LITERAL
  131        | . TRUE_TOK
  132        | . FALSE_TOK
  133        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 331
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 332
    fqcn_part           go to state 62
    expression          go to state 173
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 328

   46 constructor_define: DEF NEW LRB parameter_list RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 46 (constructor_define)


state 329

   57 method_define: DEF modifier_type_T IDENT type_parameter_group LRB RRB ARROW . typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 333
    fqcn_part   go to state 149


state 330

   56 method_define: DEF modifier_type_T IDENT type_parameter_group LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 334


state 331

   49 constructor_chain: COLON constructor_chain_type_T LRB RRB .

    $default  reduce using rule 49 (constructor_chain)


state 332

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list . RRB
   72 argument_list: argument_list . COMMA expression

    COMMA  shift, and go to state 215
    RRB    shift, and go to state 335


state 333

   57 method_define: DEF modifier_type_T IDENT type_parameter_group LRB RRB ARROW typename_T . scope_optional
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB
  173 scope_optional: . SEMI
  174               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 336


state 334

   56 method_define: DEF modifier_type_T IDENT type_parameter_group LRB parameter_list RRB ARROW . typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 337
    fqcn_part   go to state 149


state 335

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB .

    $default  reduce using rule 48 (constructor_chain)


state 336

   57 method_define: DEF modifier_type_T IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 57 (method_define)


state 337

   56 method_define: DEF modifier_type_T IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T . scope_optional
  171 scope: . LCB stmt_list RCB
  172      | . LCB RCB
  173 scope_optional: . SEMI
  174               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 338


state 338

   56 method_define: DEF modifier_type_T IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 56 (method_define)
