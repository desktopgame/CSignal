Terminals which are not used

   LINE
   LGEN
   RGEN
   INC
   DEC
   BOUNDS_EXTENDS
   BOUNDS_SUPER
   PRE_DEC
   PRE_INC
   QUOTE
   POST_DEC
   POST_INC
   '<'
   REF
   FORM_TYPE


State 44 conflicts: 1 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: init_decl body_decl
    2                 | compilation_unit body_decl
    3                 | error '\n'

    4 init_decl: /* empty */
    5          | import_list

    6 body_decl: stmt
    7          | namespace_decl
    8          | function_define

    9 namespace_decl: NAMESPACE namespace_path namespace_body

   10 namespace_body: LCB namespace_member_decl_optional RCB

   11 namespace_member_decl: NAMESPACE namespace_path namespace_body
   12                      | abstract_class_decl
   13                      | class_decl
   14                      | interface_decl
   15                      | enum_decl

   16 namespace_member_decl_list: namespace_member_decl
   17                           | namespace_member_decl_list namespace_member_decl

   18 namespace_member_decl_optional: /* empty */
   19                               | namespace_member_decl_list

   20 namespace_path: IDENT
   21               | namespace_path COLO_COLO IDENT

   22 import_list: import
   23            | import_list import

   24 import: IMPORT STRING_LITERAL

   25 parameterized_typename: IDENT type_parameter_group

   26 type_parameter_group: /* empty */
   27                     | LSB type_parameter_list RSB

   28 type_parameter_list: type_parameter
   29                    | type_parameter_list COMMA type_parameter

   30 type_parameter: IDENT

   31 abstract_class_decl: ABSTRACT CLASS parameterized_typename LCB access_member_tree_opt RCB
   32                    | ABSTRACT CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   33 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB
   34           | CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   35 enum_decl: ENUM IDENT LCB ident_list RCB
   36          | ENUM IDENT LCB ident_list COMMA RCB

   37 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   38               | INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   39 access_member_tree_opt: /* empty */
   40                       | access_member_tree

   41 access_member_tree: access_member_list
   42                   | access_member_tree access_member_list

   43 access_member_list: access_level_T COLON member_define_list

   44 member_define_list: member_define
   45                   | member_define_list member_define

   46 member_define: constructor_define
   47              | method_define
   48              | operator_define
   49              | field_define

   50 constructor_define: DEF NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | DEF NEW LRB RRB constructor_chain_optional scope_optional

   52 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB
   53                  | COLON constructor_chain_type_T LRB RRB

   54 constructor_chain_type_T: SUPER_TOK
   55                         | THIS_TOK

   56 constructor_chain_optional: /* empty */
   57                           | constructor_chain

   58 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   59                | DEF IDENT LRB RRB ARROW typename_T scope_optional

   60 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | DEF modifier_type_T_list IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   62              | DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   63              | DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

   64 operator_define: OPERATOR ADD LRB parameter_list RRB ARROW typename_T scope_optional
   65                | OPERATOR SUB LRB parameter_list RRB ARROW typename_T scope_optional
   66                | OPERATOR MUL LRB parameter_list RRB ARROW typename_T scope_optional
   67                | OPERATOR DIV LRB parameter_list RRB ARROW typename_T scope_optional
   68                | OPERATOR MOD LRB parameter_list RRB ARROW typename_T scope_optional
   69                | OPERATOR GT LRB parameter_list RRB ARROW typename_T scope_optional
   70                | OPERATOR GE LRB parameter_list RRB ARROW typename_T scope_optional
   71                | OPERATOR LT LRB parameter_list RRB ARROW typename_T scope_optional
   72                | OPERATOR LE LRB parameter_list RRB ARROW typename_T scope_optional
   73                | OPERATOR EQUAL LRB parameter_list RRB ARROW typename_T scope_optional
   74                | OPERATOR NOTEQUAL LRB parameter_list RRB ARROW typename_T scope_optional
   75                | OPERATOR BIT_OR LRB parameter_list RRB ARROW typename_T scope_optional
   76                | OPERATOR BIT_AND LRB parameter_list RRB ARROW typename_T scope_optional
   77                | OPERATOR LOGIC_OR LRB parameter_list RRB ARROW typename_T scope_optional
   78                | OPERATOR LOGIC_AND LRB parameter_list RRB ARROW typename_T scope_optional
   79                | OPERATOR LSHIFT LRB parameter_list RRB ARROW typename_T scope_optional
   80                | OPERATOR RSHIFT LRB parameter_list RRB ARROW typename_T scope_optional
   81                | OPERATOR EXC_OR LRB parameter_list RRB ARROW typename_T scope_optional
   82                | OPERATOR NOT LRB parameter_list RRB ARROW typename_T scope_optional
   83                | OPERATOR CHILDA LRB parameter_list RRB ARROW typename_T scope_optional

   84 field_define: modifier_type_T typename_T IDENT SEMI
   85             | typename_T IDENT SEMI

   86 modifier_type_T_list: modifier_type_T
   87                     | modifier_type_T_list modifier_type_T

   88 modifier_type_T: STATIC
   89                | NATIVE
   90                | ABSTRACT
   91                | OVERRIDE

   92 access_level_T: PUBLIC
   93               | PRIVATE
   94               | PROTECTED

   95 ident_list: IDENT
   96           | ident_list COMMA IDENT

   97 parameter_list: typename_T IDENT
   98               | parameter_list COMMA typename_T IDENT

   99 argument_list: expression
  100              | argument_list COMMA expression

  101 typename_group: /* empty */
  102               | LSB typename_list RSB

  103 typename_list: typename_T
  104              | typename_list COMMA typename_T

  105 typename_T: fqcn_part typename_group

  106 fqcn_part: IDENT
  107          | fqcn_part COLO_COLO IDENT

  108 expression: LRB expression RRB
  109           | primary
  110           | expression_nobrace

  111 expression_nobrace: ADD expression
  112                   | SUB expression
  113                   | expression ADD expression
  114                   | expression SUB expression
  115                   | expression MUL expression
  116                   | expression DIV expression
  117                   | expression MOD expression
  118                   | expression BIT_OR expression
  119                   | expression EQUAL expression
  120                   | expression NOTEQUAL expression
  121                   | expression BIT_AND expression
  122                   | expression EXC_OR expression
  123                   | expression LOGIC_OR expression
  124                   | expression LOGIC_AND expression
  125                   | lhs ASSIGN expression
  126                   | lhs ADD_ASSIGN expression
  127                   | lhs SUB_ASSIGN expression
  128                   | lhs MUL_ASSIGN expression
  129                   | lhs DIV_ASSIGN expression
  130                   | lhs MOD_ASSIGN expression
  131                   | lhs AND_ASSIGN expression
  132                   | lhs OR_ASSIGN expression
  133                   | lhs EXC_OR_ASSIGN expression
  134                   | lhs LSHIFT_ASSIGN expression
  135                   | lhs RSHIFT_ASSIGN expression
  136                   | expression GT expression
  137                   | expression GE expression
  138                   | expression LT expression
  139                   | expression LE expression
  140                   | expression LSHIFT expression
  141                   | expression RSHIFT expression
  142                   | expression INSTANCEOF typename_T
  143                   | expression AS typename_T
  144                   | CHILDA expression
  145                   | NOT expression
  146                   | expression_nobrace LRB argument_list RRB
  147                   | expression_nobrace LRB RRB
  148                   | NEW fqcn_part typename_group LRB argument_list RRB
  149                   | NEW fqcn_part typename_group LRB RRB
  150                   | THIS_TOK
  151                   | SUPER_TOK
  152                   | lhs

  153 lhs: fqcn_part typename_group
  154    | expression DOT IDENT typename_group

  155 primary: INT
  156        | DOUBLE
  157        | CHAR_LITERAL
  158        | STRING_LITERAL
  159        | TRUE_TOK
  160        | FALSE_TOK
  161        | NULL_TOK

  162 stmt_list: stmt
  163          | stmt_list stmt

  164 stmt: expression stmt_term
  165     | variable_decl_stmt
  166     | variable_init_stmt
  167     | inferenced_type_init_stmt
  168     | if_stmt
  169     | while_stmt
  170     | break_stmt
  171     | continue_stmt
  172     | return_stmt
  173     | throw_stmt
  174     | try_stmt
  175     | assert_stmt
  176     | defer_stmt

  177 variable_decl_stmt: typename_T IDENT SEMI

  178 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term

  179 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term

  180 if_stmt: IF expression scope
  181        | IF expression scope ELSE scope
  182        | IF expression scope elif_list
  183        | IF expression scope elif_list ELSE scope

  184 elif_list: elif
  185          | elif_list elif

  186 elif: ELIF expression scope

  187 while_stmt: WHILE expression scope_optional

  188 break_stmt: BREAK stmt_term

  189 continue_stmt: CONTINUE stmt_term

  190 return_stmt: RETURN expression stmt_term

  191 throw_stmt: THROW expression stmt_term

  192 try_stmt: TRY scope catch_stmt_list

  193 catch_stmt_list: catch_stmt
  194                | catch_stmt_list catch_stmt

  195 catch_stmt: CATCH LRB typename_T IDENT RRB scope

  196 assert_stmt: ASSERT_T expression COLON expression SEMI
  197            | ASSERT_T expression SEMI

  198 defer_stmt: DEFER stmt

  199 scope: LCB stmt_list RCB
  200      | LCB RCB

  201 scope_optional: SEMI
  202               | scope

  203 stmt_term: SEMI


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3
'<' (60)
error (256) 3
CHAR_LITERAL (258) 157
STRING_LITERAL (259) 24 158
INT (260) 155
DOUBLE (261) 156
IDENT (262) 20 21 25 30 35 36 58 59 60 61 62 63 84 85 95 96 97 98 106
    107 154 177 178 179 195
DOT (263) 154
COMMA (264) 29 36 96 98 100 104
COLON (265) 32 34 38 43 52 53 196
COLO_COLO (266) 21 107
LINE (267)
ADD (268) 64 111 113
SUB (269) 65 112 114
MUL (270) 66 115
DIV (271) 67 116
MOD (272) 68 117
NOT (273) 82 145
LSHIFT (274) 79 140
RSHIFT (275) 80 141
CHILDA (276) 83 144
EQUAL (277) 73 119
NOTEQUAL (278) 74 120
GT (279) 69 136
GE (280) 70 137
LT (281) 71 138
LE (282) 72 139
LGEN (283)
RGEN (284)
BIT_AND (285) 76 121
LOGIC_AND (286) 78 124
BIT_OR (287) 75 118
LOGIC_OR (288) 77 123
ASSIGN (289) 125 178 179
ADD_ASSIGN (290) 126
SUB_ASSIGN (291) 127
MUL_ASSIGN (292) 128
DIV_ASSIGN (293) 129
MOD_ASSIGN (294) 130
AND_ASSIGN (295) 131
OR_ASSIGN (296) 132
LSHIFT_ASSIGN (297) 134
RSHIFT_ASSIGN (298) 135
EXC_OR_ASSIGN (299) 133
INC (300)
DEC (301)
EXC_OR (302) 81 122
LCB (303) 10 31 32 33 34 35 36 37 38 199 200
RCB (304) 10 31 32 33 34 35 36 37 38 199 200
LRB (305) 50 51 52 53 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79 80 81 82 83 108 146 147 148 149 195
RRB (306) 50 51 52 53 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79 80 81 82 83 108 146 147 148 149 195
LSB (307) 27 102
RSB (308) 27 102
SEMI (309) 84 85 177 196 197 201 203
IMPORT (310) 24
VAR (311) 179
THIS_TOK (312) 55 150
SUPER_TOK (313) 54 151
TRUE_TOK (314) 159
FALSE_TOK (315) 160
NULL_TOK (316) 161
AS (317) 143
ABSTRACT (318) 31 32 90
OVERRIDE (319) 91
INTERFACE (320) 37 38
CLASS (321) 31 32 33 34
ENUM (322) 35 36
PUBLIC (323) 92
PRIVATE (324) 93
PROTECTED (325) 94
STATIC (326) 88
NATIVE (327) 89
NEW (328) 50 51 148 149
DEF (329) 50 51 58 59 60 61 62 63
ARROW (330) 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
    77 78 79 80 81 82 83
NAMESPACE (331) 9 11
RETURN (332) 190
IF (333) 180 181 182 183
ELIF (334) 186
ELSE (335) 181 183
WHILE (336) 187
BREAK (337) 188
CONTINUE (338) 189
TRY (339) 192
CATCH (340) 195
THROW (341) 191
ASSERT_T (342) 196 197
DEFER (343) 198
INSTANCEOF (344) 142
OPERATOR (345) 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83
BOUNDS_EXTENDS (346)
BOUNDS_SUPER (347)
PRE_DEC (348)
PRE_INC (349)
QUOTE (350)
POST_DEC (351)
POST_INC (352)
FUNCCALL (353)
REF (354)
POSITIVE (355)
NEGATIVE (356)
FORM_TYPE (357)


Nonterminals, with rules where they appear

$accept (105)
    on left: 0
compilation_unit (106)
    on left: 1 2 3, on right: 0 2
init_decl (107)
    on left: 4 5, on right: 1
body_decl (108)
    on left: 6 7 8, on right: 1 2
namespace_decl (109)
    on left: 9, on right: 7
namespace_body (110)
    on left: 10, on right: 9 11
namespace_member_decl (111)
    on left: 11 12 13 14 15, on right: 16 17
namespace_member_decl_list (112)
    on left: 16 17, on right: 17 19
namespace_member_decl_optional (113)
    on left: 18 19, on right: 10
namespace_path (114)
    on left: 20 21, on right: 9 11 21
import_list (115)
    on left: 22 23, on right: 5 23
import (116)
    on left: 24, on right: 22 23
parameterized_typename (117)
    on left: 25, on right: 31 32 33 34 37 38
type_parameter_group (118)
    on left: 26 27, on right: 25 60 61 62 63
type_parameter_list (119)
    on left: 28 29, on right: 27 29
type_parameter (120)
    on left: 30, on right: 28 29
abstract_class_decl (121)
    on left: 31 32, on right: 12
class_decl (122)
    on left: 33 34, on right: 13
enum_decl (123)
    on left: 35 36, on right: 15
interface_decl (124)
    on left: 37 38, on right: 14
access_member_tree_opt (125)
    on left: 39 40, on right: 31 32 33 34 37 38
access_member_tree (126)
    on left: 41 42, on right: 40 42
access_member_list (127)
    on left: 43, on right: 41 42
member_define_list (128)
    on left: 44 45, on right: 43 45
member_define (129)
    on left: 46 47 48 49, on right: 44 45
constructor_define (130)
    on left: 50 51, on right: 46
constructor_chain (131)
    on left: 52 53, on right: 57
constructor_chain_type_T (132)
    on left: 54 55, on right: 52 53
constructor_chain_optional (133)
    on left: 56 57, on right: 50 51
function_define (134)
    on left: 58 59, on right: 8
method_define (135)
    on left: 60 61 62 63, on right: 47
operator_define (136)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83, on right: 48
field_define (137)
    on left: 84 85, on right: 49
modifier_type_T_list (138)
    on left: 86 87, on right: 60 61 87
modifier_type_T (139)
    on left: 88 89 90 91, on right: 84 86 87
access_level_T (140)
    on left: 92 93 94, on right: 43
ident_list (141)
    on left: 95 96, on right: 35 36 96
parameter_list (142)
    on left: 97 98, on right: 50 58 60 62 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79 80 81 82 83 98
argument_list (143)
    on left: 99 100, on right: 52 100 146 148
typename_group (144)
    on left: 101 102, on right: 105 148 149 153 154
typename_list (145)
    on left: 103 104, on right: 32 34 38 102 104
typename_T (146)
    on left: 105, on right: 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 97 98 103 104 142
    143 177 178 195
fqcn_part (147)
    on left: 106 107, on right: 105 107 148 149 153
expression (148)
    on left: 108 109 110, on right: 99 100 108 111 112 113 114 115
    116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131
    132 133 134 135 136 137 138 139 140 141 142 143 144 145 154 164
    178 179 180 181 182 183 186 187 190 191 196 197
expression_nobrace (149)
    on left: 111 112 113 114 115 116 117 118 119 120 121 122 123 124
    125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
    141 142 143 144 145 146 147 148 149 150 151 152,
    on right: 110 146 147
lhs (150)
    on left: 153 154, on right: 125 126 127 128 129 130 131 132 133
    134 135 152
primary (151)
    on left: 155 156 157 158 159 160 161, on right: 109
stmt_list (152)
    on left: 162 163, on right: 163 199
stmt (153)
    on left: 164 165 166 167 168 169 170 171 172 173 174 175 176,
    on right: 6 162 163 198
variable_decl_stmt (154)
    on left: 177, on right: 165
variable_init_stmt (155)
    on left: 178, on right: 166
inferenced_type_init_stmt (156)
    on left: 179, on right: 167
if_stmt (157)
    on left: 180 181 182 183, on right: 168
elif_list (158)
    on left: 184 185, on right: 182 183 185
elif (159)
    on left: 186, on right: 184 185
while_stmt (160)
    on left: 187, on right: 169
break_stmt (161)
    on left: 188, on right: 170
continue_stmt (162)
    on left: 189, on right: 171
return_stmt (163)
    on left: 190, on right: 172
throw_stmt (164)
    on left: 191, on right: 173
try_stmt (165)
    on left: 192, on right: 174
catch_stmt_list (166)
    on left: 193 194, on right: 192 194
catch_stmt (167)
    on left: 195, on right: 193 194
assert_stmt (168)
    on left: 196 197, on right: 175
defer_stmt (169)
    on left: 198, on right: 176
scope (170)
    on left: 199 200, on right: 180 181 182 183 186 192 195 202
scope_optional (171)
    on left: 201 202, on right: 50 51 58 59 60 61 62 63 64 65 66 67
    68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 187
stmt_term (172)
    on left: 203, on right: 164 178 179 188 189 190 191


state 0

    0 $accept: . compilation_unit $end
    1 compilation_unit: . init_decl body_decl
    2                 | . compilation_unit body_decl
    3                 | . error '\n'
    4 init_decl: .  [CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
    5          | . import_list
   22 import_list: . import
   23            | . import_list import
   24 import: . IMPORT STRING_LITERAL

    error   shift, and go to state 1
    IMPORT  shift, and go to state 2

    CHAR_LITERAL    reduce using rule 4 (init_decl)
    STRING_LITERAL  reduce using rule 4 (init_decl)
    INT             reduce using rule 4 (init_decl)
    DOUBLE          reduce using rule 4 (init_decl)
    IDENT           reduce using rule 4 (init_decl)
    ADD             reduce using rule 4 (init_decl)
    SUB             reduce using rule 4 (init_decl)
    NOT             reduce using rule 4 (init_decl)
    CHILDA          reduce using rule 4 (init_decl)
    LRB             reduce using rule 4 (init_decl)
    VAR             reduce using rule 4 (init_decl)
    THIS_TOK        reduce using rule 4 (init_decl)
    SUPER_TOK       reduce using rule 4 (init_decl)
    TRUE_TOK        reduce using rule 4 (init_decl)
    FALSE_TOK       reduce using rule 4 (init_decl)
    NULL_TOK        reduce using rule 4 (init_decl)
    NEW             reduce using rule 4 (init_decl)
    DEF             reduce using rule 4 (init_decl)
    NAMESPACE       reduce using rule 4 (init_decl)
    RETURN          reduce using rule 4 (init_decl)
    IF              reduce using rule 4 (init_decl)
    WHILE           reduce using rule 4 (init_decl)
    BREAK           reduce using rule 4 (init_decl)
    CONTINUE        reduce using rule 4 (init_decl)
    TRY             reduce using rule 4 (init_decl)
    THROW           reduce using rule 4 (init_decl)
    ASSERT_T        reduce using rule 4 (init_decl)
    DEFER           reduce using rule 4 (init_decl)

    compilation_unit  go to state 3
    init_decl         go to state 4
    import_list       go to state 5
    import            go to state 6


state 1

    3 compilation_unit: error . '\n'

    '\n'  shift, and go to state 7


state 2

   24 import: IMPORT . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 8


state 3

    0 $accept: compilation_unit . $end
    2 compilation_unit: compilation_unit . body_decl
    6 body_decl: . stmt
    7          | . namespace_decl
    8          | . function_define
    9 namespace_decl: . NAMESPACE namespace_path namespace_body
   58 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   59                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  164 stmt: . expression stmt_term
  165     | . variable_decl_stmt
  166     | . variable_init_stmt
  167     | . inferenced_type_init_stmt
  168     | . if_stmt
  169     | . while_stmt
  170     | . break_stmt
  171     | . continue_stmt
  172     | . return_stmt
  173     | . throw_stmt
  174     | . try_stmt
  175     | . assert_stmt
  176     | . defer_stmt
  177 variable_decl_stmt: . typename_T IDENT SEMI
  178 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  179 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  180 if_stmt: . IF expression scope
  181        | . IF expression scope ELSE scope
  182        | . IF expression scope elif_list
  183        | . IF expression scope elif_list ELSE scope
  187 while_stmt: . WHILE expression scope_optional
  188 break_stmt: . BREAK stmt_term
  189 continue_stmt: . CONTINUE stmt_term
  190 return_stmt: . RETURN expression stmt_term
  191 throw_stmt: . THROW expression stmt_term
  192 try_stmt: . TRY scope catch_stmt_list
  196 assert_stmt: . ASSERT_T expression COLON expression SEMI
  197            | . ASSERT_T expression SEMI
  198 defer_stmt: . DEFER stmt

    $end            shift, and go to state 9
    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    DEF             shift, and go to state 27
    NAMESPACE       shift, and go to state 28
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    body_decl                  go to state 38
    namespace_decl             go to state 39
    function_define            go to state 40
    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt                       go to state 47
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 4

    1 compilation_unit: init_decl . body_decl
    6 body_decl: . stmt
    7          | . namespace_decl
    8          | . function_define
    9 namespace_decl: . NAMESPACE namespace_path namespace_body
   58 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   59                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  164 stmt: . expression stmt_term
  165     | . variable_decl_stmt
  166     | . variable_init_stmt
  167     | . inferenced_type_init_stmt
  168     | . if_stmt
  169     | . while_stmt
  170     | . break_stmt
  171     | . continue_stmt
  172     | . return_stmt
  173     | . throw_stmt
  174     | . try_stmt
  175     | . assert_stmt
  176     | . defer_stmt
  177 variable_decl_stmt: . typename_T IDENT SEMI
  178 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  179 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  180 if_stmt: . IF expression scope
  181        | . IF expression scope ELSE scope
  182        | . IF expression scope elif_list
  183        | . IF expression scope elif_list ELSE scope
  187 while_stmt: . WHILE expression scope_optional
  188 break_stmt: . BREAK stmt_term
  189 continue_stmt: . CONTINUE stmt_term
  190 return_stmt: . RETURN expression stmt_term
  191 throw_stmt: . THROW expression stmt_term
  192 try_stmt: . TRY scope catch_stmt_list
  196 assert_stmt: . ASSERT_T expression COLON expression SEMI
  197            | . ASSERT_T expression SEMI
  198 defer_stmt: . DEFER stmt

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    DEF             shift, and go to state 27
    NAMESPACE       shift, and go to state 28
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    body_decl                  go to state 60
    namespace_decl             go to state 39
    function_define            go to state 40
    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt                       go to state 47
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 5

    5 init_decl: import_list .  [CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
   23 import_list: import_list . import
   24 import: . IMPORT STRING_LITERAL

    IMPORT  shift, and go to state 2

    $default  reduce using rule 5 (init_decl)

    import  go to state 61


state 6

   22 import_list: import .

    $default  reduce using rule 22 (import_list)


state 7

    3 compilation_unit: error '\n' .

    $default  reduce using rule 3 (compilation_unit)


state 8

   24 import: IMPORT STRING_LITERAL .

    $default  reduce using rule 24 (import)


state 9

    0 $accept: compilation_unit $end .

    $default  accept


state 10

  157 primary: CHAR_LITERAL .

    $default  reduce using rule 157 (primary)


state 11

  158 primary: STRING_LITERAL .

    $default  reduce using rule 158 (primary)


state 12

  155 primary: INT .

    $default  reduce using rule 155 (primary)


state 13

  156 primary: DOUBLE .

    $default  reduce using rule 156 (primary)


state 14

  106 fqcn_part: IDENT .

    $default  reduce using rule 106 (fqcn_part)


state 15

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  111                   | ADD . expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 63
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 16

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  112                   | SUB . expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 64
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 17

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  145                   | NOT . expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 65
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 18

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  144                   | CHILDA . expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 66
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 19

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  108           | LRB . expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 67
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 20

  179 inferenced_type_init_stmt: VAR . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 68


state 21

  150 expression_nobrace: THIS_TOK .

    $default  reduce using rule 150 (expression_nobrace)


state 22

  151 expression_nobrace: SUPER_TOK .

    $default  reduce using rule 151 (expression_nobrace)


state 23

  159 primary: TRUE_TOK .

    $default  reduce using rule 159 (primary)


state 24

  160 primary: FALSE_TOK .

    $default  reduce using rule 160 (primary)


state 25

  161 primary: NULL_TOK .

    $default  reduce using rule 161 (primary)


state 26

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  148 expression_nobrace: NEW . fqcn_part typename_group LRB argument_list RRB
  149                   | NEW . fqcn_part typename_group LRB RRB

    IDENT  shift, and go to state 14

    fqcn_part  go to state 69


state 27

   58 function_define: DEF . IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   59                | DEF . IDENT LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 70


state 28

    9 namespace_decl: NAMESPACE . namespace_path namespace_body
   20 namespace_path: . IDENT
   21               | . namespace_path COLO_COLO IDENT

    IDENT  shift, and go to state 71

    namespace_path  go to state 72


state 29

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  190 return_stmt: RETURN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 73
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 30

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  180 if_stmt: IF . expression scope
  181        | IF . expression scope ELSE scope
  182        | IF . expression scope elif_list
  183        | IF . expression scope elif_list ELSE scope

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 74
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 31

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  187 while_stmt: WHILE . expression scope_optional

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 75
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 32

  188 break_stmt: BREAK . stmt_term
  203 stmt_term: . SEMI

    SEMI  shift, and go to state 76

    stmt_term  go to state 77


state 33

  189 continue_stmt: CONTINUE . stmt_term
  203 stmt_term: . SEMI

    SEMI  shift, and go to state 76

    stmt_term  go to state 78


state 34

  192 try_stmt: TRY . scope catch_stmt_list
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB

    LCB  shift, and go to state 79

    scope  go to state 80


state 35

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  191 throw_stmt: THROW . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 81
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 36

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  196 assert_stmt: ASSERT_T . expression COLON expression SEMI
  197            | ASSERT_T . expression SEMI

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 82
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 37

  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  164 stmt: . expression stmt_term
  165     | . variable_decl_stmt
  166     | . variable_init_stmt
  167     | . inferenced_type_init_stmt
  168     | . if_stmt
  169     | . while_stmt
  170     | . break_stmt
  171     | . continue_stmt
  172     | . return_stmt
  173     | . throw_stmt
  174     | . try_stmt
  175     | . assert_stmt
  176     | . defer_stmt
  177 variable_decl_stmt: . typename_T IDENT SEMI
  178 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  179 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  180 if_stmt: . IF expression scope
  181        | . IF expression scope ELSE scope
  182        | . IF expression scope elif_list
  183        | . IF expression scope elif_list ELSE scope
  187 while_stmt: . WHILE expression scope_optional
  188 break_stmt: . BREAK stmt_term
  189 continue_stmt: . CONTINUE stmt_term
  190 return_stmt: . RETURN expression stmt_term
  191 throw_stmt: . THROW expression stmt_term
  192 try_stmt: . TRY scope catch_stmt_list
  196 assert_stmt: . ASSERT_T expression COLON expression SEMI
  197            | . ASSERT_T expression SEMI
  198 defer_stmt: . DEFER stmt
  198           | DEFER . stmt

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt                       go to state 83
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 38

    2 compilation_unit: compilation_unit body_decl .

    $default  reduce using rule 2 (compilation_unit)


state 39

    7 body_decl: namespace_decl .

    $default  reduce using rule 7 (body_decl)


state 40

    8 body_decl: function_define .

    $default  reduce using rule 8 (body_decl)


state 41

  177 variable_decl_stmt: typename_T . IDENT SEMI
  178 variable_init_stmt: typename_T . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 84


state 42

  101 typename_group: .  [IDENT, DOT, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, SEMI, AS, INSTANCEOF]
  102               | . LSB typename_list RSB
  105 typename_T: fqcn_part . typename_group
  107 fqcn_part: fqcn_part . COLO_COLO IDENT
  153 lhs: fqcn_part . typename_group

    COLO_COLO  shift, and go to state 85
    LSB        shift, and go to state 86

    $default  reduce using rule 101 (typename_group)

    typename_group  go to state 87


state 43

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  164 stmt: expression . stmt_term
  203 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 109


state 44

  110 expression: expression_nobrace .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS, INSTANCEOF]
  146 expression_nobrace: expression_nobrace . LRB argument_list RRB
  147                   | expression_nobrace . LRB RRB

    LRB  shift, and go to state 110

    LRB       [reduce using rule 110 (expression)]
    $default  reduce using rule 110 (expression)


state 45

  125 expression_nobrace: lhs . ASSIGN expression
  126                   | lhs . ADD_ASSIGN expression
  127                   | lhs . SUB_ASSIGN expression
  128                   | lhs . MUL_ASSIGN expression
  129                   | lhs . DIV_ASSIGN expression
  130                   | lhs . MOD_ASSIGN expression
  131                   | lhs . AND_ASSIGN expression
  132                   | lhs . OR_ASSIGN expression
  133                   | lhs . EXC_OR_ASSIGN expression
  134                   | lhs . LSHIFT_ASSIGN expression
  135                   | lhs . RSHIFT_ASSIGN expression
  152                   | lhs .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS, INSTANCEOF]

    ASSIGN         shift, and go to state 111
    ADD_ASSIGN     shift, and go to state 112
    SUB_ASSIGN     shift, and go to state 113
    MUL_ASSIGN     shift, and go to state 114
    DIV_ASSIGN     shift, and go to state 115
    MOD_ASSIGN     shift, and go to state 116
    AND_ASSIGN     shift, and go to state 117
    OR_ASSIGN      shift, and go to state 118
    LSHIFT_ASSIGN  shift, and go to state 119
    RSHIFT_ASSIGN  shift, and go to state 120
    EXC_OR_ASSIGN  shift, and go to state 121

    $default  reduce using rule 152 (expression_nobrace)


state 46

  109 expression: primary .

    $default  reduce using rule 109 (expression)


state 47

    6 body_decl: stmt .

    $default  reduce using rule 6 (body_decl)


state 48

  165 stmt: variable_decl_stmt .

    $default  reduce using rule 165 (stmt)


state 49

  166 stmt: variable_init_stmt .

    $default  reduce using rule 166 (stmt)


state 50

  167 stmt: inferenced_type_init_stmt .

    $default  reduce using rule 167 (stmt)


state 51

  168 stmt: if_stmt .

    $default  reduce using rule 168 (stmt)


state 52

  169 stmt: while_stmt .

    $default  reduce using rule 169 (stmt)


state 53

  170 stmt: break_stmt .

    $default  reduce using rule 170 (stmt)


state 54

  171 stmt: continue_stmt .

    $default  reduce using rule 171 (stmt)


state 55

  172 stmt: return_stmt .

    $default  reduce using rule 172 (stmt)


state 56

  173 stmt: throw_stmt .

    $default  reduce using rule 173 (stmt)


state 57

  174 stmt: try_stmt .

    $default  reduce using rule 174 (stmt)


state 58

  175 stmt: assert_stmt .

    $default  reduce using rule 175 (stmt)


state 59

  176 stmt: defer_stmt .

    $default  reduce using rule 176 (stmt)


state 60

    1 compilation_unit: init_decl body_decl .

    $default  reduce using rule 1 (compilation_unit)


state 61

   23 import_list: import_list import .

    $default  reduce using rule 23 (import_list)


state 62

  101 typename_group: .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LCB, LRB, RRB, SEMI, AS, INSTANCEOF]
  102               | . LSB typename_list RSB
  107 fqcn_part: fqcn_part . COLO_COLO IDENT
  153 lhs: fqcn_part . typename_group

    COLO_COLO  shift, and go to state 85
    LSB        shift, and go to state 86

    $default  reduce using rule 101 (typename_group)

    typename_group  go to state 122


state 63

  111 expression_nobrace: ADD expression .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  113                   | expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 107

    $default  reduce using rule 111 (expression_nobrace)

    Conflict between rule 111 and token DOT resolved as reduce (DOT < POSITIVE).
    Conflict between rule 111 and token ADD resolved as reduce (ADD < POSITIVE).
    Conflict between rule 111 and token SUB resolved as reduce (SUB < POSITIVE).
    Conflict between rule 111 and token MUL resolved as reduce (MUL < POSITIVE).
    Conflict between rule 111 and token DIV resolved as reduce (DIV < POSITIVE).
    Conflict between rule 111 and token MOD resolved as reduce (MOD < POSITIVE).
    Conflict between rule 111 and token LSHIFT resolved as reduce (LSHIFT < POSITIVE).
    Conflict between rule 111 and token RSHIFT resolved as reduce (RSHIFT < POSITIVE).
    Conflict between rule 111 and token EQUAL resolved as reduce (EQUAL < POSITIVE).
    Conflict between rule 111 and token NOTEQUAL resolved as reduce (NOTEQUAL < POSITIVE).
    Conflict between rule 111 and token GT resolved as reduce (GT < POSITIVE).
    Conflict between rule 111 and token GE resolved as reduce (GE < POSITIVE).
    Conflict between rule 111 and token LT resolved as reduce (LT < POSITIVE).
    Conflict between rule 111 and token LE resolved as reduce (LE < POSITIVE).
    Conflict between rule 111 and token BIT_AND resolved as reduce (BIT_AND < POSITIVE).
    Conflict between rule 111 and token LOGIC_AND resolved as reduce (LOGIC_AND < POSITIVE).
    Conflict between rule 111 and token BIT_OR resolved as reduce (BIT_OR < POSITIVE).
    Conflict between rule 111 and token LOGIC_OR resolved as reduce (LOGIC_OR < POSITIVE).
    Conflict between rule 111 and token EXC_OR resolved as reduce (EXC_OR < POSITIVE).
    Conflict between rule 111 and token AS resolved as shift (POSITIVE < AS).
    Conflict between rule 111 and token INSTANCEOF resolved as reduce (INSTANCEOF < POSITIVE).


state 64

  112 expression_nobrace: SUB expression .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  113                   | expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 107

    $default  reduce using rule 112 (expression_nobrace)

    Conflict between rule 112 and token DOT resolved as reduce (DOT < NEGATIVE).
    Conflict between rule 112 and token ADD resolved as reduce (ADD < NEGATIVE).
    Conflict between rule 112 and token SUB resolved as reduce (SUB < NEGATIVE).
    Conflict between rule 112 and token MUL resolved as reduce (MUL < NEGATIVE).
    Conflict between rule 112 and token DIV resolved as reduce (DIV < NEGATIVE).
    Conflict between rule 112 and token MOD resolved as reduce (MOD < NEGATIVE).
    Conflict between rule 112 and token LSHIFT resolved as reduce (LSHIFT < NEGATIVE).
    Conflict between rule 112 and token RSHIFT resolved as reduce (RSHIFT < NEGATIVE).
    Conflict between rule 112 and token EQUAL resolved as reduce (EQUAL < NEGATIVE).
    Conflict between rule 112 and token NOTEQUAL resolved as reduce (NOTEQUAL < NEGATIVE).
    Conflict between rule 112 and token GT resolved as reduce (GT < NEGATIVE).
    Conflict between rule 112 and token GE resolved as reduce (GE < NEGATIVE).
    Conflict between rule 112 and token LT resolved as reduce (LT < NEGATIVE).
    Conflict between rule 112 and token LE resolved as reduce (LE < NEGATIVE).
    Conflict between rule 112 and token BIT_AND resolved as reduce (BIT_AND < NEGATIVE).
    Conflict between rule 112 and token LOGIC_AND resolved as reduce (LOGIC_AND < NEGATIVE).
    Conflict between rule 112 and token BIT_OR resolved as reduce (BIT_OR < NEGATIVE).
    Conflict between rule 112 and token LOGIC_OR resolved as reduce (LOGIC_OR < NEGATIVE).
    Conflict between rule 112 and token EXC_OR resolved as reduce (EXC_OR < NEGATIVE).
    Conflict between rule 112 and token AS resolved as shift (NEGATIVE < AS).
    Conflict between rule 112 and token INSTANCEOF resolved as reduce (INSTANCEOF < NEGATIVE).


state 65

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  145                   | NOT expression .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  154 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 107

    $default  reduce using rule 145 (expression_nobrace)

    Conflict between rule 145 and token DOT resolved as reduce (DOT < NOT).
    Conflict between rule 145 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 145 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 145 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 145 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 145 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 145 and token LSHIFT resolved as reduce (LSHIFT < NOT).
    Conflict between rule 145 and token RSHIFT resolved as reduce (RSHIFT < NOT).
    Conflict between rule 145 and token EQUAL resolved as reduce (EQUAL < NOT).
    Conflict between rule 145 and token NOTEQUAL resolved as reduce (NOTEQUAL < NOT).
    Conflict between rule 145 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 145 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 145 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 145 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 145 and token BIT_AND resolved as reduce (BIT_AND < NOT).
    Conflict between rule 145 and token LOGIC_AND resolved as reduce (LOGIC_AND < NOT).
    Conflict between rule 145 and token BIT_OR resolved as reduce (BIT_OR < NOT).
    Conflict between rule 145 and token LOGIC_OR resolved as reduce (LOGIC_OR < NOT).
    Conflict between rule 145 and token EXC_OR resolved as reduce (EXC_OR < NOT).
    Conflict between rule 145 and token AS resolved as shift (NOT < AS).
    Conflict between rule 145 and token INSTANCEOF resolved as reduce (INSTANCEOF < NOT).


state 66

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  144                   | CHILDA expression .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  154 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 107

    $default  reduce using rule 144 (expression_nobrace)

    Conflict between rule 144 and token DOT resolved as reduce (DOT < CHILDA).
    Conflict between rule 144 and token ADD resolved as reduce (ADD < CHILDA).
    Conflict between rule 144 and token SUB resolved as reduce (SUB < CHILDA).
    Conflict between rule 144 and token MUL resolved as reduce (MUL < CHILDA).
    Conflict between rule 144 and token DIV resolved as reduce (DIV < CHILDA).
    Conflict between rule 144 and token MOD resolved as reduce (MOD < CHILDA).
    Conflict between rule 144 and token LSHIFT resolved as reduce (LSHIFT < CHILDA).
    Conflict between rule 144 and token RSHIFT resolved as reduce (RSHIFT < CHILDA).
    Conflict between rule 144 and token EQUAL resolved as reduce (EQUAL < CHILDA).
    Conflict between rule 144 and token NOTEQUAL resolved as reduce (NOTEQUAL < CHILDA).
    Conflict between rule 144 and token GT resolved as reduce (GT < CHILDA).
    Conflict between rule 144 and token GE resolved as reduce (GE < CHILDA).
    Conflict between rule 144 and token LT resolved as reduce (LT < CHILDA).
    Conflict between rule 144 and token LE resolved as reduce (LE < CHILDA).
    Conflict between rule 144 and token BIT_AND resolved as reduce (BIT_AND < CHILDA).
    Conflict between rule 144 and token LOGIC_AND resolved as reduce (LOGIC_AND < CHILDA).
    Conflict between rule 144 and token BIT_OR resolved as reduce (BIT_OR < CHILDA).
    Conflict between rule 144 and token LOGIC_OR resolved as reduce (LOGIC_OR < CHILDA).
    Conflict between rule 144 and token EXC_OR resolved as reduce (EXC_OR < CHILDA).
    Conflict between rule 144 and token AS resolved as shift (CHILDA < AS).
    Conflict between rule 144 and token INSTANCEOF resolved as reduce (INSTANCEOF < CHILDA).


state 67

  108 expression: LRB expression . RRB
  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    RRB         shift, and go to state 123
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108


state 68

  179 inferenced_type_init_stmt: VAR IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 124


state 69

  101 typename_group: .  [LRB]
  102               | . LSB typename_list RSB
  107 fqcn_part: fqcn_part . COLO_COLO IDENT
  148 expression_nobrace: NEW fqcn_part . typename_group LRB argument_list RRB
  149                   | NEW fqcn_part . typename_group LRB RRB

    COLO_COLO  shift, and go to state 85
    LSB        shift, and go to state 86

    $default  reduce using rule 101 (typename_group)

    typename_group  go to state 125


state 70

   58 function_define: DEF IDENT . LRB parameter_list RRB ARROW typename_T scope_optional
   59                | DEF IDENT . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 126


state 71

   20 namespace_path: IDENT .

    $default  reduce using rule 20 (namespace_path)


state 72

    9 namespace_decl: NAMESPACE namespace_path . namespace_body
   10 namespace_body: . LCB namespace_member_decl_optional RCB
   21 namespace_path: namespace_path . COLO_COLO IDENT

    COLO_COLO  shift, and go to state 127
    LCB        shift, and go to state 128

    namespace_body  go to state 129


state 73

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  190 return_stmt: RETURN expression . stmt_term
  203 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 130


state 74

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  180 if_stmt: IF expression . scope
  181        | IF expression . scope ELSE scope
  182        | IF expression . scope elif_list
  183        | IF expression . scope elif_list ELSE scope
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    LCB         shift, and go to state 79
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    scope  go to state 131


state 75

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  187 while_stmt: WHILE expression . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    LCB         shift, and go to state 79
    SEMI        shift, and go to state 132
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    scope           go to state 133
    scope_optional  go to state 134


state 76

  203 stmt_term: SEMI .

    $default  reduce using rule 203 (stmt_term)


state 77

  188 break_stmt: BREAK stmt_term .

    $default  reduce using rule 188 (break_stmt)


state 78

  189 continue_stmt: CONTINUE stmt_term .

    $default  reduce using rule 189 (continue_stmt)


state 79

  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  162 stmt_list: . stmt
  163          | . stmt_list stmt
  164 stmt: . expression stmt_term
  165     | . variable_decl_stmt
  166     | . variable_init_stmt
  167     | . inferenced_type_init_stmt
  168     | . if_stmt
  169     | . while_stmt
  170     | . break_stmt
  171     | . continue_stmt
  172     | . return_stmt
  173     | . throw_stmt
  174     | . try_stmt
  175     | . assert_stmt
  176     | . defer_stmt
  177 variable_decl_stmt: . typename_T IDENT SEMI
  178 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  179 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  180 if_stmt: . IF expression scope
  181        | . IF expression scope ELSE scope
  182        | . IF expression scope elif_list
  183        | . IF expression scope elif_list ELSE scope
  187 while_stmt: . WHILE expression scope_optional
  188 break_stmt: . BREAK stmt_term
  189 continue_stmt: . CONTINUE stmt_term
  190 return_stmt: . RETURN expression stmt_term
  191 throw_stmt: . THROW expression stmt_term
  192 try_stmt: . TRY scope catch_stmt_list
  196 assert_stmt: . ASSERT_T expression COLON expression SEMI
  197            | . ASSERT_T expression SEMI
  198 defer_stmt: . DEFER stmt
  199 scope: LCB . stmt_list RCB
  200      | LCB . RCB

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    RCB             shift, and go to state 135
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt_list                  go to state 136
    stmt                       go to state 137
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 80

  192 try_stmt: TRY scope . catch_stmt_list
  193 catch_stmt_list: . catch_stmt
  194                | . catch_stmt_list catch_stmt
  195 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 138

    catch_stmt_list  go to state 139
    catch_stmt       go to state 140


state 81

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  191 throw_stmt: THROW expression . stmt_term
  203 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 141


state 82

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  196 assert_stmt: ASSERT_T expression . COLON expression SEMI
  197            | ASSERT_T expression . SEMI

    DOT         shift, and go to state 88
    COLON       shift, and go to state 142
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 143
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108


state 83

  198 defer_stmt: DEFER stmt .

    $default  reduce using rule 198 (defer_stmt)


state 84

  177 variable_decl_stmt: typename_T IDENT . SEMI
  178 variable_init_stmt: typename_T IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 144
    SEMI    shift, and go to state 145


state 85

  107 fqcn_part: fqcn_part COLO_COLO . IDENT

    IDENT  shift, and go to state 146


state 86

  102 typename_group: LSB . typename_list RSB
  103 typename_list: . typename_T
  104              | . typename_list COMMA typename_T
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 147
    typename_T     go to state 148
    fqcn_part      go to state 149


state 87

  105 typename_T: fqcn_part typename_group .  [IDENT]
  153 lhs: fqcn_part typename_group .  [DOT, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, SEMI, AS, INSTANCEOF]

    IDENT     reduce using rule 105 (typename_T)
    $default  reduce using rule 153 (lhs)


state 88

  154 lhs: expression DOT . IDENT typename_group

    IDENT  shift, and go to state 150


state 89

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  113                   | expression ADD . expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 151
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 90

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  114                   | expression SUB . expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 152
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 91

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  115                   | expression MUL . expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 153
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 92

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  116                   | expression DIV . expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 154
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 93

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  117                   | expression MOD . expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 155
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 94

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  140                   | expression LSHIFT . expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 156
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 95

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  141                   | expression RSHIFT . expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 157
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 96

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  119                   | expression EQUAL . expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 158
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 97

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  120                   | expression NOTEQUAL . expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 159
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 98

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  136                   | expression GT . expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 160
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 99

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  137                   | expression GE . expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 161
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 100

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  138                   | expression LT . expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 162
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 101

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  139                   | expression LE . expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 163
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 102

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  121                   | expression BIT_AND . expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 164
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 103

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  124                   | expression LOGIC_AND . expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 165
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 104

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  118                   | expression BIT_OR . expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 166
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 105

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  123                   | expression LOGIC_OR . expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 167
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 106

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  122                   | expression EXC_OR . expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 168
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 107

  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  143 expression_nobrace: expression AS . typename_T

    IDENT  shift, and go to state 14

    typename_T  go to state 169
    fqcn_part   go to state 149


state 108

  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  142 expression_nobrace: expression INSTANCEOF . typename_T

    IDENT  shift, and go to state 14

    typename_T  go to state 170
    fqcn_part   go to state 149


state 109

  164 stmt: expression stmt_term .

    $default  reduce using rule 164 (stmt)


state 110

   99 argument_list: . expression
  100              | . argument_list COMMA expression
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  146                   | expression_nobrace LRB . argument_list RRB
  147                   | . expression_nobrace LRB RRB
  147                   | expression_nobrace LRB . RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 171
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 172
    fqcn_part           go to state 62
    expression          go to state 173
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 111

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  125                   | lhs ASSIGN . expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 174
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 112

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  126                   | lhs ADD_ASSIGN . expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 175
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 113

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  127                   | lhs SUB_ASSIGN . expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 176
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 114

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  128                   | lhs MUL_ASSIGN . expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 177
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 115

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  129                   | lhs DIV_ASSIGN . expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 178
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 116

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  130                   | lhs MOD_ASSIGN . expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 179
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 117

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  131                   | lhs AND_ASSIGN . expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 180
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 118

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  132                   | lhs OR_ASSIGN . expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 181
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 119

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  134                   | lhs LSHIFT_ASSIGN . expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 182
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 120

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  135                   | lhs RSHIFT_ASSIGN . expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 183
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 121

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  133                   | lhs EXC_OR_ASSIGN . expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 184
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 122

  153 lhs: fqcn_part typename_group .

    $default  reduce using rule 153 (lhs)


state 123

  108 expression: LRB expression RRB .

    $default  reduce using rule 108 (expression)


state 124

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  179 inferenced_type_init_stmt: VAR IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 185
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 125

  148 expression_nobrace: NEW fqcn_part typename_group . LRB argument_list RRB
  149                   | NEW fqcn_part typename_group . LRB RRB

    LRB  shift, and go to state 186


state 126

   58 function_define: DEF IDENT LRB . parameter_list RRB ARROW typename_T scope_optional
   59                | DEF IDENT LRB . RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 187

    parameter_list  go to state 188
    typename_T      go to state 189
    fqcn_part       go to state 149


state 127

   21 namespace_path: namespace_path COLO_COLO . IDENT

    IDENT  shift, and go to state 190


state 128

   10 namespace_body: LCB . namespace_member_decl_optional RCB
   11 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   12                      | . abstract_class_decl
   13                      | . class_decl
   14                      | . interface_decl
   15                      | . enum_decl
   16 namespace_member_decl_list: . namespace_member_decl
   17                           | . namespace_member_decl_list namespace_member_decl
   18 namespace_member_decl_optional: .  [RCB]
   19                               | . namespace_member_decl_list
   31 abstract_class_decl: . ABSTRACT CLASS parameterized_typename LCB access_member_tree_opt RCB
   32                    | . ABSTRACT CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   33 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   34           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   35 enum_decl: . ENUM IDENT LCB ident_list RCB
   36          | . ENUM IDENT LCB ident_list COMMA RCB
   37 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   38               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    ABSTRACT   shift, and go to state 191
    INTERFACE  shift, and go to state 192
    CLASS      shift, and go to state 193
    ENUM       shift, and go to state 194
    NAMESPACE  shift, and go to state 195

    $default  reduce using rule 18 (namespace_member_decl_optional)

    namespace_member_decl           go to state 196
    namespace_member_decl_list      go to state 197
    namespace_member_decl_optional  go to state 198
    abstract_class_decl             go to state 199
    class_decl                      go to state 200
    enum_decl                       go to state 201
    interface_decl                  go to state 202


state 129

    9 namespace_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 9 (namespace_decl)


state 130

  190 return_stmt: RETURN expression stmt_term .

    $default  reduce using rule 190 (return_stmt)


state 131

  180 if_stmt: IF expression scope .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
  181        | IF expression scope . ELSE scope
  182        | IF expression scope . elif_list
  183        | IF expression scope . elif_list ELSE scope
  184 elif_list: . elif
  185          | . elif_list elif
  186 elif: . ELIF expression scope

    ELIF  shift, and go to state 203
    ELSE  shift, and go to state 204

    $default  reduce using rule 180 (if_stmt)

    elif_list  go to state 205
    elif       go to state 206


state 132

  201 scope_optional: SEMI .

    $default  reduce using rule 201 (scope_optional)


state 133

  202 scope_optional: scope .

    $default  reduce using rule 202 (scope_optional)


state 134

  187 while_stmt: WHILE expression scope_optional .

    $default  reduce using rule 187 (while_stmt)


state 135

  200 scope: LCB RCB .

    $default  reduce using rule 200 (scope)


state 136

  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  163 stmt_list: stmt_list . stmt
  164 stmt: . expression stmt_term
  165     | . variable_decl_stmt
  166     | . variable_init_stmt
  167     | . inferenced_type_init_stmt
  168     | . if_stmt
  169     | . while_stmt
  170     | . break_stmt
  171     | . continue_stmt
  172     | . return_stmt
  173     | . throw_stmt
  174     | . try_stmt
  175     | . assert_stmt
  176     | . defer_stmt
  177 variable_decl_stmt: . typename_T IDENT SEMI
  178 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  179 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  180 if_stmt: . IF expression scope
  181        | . IF expression scope ELSE scope
  182        | . IF expression scope elif_list
  183        | . IF expression scope elif_list ELSE scope
  187 while_stmt: . WHILE expression scope_optional
  188 break_stmt: . BREAK stmt_term
  189 continue_stmt: . CONTINUE stmt_term
  190 return_stmt: . RETURN expression stmt_term
  191 throw_stmt: . THROW expression stmt_term
  192 try_stmt: . TRY scope catch_stmt_list
  196 assert_stmt: . ASSERT_T expression COLON expression SEMI
  197            | . ASSERT_T expression SEMI
  198 defer_stmt: . DEFER stmt
  199 scope: LCB stmt_list . RCB

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    RCB             shift, and go to state 207
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35
    ASSERT_T        shift, and go to state 36
    DEFER           shift, and go to state 37

    typename_T                 go to state 41
    fqcn_part                  go to state 42
    expression                 go to state 43
    expression_nobrace         go to state 44
    lhs                        go to state 45
    primary                    go to state 46
    stmt                       go to state 208
    variable_decl_stmt         go to state 48
    variable_init_stmt         go to state 49
    inferenced_type_init_stmt  go to state 50
    if_stmt                    go to state 51
    while_stmt                 go to state 52
    break_stmt                 go to state 53
    continue_stmt              go to state 54
    return_stmt                go to state 55
    throw_stmt                 go to state 56
    try_stmt                   go to state 57
    assert_stmt                go to state 58
    defer_stmt                 go to state 59


state 137

  162 stmt_list: stmt .

    $default  reduce using rule 162 (stmt_list)


state 138

  195 catch_stmt: CATCH . LRB typename_T IDENT RRB scope

    LRB  shift, and go to state 209


state 139

  192 try_stmt: TRY scope catch_stmt_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
  194 catch_stmt_list: catch_stmt_list . catch_stmt
  195 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 138

    $default  reduce using rule 192 (try_stmt)

    catch_stmt  go to state 210


state 140

  193 catch_stmt_list: catch_stmt .

    $default  reduce using rule 193 (catch_stmt_list)


state 141

  191 throw_stmt: THROW expression stmt_term .

    $default  reduce using rule 191 (throw_stmt)


state 142

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  196 assert_stmt: ASSERT_T expression COLON . expression SEMI

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 211
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 143

  197 assert_stmt: ASSERT_T expression SEMI .

    $default  reduce using rule 197 (assert_stmt)


state 144

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  178 variable_init_stmt: typename_T IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 212
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 145

  177 variable_decl_stmt: typename_T IDENT SEMI .

    $default  reduce using rule 177 (variable_decl_stmt)


state 146

  107 fqcn_part: fqcn_part COLO_COLO IDENT .

    $default  reduce using rule 107 (fqcn_part)


state 147

  102 typename_group: LSB typename_list . RSB
  104 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 213
    RSB    shift, and go to state 214


state 148

  103 typename_list: typename_T .

    $default  reduce using rule 103 (typename_list)


state 149

  101 typename_group: .  [IDENT, DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, RSB, SEMI, AS, INSTANCEOF]
  102               | . LSB typename_list RSB
  105 typename_T: fqcn_part . typename_group
  107 fqcn_part: fqcn_part . COLO_COLO IDENT

    COLO_COLO  shift, and go to state 85
    LSB        shift, and go to state 86

    $default  reduce using rule 101 (typename_group)

    typename_group  go to state 215


state 150

  101 typename_group: .  [DOT, COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LCB, LRB, RRB, SEMI, AS, INSTANCEOF]
  102               | . LSB typename_list RSB
  154 lhs: expression DOT IDENT . typename_group

    LSB  shift, and go to state 86

    $default  reduce using rule 101 (typename_group)

    typename_group  go to state 216


state 151

  113 expression_nobrace: expression . ADD expression  [COMMA, COLON, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  113                   | expression ADD expression .  [COMMA, COLON, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 113 (expression_nobrace)

    Conflict between rule 113 and token DOT resolved as shift (ADD < DOT).
    Conflict between rule 113 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 113 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 113 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 113 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 113 and token MOD resolved as shift (ADD < MOD).
    Conflict between rule 113 and token LSHIFT resolved as reduce (LSHIFT < ADD).
    Conflict between rule 113 and token RSHIFT resolved as reduce (RSHIFT < ADD).
    Conflict between rule 113 and token EQUAL resolved as reduce (EQUAL < ADD).
    Conflict between rule 113 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD).
    Conflict between rule 113 and token GT resolved as reduce (GT < ADD).
    Conflict between rule 113 and token GE resolved as reduce (GE < ADD).
    Conflict between rule 113 and token LT resolved as reduce (LT < ADD).
    Conflict between rule 113 and token LE resolved as reduce (LE < ADD).
    Conflict between rule 113 and token BIT_AND resolved as reduce (BIT_AND < ADD).
    Conflict between rule 113 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD).
    Conflict between rule 113 and token BIT_OR resolved as reduce (BIT_OR < ADD).
    Conflict between rule 113 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD).
    Conflict between rule 113 and token EXC_OR resolved as reduce (EXC_OR < ADD).
    Conflict between rule 113 and token AS resolved as shift (ADD < AS).
    Conflict between rule 113 and token INSTANCEOF resolved as reduce (INSTANCEOF < ADD).


state 152

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression  [COMMA, COLON, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  114                   | expression SUB expression .  [COMMA, COLON, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 114 (expression_nobrace)

    Conflict between rule 114 and token DOT resolved as shift (SUB < DOT).
    Conflict between rule 114 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 114 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 114 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 114 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 114 and token MOD resolved as shift (SUB < MOD).
    Conflict between rule 114 and token LSHIFT resolved as reduce (LSHIFT < SUB).
    Conflict between rule 114 and token RSHIFT resolved as reduce (RSHIFT < SUB).
    Conflict between rule 114 and token EQUAL resolved as reduce (EQUAL < SUB).
    Conflict between rule 114 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB).
    Conflict between rule 114 and token GT resolved as reduce (GT < SUB).
    Conflict between rule 114 and token GE resolved as reduce (GE < SUB).
    Conflict between rule 114 and token LT resolved as reduce (LT < SUB).
    Conflict between rule 114 and token LE resolved as reduce (LE < SUB).
    Conflict between rule 114 and token BIT_AND resolved as reduce (BIT_AND < SUB).
    Conflict between rule 114 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB).
    Conflict between rule 114 and token BIT_OR resolved as reduce (BIT_OR < SUB).
    Conflict between rule 114 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB).
    Conflict between rule 114 and token EXC_OR resolved as reduce (EXC_OR < SUB).
    Conflict between rule 114 and token AS resolved as shift (SUB < AS).
    Conflict between rule 114 and token INSTANCEOF resolved as reduce (INSTANCEOF < SUB).


state 153

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  115                   | expression MUL expression .  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    AS   shift, and go to state 107

    $default  reduce using rule 115 (expression_nobrace)

    Conflict between rule 115 and token DOT resolved as shift (MUL < DOT).
    Conflict between rule 115 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 115 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 115 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 115 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 115 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 115 and token LSHIFT resolved as reduce (LSHIFT < MUL).
    Conflict between rule 115 and token RSHIFT resolved as reduce (RSHIFT < MUL).
    Conflict between rule 115 and token EQUAL resolved as reduce (EQUAL < MUL).
    Conflict between rule 115 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL).
    Conflict between rule 115 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 115 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 115 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 115 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 115 and token BIT_AND resolved as reduce (BIT_AND < MUL).
    Conflict between rule 115 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL).
    Conflict between rule 115 and token BIT_OR resolved as reduce (BIT_OR < MUL).
    Conflict between rule 115 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL).
    Conflict between rule 115 and token EXC_OR resolved as reduce (EXC_OR < MUL).
    Conflict between rule 115 and token AS resolved as shift (MUL < AS).
    Conflict between rule 115 and token INSTANCEOF resolved as reduce (INSTANCEOF < MUL).


state 154

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  116                   | expression DIV expression .  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    AS   shift, and go to state 107

    $default  reduce using rule 116 (expression_nobrace)

    Conflict between rule 116 and token DOT resolved as shift (DIV < DOT).
    Conflict between rule 116 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 116 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 116 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 116 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 116 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 116 and token LSHIFT resolved as reduce (LSHIFT < DIV).
    Conflict between rule 116 and token RSHIFT resolved as reduce (RSHIFT < DIV).
    Conflict between rule 116 and token EQUAL resolved as reduce (EQUAL < DIV).
    Conflict between rule 116 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV).
    Conflict between rule 116 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 116 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 116 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 116 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 116 and token BIT_AND resolved as reduce (BIT_AND < DIV).
    Conflict between rule 116 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV).
    Conflict between rule 116 and token BIT_OR resolved as reduce (BIT_OR < DIV).
    Conflict between rule 116 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV).
    Conflict between rule 116 and token EXC_OR resolved as reduce (EXC_OR < DIV).
    Conflict between rule 116 and token AS resolved as shift (DIV < AS).
    Conflict between rule 116 and token INSTANCEOF resolved as reduce (INSTANCEOF < DIV).


state 155

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  117                   | expression MOD expression .  [COMMA, COLON, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    AS   shift, and go to state 107

    $default  reduce using rule 117 (expression_nobrace)

    Conflict between rule 117 and token DOT resolved as shift (MOD < DOT).
    Conflict between rule 117 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 117 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 117 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 117 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 117 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 117 and token LSHIFT resolved as reduce (LSHIFT < MOD).
    Conflict between rule 117 and token RSHIFT resolved as reduce (RSHIFT < MOD).
    Conflict between rule 117 and token EQUAL resolved as reduce (EQUAL < MOD).
    Conflict between rule 117 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD).
    Conflict between rule 117 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 117 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 117 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 117 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 117 and token BIT_AND resolved as reduce (BIT_AND < MOD).
    Conflict between rule 117 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD).
    Conflict between rule 117 and token BIT_OR resolved as reduce (BIT_OR < MOD).
    Conflict between rule 117 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD).
    Conflict between rule 117 and token EXC_OR resolved as reduce (EXC_OR < MOD).
    Conflict between rule 117 and token AS resolved as shift (MOD < AS).
    Conflict between rule 117 and token INSTANCEOF resolved as reduce (INSTANCEOF < MOD).


state 156

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  140                   | expression LSHIFT expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 140 (expression_nobrace)

    Conflict between rule 140 and token DOT resolved as shift (LSHIFT < DOT).
    Conflict between rule 140 and token ADD resolved as shift (LSHIFT < ADD).
    Conflict between rule 140 and token SUB resolved as shift (LSHIFT < SUB).
    Conflict between rule 140 and token MUL resolved as shift (LSHIFT < MUL).
    Conflict between rule 140 and token DIV resolved as shift (LSHIFT < DIV).
    Conflict between rule 140 and token MOD resolved as shift (LSHIFT < MOD).
    Conflict between rule 140 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 140 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 140 and token EQUAL resolved as reduce (EQUAL < LSHIFT).
    Conflict between rule 140 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT).
    Conflict between rule 140 and token GT resolved as shift (LSHIFT < GT).
    Conflict between rule 140 and token GE resolved as shift (LSHIFT < GE).
    Conflict between rule 140 and token LT resolved as shift (LSHIFT < LT).
    Conflict between rule 140 and token LE resolved as shift (LSHIFT < LE).
    Conflict between rule 140 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT).
    Conflict between rule 140 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT).
    Conflict between rule 140 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT).
    Conflict between rule 140 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT).
    Conflict between rule 140 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT).
    Conflict between rule 140 and token AS resolved as shift (LSHIFT < AS).
    Conflict between rule 140 and token INSTANCEOF resolved as shift (LSHIFT < INSTANCEOF).


state 157

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  141                   | expression RSHIFT expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 141 (expression_nobrace)

    Conflict between rule 141 and token DOT resolved as shift (RSHIFT < DOT).
    Conflict between rule 141 and token ADD resolved as shift (RSHIFT < ADD).
    Conflict between rule 141 and token SUB resolved as shift (RSHIFT < SUB).
    Conflict between rule 141 and token MUL resolved as shift (RSHIFT < MUL).
    Conflict between rule 141 and token DIV resolved as shift (RSHIFT < DIV).
    Conflict between rule 141 and token MOD resolved as shift (RSHIFT < MOD).
    Conflict between rule 141 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 141 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 141 and token EQUAL resolved as reduce (EQUAL < RSHIFT).
    Conflict between rule 141 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT).
    Conflict between rule 141 and token GT resolved as shift (RSHIFT < GT).
    Conflict between rule 141 and token GE resolved as shift (RSHIFT < GE).
    Conflict between rule 141 and token LT resolved as shift (RSHIFT < LT).
    Conflict between rule 141 and token LE resolved as shift (RSHIFT < LE).
    Conflict between rule 141 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT).
    Conflict between rule 141 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT).
    Conflict between rule 141 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT).
    Conflict between rule 141 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT).
    Conflict between rule 141 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT).
    Conflict between rule 141 and token AS resolved as shift (RSHIFT < AS).
    Conflict between rule 141 and token INSTANCEOF resolved as shift (RSHIFT < INSTANCEOF).


state 158

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression  [COMMA, COLON, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
  119                   | expression EQUAL expression .  [COMMA, COLON, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 119 (expression_nobrace)

    Conflict between rule 119 and token DOT resolved as shift (EQUAL < DOT).
    Conflict between rule 119 and token ADD resolved as shift (EQUAL < ADD).
    Conflict between rule 119 and token SUB resolved as shift (EQUAL < SUB).
    Conflict between rule 119 and token MUL resolved as shift (EQUAL < MUL).
    Conflict between rule 119 and token DIV resolved as shift (EQUAL < DIV).
    Conflict between rule 119 and token MOD resolved as shift (EQUAL < MOD).
    Conflict between rule 119 and token LSHIFT resolved as shift (EQUAL < LSHIFT).
    Conflict between rule 119 and token RSHIFT resolved as shift (EQUAL < RSHIFT).
    Conflict between rule 119 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 119 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 119 and token GT resolved as shift (EQUAL < GT).
    Conflict between rule 119 and token GE resolved as shift (EQUAL < GE).
    Conflict between rule 119 and token LT resolved as shift (EQUAL < LT).
    Conflict between rule 119 and token LE resolved as shift (EQUAL < LE).
    Conflict between rule 119 and token BIT_AND resolved as shift (EQUAL < BIT_AND).
    Conflict between rule 119 and token LOGIC_AND resolved as shift (EQUAL < LOGIC_AND).
    Conflict between rule 119 and token BIT_OR resolved as shift (EQUAL < BIT_OR).
    Conflict between rule 119 and token LOGIC_OR resolved as shift (EQUAL < LOGIC_OR).
    Conflict between rule 119 and token EXC_OR resolved as shift (EQUAL < EXC_OR).
    Conflict between rule 119 and token AS resolved as shift (EQUAL < AS).
    Conflict between rule 119 and token INSTANCEOF resolved as shift (EQUAL < INSTANCEOF).


state 159

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression  [COMMA, COLON, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
  120                   | expression NOTEQUAL expression .  [COMMA, COLON, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 120 (expression_nobrace)

    Conflict between rule 120 and token DOT resolved as shift (NOTEQUAL < DOT).
    Conflict between rule 120 and token ADD resolved as shift (NOTEQUAL < ADD).
    Conflict between rule 120 and token SUB resolved as shift (NOTEQUAL < SUB).
    Conflict between rule 120 and token MUL resolved as shift (NOTEQUAL < MUL).
    Conflict between rule 120 and token DIV resolved as shift (NOTEQUAL < DIV).
    Conflict between rule 120 and token MOD resolved as shift (NOTEQUAL < MOD).
    Conflict between rule 120 and token LSHIFT resolved as shift (NOTEQUAL < LSHIFT).
    Conflict between rule 120 and token RSHIFT resolved as shift (NOTEQUAL < RSHIFT).
    Conflict between rule 120 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 120 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 120 and token GT resolved as shift (NOTEQUAL < GT).
    Conflict between rule 120 and token GE resolved as shift (NOTEQUAL < GE).
    Conflict between rule 120 and token LT resolved as shift (NOTEQUAL < LT).
    Conflict between rule 120 and token LE resolved as shift (NOTEQUAL < LE).
    Conflict between rule 120 and token BIT_AND resolved as shift (NOTEQUAL < BIT_AND).
    Conflict between rule 120 and token LOGIC_AND resolved as shift (NOTEQUAL < LOGIC_AND).
    Conflict between rule 120 and token BIT_OR resolved as shift (NOTEQUAL < BIT_OR).
    Conflict between rule 120 and token LOGIC_OR resolved as shift (NOTEQUAL < LOGIC_OR).
    Conflict between rule 120 and token EXC_OR resolved as shift (NOTEQUAL < EXC_OR).
    Conflict between rule 120 and token AS resolved as shift (NOTEQUAL < AS).
    Conflict between rule 120 and token INSTANCEOF resolved as shift (NOTEQUAL < INSTANCEOF).


state 160

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  136                   | expression GT expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 136 (expression_nobrace)

    Conflict between rule 136 and token DOT resolved as shift (GT < DOT).
    Conflict between rule 136 and token ADD resolved as shift (GT < ADD).
    Conflict between rule 136 and token SUB resolved as shift (GT < SUB).
    Conflict between rule 136 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 136 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 136 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 136 and token LSHIFT resolved as reduce (LSHIFT < GT).
    Conflict between rule 136 and token RSHIFT resolved as reduce (RSHIFT < GT).
    Conflict between rule 136 and token EQUAL resolved as reduce (EQUAL < GT).
    Conflict between rule 136 and token NOTEQUAL resolved as reduce (NOTEQUAL < GT).
    Conflict between rule 136 and token GT resolved as reduce (%left GT).
    Conflict between rule 136 and token GE resolved as reduce (%left GE).
    Conflict between rule 136 and token LT resolved as reduce (%left LT).
    Conflict between rule 136 and token LE resolved as reduce (%left LE).
    Conflict between rule 136 and token BIT_AND resolved as reduce (BIT_AND < GT).
    Conflict between rule 136 and token LOGIC_AND resolved as reduce (LOGIC_AND < GT).
    Conflict between rule 136 and token BIT_OR resolved as reduce (BIT_OR < GT).
    Conflict between rule 136 and token LOGIC_OR resolved as reduce (LOGIC_OR < GT).
    Conflict between rule 136 and token EXC_OR resolved as reduce (EXC_OR < GT).
    Conflict between rule 136 and token AS resolved as shift (GT < AS).
    Conflict between rule 136 and token INSTANCEOF resolved as reduce (%left INSTANCEOF).


state 161

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  137                   | expression GE expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 137 (expression_nobrace)

    Conflict between rule 137 and token DOT resolved as shift (GE < DOT).
    Conflict between rule 137 and token ADD resolved as shift (GE < ADD).
    Conflict between rule 137 and token SUB resolved as shift (GE < SUB).
    Conflict between rule 137 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 137 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 137 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 137 and token LSHIFT resolved as reduce (LSHIFT < GE).
    Conflict between rule 137 and token RSHIFT resolved as reduce (RSHIFT < GE).
    Conflict between rule 137 and token EQUAL resolved as reduce (EQUAL < GE).
    Conflict between rule 137 and token NOTEQUAL resolved as reduce (NOTEQUAL < GE).
    Conflict between rule 137 and token GT resolved as reduce (%left GT).
    Conflict between rule 137 and token GE resolved as reduce (%left GE).
    Conflict between rule 137 and token LT resolved as reduce (%left LT).
    Conflict between rule 137 and token LE resolved as reduce (%left LE).
    Conflict between rule 137 and token BIT_AND resolved as reduce (BIT_AND < GE).
    Conflict between rule 137 and token LOGIC_AND resolved as reduce (LOGIC_AND < GE).
    Conflict between rule 137 and token BIT_OR resolved as reduce (BIT_OR < GE).
    Conflict between rule 137 and token LOGIC_OR resolved as reduce (LOGIC_OR < GE).
    Conflict between rule 137 and token EXC_OR resolved as reduce (EXC_OR < GE).
    Conflict between rule 137 and token AS resolved as shift (GE < AS).
    Conflict between rule 137 and token INSTANCEOF resolved as reduce (%left INSTANCEOF).


state 162

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  138                   | expression LT expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 138 (expression_nobrace)

    Conflict between rule 138 and token DOT resolved as shift (LT < DOT).
    Conflict between rule 138 and token ADD resolved as shift (LT < ADD).
    Conflict between rule 138 and token SUB resolved as shift (LT < SUB).
    Conflict between rule 138 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 138 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 138 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 138 and token LSHIFT resolved as reduce (LSHIFT < LT).
    Conflict between rule 138 and token RSHIFT resolved as reduce (RSHIFT < LT).
    Conflict between rule 138 and token EQUAL resolved as reduce (EQUAL < LT).
    Conflict between rule 138 and token NOTEQUAL resolved as reduce (NOTEQUAL < LT).
    Conflict between rule 138 and token GT resolved as reduce (%left GT).
    Conflict between rule 138 and token GE resolved as reduce (%left GE).
    Conflict between rule 138 and token LT resolved as reduce (%left LT).
    Conflict between rule 138 and token LE resolved as reduce (%left LE).
    Conflict between rule 138 and token BIT_AND resolved as reduce (BIT_AND < LT).
    Conflict between rule 138 and token LOGIC_AND resolved as reduce (LOGIC_AND < LT).
    Conflict between rule 138 and token BIT_OR resolved as reduce (BIT_OR < LT).
    Conflict between rule 138 and token LOGIC_OR resolved as reduce (LOGIC_OR < LT).
    Conflict between rule 138 and token EXC_OR resolved as reduce (EXC_OR < LT).
    Conflict between rule 138 and token AS resolved as shift (LT < AS).
    Conflict between rule 138 and token INSTANCEOF resolved as reduce (%left INSTANCEOF).


state 163

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  139                   | expression LE expression .  [COMMA, COLON, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, INSTANCEOF]
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 88
    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    AS   shift, and go to state 107

    $default  reduce using rule 139 (expression_nobrace)

    Conflict between rule 139 and token DOT resolved as shift (LE < DOT).
    Conflict between rule 139 and token ADD resolved as shift (LE < ADD).
    Conflict between rule 139 and token SUB resolved as shift (LE < SUB).
    Conflict between rule 139 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 139 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 139 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 139 and token LSHIFT resolved as reduce (LSHIFT < LE).
    Conflict between rule 139 and token RSHIFT resolved as reduce (RSHIFT < LE).
    Conflict between rule 139 and token EQUAL resolved as reduce (EQUAL < LE).
    Conflict between rule 139 and token NOTEQUAL resolved as reduce (NOTEQUAL < LE).
    Conflict between rule 139 and token GT resolved as reduce (%left GT).
    Conflict between rule 139 and token GE resolved as reduce (%left GE).
    Conflict between rule 139 and token LT resolved as reduce (%left LT).
    Conflict between rule 139 and token LE resolved as reduce (%left LE).
    Conflict between rule 139 and token BIT_AND resolved as reduce (BIT_AND < LE).
    Conflict between rule 139 and token LOGIC_AND resolved as reduce (LOGIC_AND < LE).
    Conflict between rule 139 and token BIT_OR resolved as reduce (BIT_OR < LE).
    Conflict between rule 139 and token LOGIC_OR resolved as reduce (LOGIC_OR < LE).
    Conflict between rule 139 and token EXC_OR resolved as reduce (EXC_OR < LE).
    Conflict between rule 139 and token AS resolved as shift (LE < AS).
    Conflict between rule 139 and token INSTANCEOF resolved as reduce (%left INSTANCEOF).


state 164

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
  121                   | expression BIT_AND expression .  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_OR      shift, and go to state 104
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 121 (expression_nobrace)

    Conflict between rule 121 and token DOT resolved as shift (BIT_AND < DOT).
    Conflict between rule 121 and token ADD resolved as shift (BIT_AND < ADD).
    Conflict between rule 121 and token SUB resolved as shift (BIT_AND < SUB).
    Conflict between rule 121 and token MUL resolved as shift (BIT_AND < MUL).
    Conflict between rule 121 and token DIV resolved as shift (BIT_AND < DIV).
    Conflict between rule 121 and token MOD resolved as shift (BIT_AND < MOD).
    Conflict between rule 121 and token LSHIFT resolved as shift (BIT_AND < LSHIFT).
    Conflict between rule 121 and token RSHIFT resolved as shift (BIT_AND < RSHIFT).
    Conflict between rule 121 and token EQUAL resolved as reduce (EQUAL < BIT_AND).
    Conflict between rule 121 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_AND).
    Conflict between rule 121 and token GT resolved as shift (BIT_AND < GT).
    Conflict between rule 121 and token GE resolved as shift (BIT_AND < GE).
    Conflict between rule 121 and token LT resolved as shift (BIT_AND < LT).
    Conflict between rule 121 and token LE resolved as shift (BIT_AND < LE).
    Conflict between rule 121 and token BIT_AND resolved as reduce (%left BIT_AND).
    Conflict between rule 121 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_AND).
    Conflict between rule 121 and token BIT_OR resolved as shift (BIT_AND < BIT_OR).
    Conflict between rule 121 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_AND).
    Conflict between rule 121 and token EXC_OR resolved as shift (BIT_AND < EXC_OR).
    Conflict between rule 121 and token AS resolved as shift (BIT_AND < AS).
    Conflict between rule 121 and token INSTANCEOF resolved as shift (BIT_AND < INSTANCEOF).


state 165

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression  [COMMA, COLON, EQUAL, NOTEQUAL, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
  124                   | expression LOGIC_AND expression .  [COMMA, COLON, EQUAL, NOTEQUAL, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    BIT_OR      shift, and go to state 104
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 124 (expression_nobrace)

    Conflict between rule 124 and token DOT resolved as shift (LOGIC_AND < DOT).
    Conflict between rule 124 and token ADD resolved as shift (LOGIC_AND < ADD).
    Conflict between rule 124 and token SUB resolved as shift (LOGIC_AND < SUB).
    Conflict between rule 124 and token MUL resolved as shift (LOGIC_AND < MUL).
    Conflict between rule 124 and token DIV resolved as shift (LOGIC_AND < DIV).
    Conflict between rule 124 and token MOD resolved as shift (LOGIC_AND < MOD).
    Conflict between rule 124 and token LSHIFT resolved as shift (LOGIC_AND < LSHIFT).
    Conflict between rule 124 and token RSHIFT resolved as shift (LOGIC_AND < RSHIFT).
    Conflict between rule 124 and token EQUAL resolved as reduce (EQUAL < LOGIC_AND).
    Conflict between rule 124 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_AND).
    Conflict between rule 124 and token GT resolved as shift (LOGIC_AND < GT).
    Conflict between rule 124 and token GE resolved as shift (LOGIC_AND < GE).
    Conflict between rule 124 and token LT resolved as shift (LOGIC_AND < LT).
    Conflict between rule 124 and token LE resolved as shift (LOGIC_AND < LE).
    Conflict between rule 124 and token BIT_AND resolved as shift (LOGIC_AND < BIT_AND).
    Conflict between rule 124 and token LOGIC_AND resolved as reduce (%left LOGIC_AND).
    Conflict between rule 124 and token BIT_OR resolved as shift (LOGIC_AND < BIT_OR).
    Conflict between rule 124 and token LOGIC_OR resolved as reduce (LOGIC_OR < LOGIC_AND).
    Conflict between rule 124 and token EXC_OR resolved as shift (LOGIC_AND < EXC_OR).
    Conflict between rule 124 and token AS resolved as shift (LOGIC_AND < AS).
    Conflict between rule 124 and token INSTANCEOF resolved as shift (LOGIC_AND < INSTANCEOF).


state 166

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, LCB, LRB, RRB, SEMI]
  118                   | expression BIT_OR expression .  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, LCB, LRB, RRB, SEMI]
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 118 (expression_nobrace)

    Conflict between rule 118 and token DOT resolved as shift (BIT_OR < DOT).
    Conflict between rule 118 and token ADD resolved as shift (BIT_OR < ADD).
    Conflict between rule 118 and token SUB resolved as shift (BIT_OR < SUB).
    Conflict between rule 118 and token MUL resolved as shift (BIT_OR < MUL).
    Conflict between rule 118 and token DIV resolved as shift (BIT_OR < DIV).
    Conflict between rule 118 and token MOD resolved as shift (BIT_OR < MOD).
    Conflict between rule 118 and token LSHIFT resolved as shift (BIT_OR < LSHIFT).
    Conflict between rule 118 and token RSHIFT resolved as shift (BIT_OR < RSHIFT).
    Conflict between rule 118 and token EQUAL resolved as reduce (EQUAL < BIT_OR).
    Conflict between rule 118 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_OR).
    Conflict between rule 118 and token GT resolved as shift (BIT_OR < GT).
    Conflict between rule 118 and token GE resolved as shift (BIT_OR < GE).
    Conflict between rule 118 and token LT resolved as shift (BIT_OR < LT).
    Conflict between rule 118 and token LE resolved as shift (BIT_OR < LE).
    Conflict between rule 118 and token BIT_AND resolved as reduce (BIT_AND < BIT_OR).
    Conflict between rule 118 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_OR).
    Conflict between rule 118 and token BIT_OR resolved as reduce (%left BIT_OR).
    Conflict between rule 118 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_OR).
    Conflict between rule 118 and token EXC_OR resolved as shift (BIT_OR < EXC_OR).
    Conflict between rule 118 and token AS resolved as shift (BIT_OR < AS).
    Conflict between rule 118 and token INSTANCEOF resolved as shift (BIT_OR < INSTANCEOF).


state 167

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression  [COMMA, COLON, EQUAL, NOTEQUAL, LOGIC_OR, LCB, LRB, RRB, SEMI]
  123                   | expression LOGIC_OR expression .  [COMMA, COLON, EQUAL, NOTEQUAL, LOGIC_OR, LCB, LRB, RRB, SEMI]
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 123 (expression_nobrace)

    Conflict between rule 123 and token DOT resolved as shift (LOGIC_OR < DOT).
    Conflict between rule 123 and token ADD resolved as shift (LOGIC_OR < ADD).
    Conflict between rule 123 and token SUB resolved as shift (LOGIC_OR < SUB).
    Conflict between rule 123 and token MUL resolved as shift (LOGIC_OR < MUL).
    Conflict between rule 123 and token DIV resolved as shift (LOGIC_OR < DIV).
    Conflict between rule 123 and token MOD resolved as shift (LOGIC_OR < MOD).
    Conflict between rule 123 and token LSHIFT resolved as shift (LOGIC_OR < LSHIFT).
    Conflict between rule 123 and token RSHIFT resolved as shift (LOGIC_OR < RSHIFT).
    Conflict between rule 123 and token EQUAL resolved as reduce (EQUAL < LOGIC_OR).
    Conflict between rule 123 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_OR).
    Conflict between rule 123 and token GT resolved as shift (LOGIC_OR < GT).
    Conflict between rule 123 and token GE resolved as shift (LOGIC_OR < GE).
    Conflict between rule 123 and token LT resolved as shift (LOGIC_OR < LT).
    Conflict between rule 123 and token LE resolved as shift (LOGIC_OR < LE).
    Conflict between rule 123 and token BIT_AND resolved as shift (LOGIC_OR < BIT_AND).
    Conflict between rule 123 and token LOGIC_AND resolved as shift (LOGIC_OR < LOGIC_AND).
    Conflict between rule 123 and token BIT_OR resolved as shift (LOGIC_OR < BIT_OR).
    Conflict between rule 123 and token LOGIC_OR resolved as reduce (%left LOGIC_OR).
    Conflict between rule 123 and token EXC_OR resolved as shift (LOGIC_OR < EXC_OR).
    Conflict between rule 123 and token AS resolved as shift (LOGIC_OR < AS).
    Conflict between rule 123 and token INSTANCEOF resolved as shift (LOGIC_OR < INSTANCEOF).


state 168

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  122                   | expression EXC_OR expression .  [COMMA, COLON, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 122 (expression_nobrace)

    Conflict between rule 122 and token DOT resolved as shift (EXC_OR < DOT).
    Conflict between rule 122 and token ADD resolved as shift (EXC_OR < ADD).
    Conflict between rule 122 and token SUB resolved as shift (EXC_OR < SUB).
    Conflict between rule 122 and token MUL resolved as shift (EXC_OR < MUL).
    Conflict between rule 122 and token DIV resolved as shift (EXC_OR < DIV).
    Conflict between rule 122 and token MOD resolved as shift (EXC_OR < MOD).
    Conflict between rule 122 and token LSHIFT resolved as shift (EXC_OR < LSHIFT).
    Conflict between rule 122 and token RSHIFT resolved as shift (EXC_OR < RSHIFT).
    Conflict between rule 122 and token EQUAL resolved as reduce (EQUAL < EXC_OR).
    Conflict between rule 122 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR).
    Conflict between rule 122 and token GT resolved as shift (EXC_OR < GT).
    Conflict between rule 122 and token GE resolved as shift (EXC_OR < GE).
    Conflict between rule 122 and token LT resolved as shift (EXC_OR < LT).
    Conflict between rule 122 and token LE resolved as shift (EXC_OR < LE).
    Conflict between rule 122 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR).
    Conflict between rule 122 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR).
    Conflict between rule 122 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR).
    Conflict between rule 122 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR).
    Conflict between rule 122 and token EXC_OR resolved as reduce (%left EXC_OR).
    Conflict between rule 122 and token AS resolved as shift (EXC_OR < AS).
    Conflict between rule 122 and token INSTANCEOF resolved as shift (EXC_OR < INSTANCEOF).


state 169

  143 expression_nobrace: expression AS typename_T .

    $default  reduce using rule 143 (expression_nobrace)


state 170

  142 expression_nobrace: expression INSTANCEOF typename_T .

    $default  reduce using rule 142 (expression_nobrace)


state 171

  147 expression_nobrace: expression_nobrace LRB RRB .

    $default  reduce using rule 147 (expression_nobrace)


state 172

  100 argument_list: argument_list . COMMA expression
  146 expression_nobrace: expression_nobrace LRB argument_list . RRB

    COMMA  shift, and go to state 217
    RRB    shift, and go to state 218


state 173

   99 argument_list: expression .  [COMMA, RRB]
  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 99 (argument_list)


state 174

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  125                   | lhs ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 125 (expression_nobrace)

    Conflict between rule 125 and token DOT resolved as shift (ASSIGN < DOT).
    Conflict between rule 125 and token ADD resolved as shift (ASSIGN < ADD).
    Conflict between rule 125 and token SUB resolved as shift (ASSIGN < SUB).
    Conflict between rule 125 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 125 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 125 and token MOD resolved as shift (ASSIGN < MOD).
    Conflict between rule 125 and token LSHIFT resolved as shift (ASSIGN < LSHIFT).
    Conflict between rule 125 and token RSHIFT resolved as shift (ASSIGN < RSHIFT).
    Conflict between rule 125 and token EQUAL resolved as shift (ASSIGN < EQUAL).
    Conflict between rule 125 and token NOTEQUAL resolved as shift (ASSIGN < NOTEQUAL).
    Conflict between rule 125 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 125 and token GE resolved as shift (ASSIGN < GE).
    Conflict between rule 125 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 125 and token LE resolved as shift (ASSIGN < LE).
    Conflict between rule 125 and token BIT_AND resolved as shift (ASSIGN < BIT_AND).
    Conflict between rule 125 and token LOGIC_AND resolved as shift (ASSIGN < LOGIC_AND).
    Conflict between rule 125 and token BIT_OR resolved as shift (ASSIGN < BIT_OR).
    Conflict between rule 125 and token LOGIC_OR resolved as shift (ASSIGN < LOGIC_OR).
    Conflict between rule 125 and token EXC_OR resolved as shift (ASSIGN < EXC_OR).
    Conflict between rule 125 and token AS resolved as shift (ASSIGN < AS).
    Conflict between rule 125 and token INSTANCEOF resolved as shift (ASSIGN < INSTANCEOF).


state 175

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  126                   | lhs ADD_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 126 (expression_nobrace)

    Conflict between rule 126 and token DOT resolved as shift (ADD_ASSIGN < DOT).
    Conflict between rule 126 and token ADD resolved as shift (ADD_ASSIGN < ADD).
    Conflict between rule 126 and token SUB resolved as shift (ADD_ASSIGN < SUB).
    Conflict between rule 126 and token MUL resolved as shift (ADD_ASSIGN < MUL).
    Conflict between rule 126 and token DIV resolved as shift (ADD_ASSIGN < DIV).
    Conflict between rule 126 and token MOD resolved as shift (ADD_ASSIGN < MOD).
    Conflict between rule 126 and token LSHIFT resolved as shift (ADD_ASSIGN < LSHIFT).
    Conflict between rule 126 and token RSHIFT resolved as shift (ADD_ASSIGN < RSHIFT).
    Conflict between rule 126 and token EQUAL resolved as shift (ADD_ASSIGN < EQUAL).
    Conflict between rule 126 and token NOTEQUAL resolved as shift (ADD_ASSIGN < NOTEQUAL).
    Conflict between rule 126 and token GT resolved as shift (ADD_ASSIGN < GT).
    Conflict between rule 126 and token GE resolved as shift (ADD_ASSIGN < GE).
    Conflict between rule 126 and token LT resolved as shift (ADD_ASSIGN < LT).
    Conflict between rule 126 and token LE resolved as shift (ADD_ASSIGN < LE).
    Conflict between rule 126 and token BIT_AND resolved as shift (ADD_ASSIGN < BIT_AND).
    Conflict between rule 126 and token LOGIC_AND resolved as shift (ADD_ASSIGN < LOGIC_AND).
    Conflict between rule 126 and token BIT_OR resolved as shift (ADD_ASSIGN < BIT_OR).
    Conflict between rule 126 and token LOGIC_OR resolved as shift (ADD_ASSIGN < LOGIC_OR).
    Conflict between rule 126 and token EXC_OR resolved as shift (ADD_ASSIGN < EXC_OR).
    Conflict between rule 126 and token AS resolved as shift (ADD_ASSIGN < AS).
    Conflict between rule 126 and token INSTANCEOF resolved as shift (ADD_ASSIGN < INSTANCEOF).


state 176

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  127                   | lhs SUB_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 127 (expression_nobrace)

    Conflict between rule 127 and token DOT resolved as shift (SUB_ASSIGN < DOT).
    Conflict between rule 127 and token ADD resolved as shift (SUB_ASSIGN < ADD).
    Conflict between rule 127 and token SUB resolved as shift (SUB_ASSIGN < SUB).
    Conflict between rule 127 and token MUL resolved as shift (SUB_ASSIGN < MUL).
    Conflict between rule 127 and token DIV resolved as shift (SUB_ASSIGN < DIV).
    Conflict between rule 127 and token MOD resolved as shift (SUB_ASSIGN < MOD).
    Conflict between rule 127 and token LSHIFT resolved as shift (SUB_ASSIGN < LSHIFT).
    Conflict between rule 127 and token RSHIFT resolved as shift (SUB_ASSIGN < RSHIFT).
    Conflict between rule 127 and token EQUAL resolved as shift (SUB_ASSIGN < EQUAL).
    Conflict between rule 127 and token NOTEQUAL resolved as shift (SUB_ASSIGN < NOTEQUAL).
    Conflict between rule 127 and token GT resolved as shift (SUB_ASSIGN < GT).
    Conflict between rule 127 and token GE resolved as shift (SUB_ASSIGN < GE).
    Conflict between rule 127 and token LT resolved as shift (SUB_ASSIGN < LT).
    Conflict between rule 127 and token LE resolved as shift (SUB_ASSIGN < LE).
    Conflict between rule 127 and token BIT_AND resolved as shift (SUB_ASSIGN < BIT_AND).
    Conflict between rule 127 and token LOGIC_AND resolved as shift (SUB_ASSIGN < LOGIC_AND).
    Conflict between rule 127 and token BIT_OR resolved as shift (SUB_ASSIGN < BIT_OR).
    Conflict between rule 127 and token LOGIC_OR resolved as shift (SUB_ASSIGN < LOGIC_OR).
    Conflict between rule 127 and token EXC_OR resolved as shift (SUB_ASSIGN < EXC_OR).
    Conflict between rule 127 and token AS resolved as shift (SUB_ASSIGN < AS).
    Conflict between rule 127 and token INSTANCEOF resolved as shift (SUB_ASSIGN < INSTANCEOF).


state 177

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  128                   | lhs MUL_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 128 (expression_nobrace)

    Conflict between rule 128 and token DOT resolved as shift (MUL_ASSIGN < DOT).
    Conflict between rule 128 and token ADD resolved as shift (MUL_ASSIGN < ADD).
    Conflict between rule 128 and token SUB resolved as shift (MUL_ASSIGN < SUB).
    Conflict between rule 128 and token MUL resolved as shift (MUL_ASSIGN < MUL).
    Conflict between rule 128 and token DIV resolved as shift (MUL_ASSIGN < DIV).
    Conflict between rule 128 and token MOD resolved as shift (MUL_ASSIGN < MOD).
    Conflict between rule 128 and token LSHIFT resolved as shift (MUL_ASSIGN < LSHIFT).
    Conflict between rule 128 and token RSHIFT resolved as shift (MUL_ASSIGN < RSHIFT).
    Conflict between rule 128 and token EQUAL resolved as shift (MUL_ASSIGN < EQUAL).
    Conflict between rule 128 and token NOTEQUAL resolved as shift (MUL_ASSIGN < NOTEQUAL).
    Conflict between rule 128 and token GT resolved as shift (MUL_ASSIGN < GT).
    Conflict between rule 128 and token GE resolved as shift (MUL_ASSIGN < GE).
    Conflict between rule 128 and token LT resolved as shift (MUL_ASSIGN < LT).
    Conflict between rule 128 and token LE resolved as shift (MUL_ASSIGN < LE).
    Conflict between rule 128 and token BIT_AND resolved as shift (MUL_ASSIGN < BIT_AND).
    Conflict between rule 128 and token LOGIC_AND resolved as shift (MUL_ASSIGN < LOGIC_AND).
    Conflict between rule 128 and token BIT_OR resolved as shift (MUL_ASSIGN < BIT_OR).
    Conflict between rule 128 and token LOGIC_OR resolved as shift (MUL_ASSIGN < LOGIC_OR).
    Conflict between rule 128 and token EXC_OR resolved as shift (MUL_ASSIGN < EXC_OR).
    Conflict between rule 128 and token AS resolved as shift (MUL_ASSIGN < AS).
    Conflict between rule 128 and token INSTANCEOF resolved as shift (MUL_ASSIGN < INSTANCEOF).


state 178

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  129                   | lhs DIV_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 129 (expression_nobrace)

    Conflict between rule 129 and token DOT resolved as shift (DIV_ASSIGN < DOT).
    Conflict between rule 129 and token ADD resolved as shift (DIV_ASSIGN < ADD).
    Conflict between rule 129 and token SUB resolved as shift (DIV_ASSIGN < SUB).
    Conflict between rule 129 and token MUL resolved as shift (DIV_ASSIGN < MUL).
    Conflict between rule 129 and token DIV resolved as shift (DIV_ASSIGN < DIV).
    Conflict between rule 129 and token MOD resolved as shift (DIV_ASSIGN < MOD).
    Conflict between rule 129 and token LSHIFT resolved as shift (DIV_ASSIGN < LSHIFT).
    Conflict between rule 129 and token RSHIFT resolved as shift (DIV_ASSIGN < RSHIFT).
    Conflict between rule 129 and token EQUAL resolved as shift (DIV_ASSIGN < EQUAL).
    Conflict between rule 129 and token NOTEQUAL resolved as shift (DIV_ASSIGN < NOTEQUAL).
    Conflict between rule 129 and token GT resolved as shift (DIV_ASSIGN < GT).
    Conflict between rule 129 and token GE resolved as shift (DIV_ASSIGN < GE).
    Conflict between rule 129 and token LT resolved as shift (DIV_ASSIGN < LT).
    Conflict between rule 129 and token LE resolved as shift (DIV_ASSIGN < LE).
    Conflict between rule 129 and token BIT_AND resolved as shift (DIV_ASSIGN < BIT_AND).
    Conflict between rule 129 and token LOGIC_AND resolved as shift (DIV_ASSIGN < LOGIC_AND).
    Conflict between rule 129 and token BIT_OR resolved as shift (DIV_ASSIGN < BIT_OR).
    Conflict between rule 129 and token LOGIC_OR resolved as shift (DIV_ASSIGN < LOGIC_OR).
    Conflict between rule 129 and token EXC_OR resolved as shift (DIV_ASSIGN < EXC_OR).
    Conflict between rule 129 and token AS resolved as shift (DIV_ASSIGN < AS).
    Conflict between rule 129 and token INSTANCEOF resolved as shift (DIV_ASSIGN < INSTANCEOF).


state 179

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  130                   | lhs MOD_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 130 (expression_nobrace)

    Conflict between rule 130 and token DOT resolved as shift (MOD_ASSIGN < DOT).
    Conflict between rule 130 and token ADD resolved as shift (MOD_ASSIGN < ADD).
    Conflict between rule 130 and token SUB resolved as shift (MOD_ASSIGN < SUB).
    Conflict between rule 130 and token MUL resolved as shift (MOD_ASSIGN < MUL).
    Conflict between rule 130 and token DIV resolved as shift (MOD_ASSIGN < DIV).
    Conflict between rule 130 and token MOD resolved as shift (MOD_ASSIGN < MOD).
    Conflict between rule 130 and token LSHIFT resolved as shift (MOD_ASSIGN < LSHIFT).
    Conflict between rule 130 and token RSHIFT resolved as shift (MOD_ASSIGN < RSHIFT).
    Conflict between rule 130 and token EQUAL resolved as shift (MOD_ASSIGN < EQUAL).
    Conflict between rule 130 and token NOTEQUAL resolved as shift (MOD_ASSIGN < NOTEQUAL).
    Conflict between rule 130 and token GT resolved as shift (MOD_ASSIGN < GT).
    Conflict between rule 130 and token GE resolved as shift (MOD_ASSIGN < GE).
    Conflict between rule 130 and token LT resolved as shift (MOD_ASSIGN < LT).
    Conflict between rule 130 and token LE resolved as shift (MOD_ASSIGN < LE).
    Conflict between rule 130 and token BIT_AND resolved as shift (MOD_ASSIGN < BIT_AND).
    Conflict between rule 130 and token LOGIC_AND resolved as shift (MOD_ASSIGN < LOGIC_AND).
    Conflict between rule 130 and token BIT_OR resolved as shift (MOD_ASSIGN < BIT_OR).
    Conflict between rule 130 and token LOGIC_OR resolved as shift (MOD_ASSIGN < LOGIC_OR).
    Conflict between rule 130 and token EXC_OR resolved as shift (MOD_ASSIGN < EXC_OR).
    Conflict between rule 130 and token AS resolved as shift (MOD_ASSIGN < AS).
    Conflict between rule 130 and token INSTANCEOF resolved as shift (MOD_ASSIGN < INSTANCEOF).


state 180

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  131                   | lhs AND_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 131 (expression_nobrace)

    Conflict between rule 131 and token DOT resolved as shift (AND_ASSIGN < DOT).
    Conflict between rule 131 and token ADD resolved as shift (AND_ASSIGN < ADD).
    Conflict between rule 131 and token SUB resolved as shift (AND_ASSIGN < SUB).
    Conflict between rule 131 and token MUL resolved as shift (AND_ASSIGN < MUL).
    Conflict between rule 131 and token DIV resolved as shift (AND_ASSIGN < DIV).
    Conflict between rule 131 and token MOD resolved as shift (AND_ASSIGN < MOD).
    Conflict between rule 131 and token LSHIFT resolved as shift (AND_ASSIGN < LSHIFT).
    Conflict between rule 131 and token RSHIFT resolved as shift (AND_ASSIGN < RSHIFT).
    Conflict between rule 131 and token EQUAL resolved as shift (AND_ASSIGN < EQUAL).
    Conflict between rule 131 and token NOTEQUAL resolved as shift (AND_ASSIGN < NOTEQUAL).
    Conflict between rule 131 and token GT resolved as shift (AND_ASSIGN < GT).
    Conflict between rule 131 and token GE resolved as shift (AND_ASSIGN < GE).
    Conflict between rule 131 and token LT resolved as shift (AND_ASSIGN < LT).
    Conflict between rule 131 and token LE resolved as shift (AND_ASSIGN < LE).
    Conflict between rule 131 and token BIT_AND resolved as shift (AND_ASSIGN < BIT_AND).
    Conflict between rule 131 and token LOGIC_AND resolved as shift (AND_ASSIGN < LOGIC_AND).
    Conflict between rule 131 and token BIT_OR resolved as shift (AND_ASSIGN < BIT_OR).
    Conflict between rule 131 and token LOGIC_OR resolved as shift (AND_ASSIGN < LOGIC_OR).
    Conflict between rule 131 and token EXC_OR resolved as shift (AND_ASSIGN < EXC_OR).
    Conflict between rule 131 and token AS resolved as shift (AND_ASSIGN < AS).
    Conflict between rule 131 and token INSTANCEOF resolved as shift (AND_ASSIGN < INSTANCEOF).


state 181

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  132                   | lhs OR_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 132 (expression_nobrace)

    Conflict between rule 132 and token DOT resolved as shift (OR_ASSIGN < DOT).
    Conflict between rule 132 and token ADD resolved as shift (OR_ASSIGN < ADD).
    Conflict between rule 132 and token SUB resolved as shift (OR_ASSIGN < SUB).
    Conflict between rule 132 and token MUL resolved as shift (OR_ASSIGN < MUL).
    Conflict between rule 132 and token DIV resolved as shift (OR_ASSIGN < DIV).
    Conflict between rule 132 and token MOD resolved as shift (OR_ASSIGN < MOD).
    Conflict between rule 132 and token LSHIFT resolved as shift (OR_ASSIGN < LSHIFT).
    Conflict between rule 132 and token RSHIFT resolved as shift (OR_ASSIGN < RSHIFT).
    Conflict between rule 132 and token EQUAL resolved as shift (OR_ASSIGN < EQUAL).
    Conflict between rule 132 and token NOTEQUAL resolved as shift (OR_ASSIGN < NOTEQUAL).
    Conflict between rule 132 and token GT resolved as shift (OR_ASSIGN < GT).
    Conflict between rule 132 and token GE resolved as shift (OR_ASSIGN < GE).
    Conflict between rule 132 and token LT resolved as shift (OR_ASSIGN < LT).
    Conflict between rule 132 and token LE resolved as shift (OR_ASSIGN < LE).
    Conflict between rule 132 and token BIT_AND resolved as shift (OR_ASSIGN < BIT_AND).
    Conflict between rule 132 and token LOGIC_AND resolved as shift (OR_ASSIGN < LOGIC_AND).
    Conflict between rule 132 and token BIT_OR resolved as shift (OR_ASSIGN < BIT_OR).
    Conflict between rule 132 and token LOGIC_OR resolved as shift (OR_ASSIGN < LOGIC_OR).
    Conflict between rule 132 and token EXC_OR resolved as shift (OR_ASSIGN < EXC_OR).
    Conflict between rule 132 and token AS resolved as shift (OR_ASSIGN < AS).
    Conflict between rule 132 and token INSTANCEOF resolved as shift (OR_ASSIGN < INSTANCEOF).


state 182

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  134                   | lhs LSHIFT_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 134 (expression_nobrace)

    Conflict between rule 134 and token DOT resolved as shift (LSHIFT_ASSIGN < DOT).
    Conflict between rule 134 and token ADD resolved as shift (LSHIFT_ASSIGN < ADD).
    Conflict between rule 134 and token SUB resolved as shift (LSHIFT_ASSIGN < SUB).
    Conflict between rule 134 and token MUL resolved as shift (LSHIFT_ASSIGN < MUL).
    Conflict between rule 134 and token DIV resolved as shift (LSHIFT_ASSIGN < DIV).
    Conflict between rule 134 and token MOD resolved as shift (LSHIFT_ASSIGN < MOD).
    Conflict between rule 134 and token LSHIFT resolved as shift (LSHIFT_ASSIGN < LSHIFT).
    Conflict between rule 134 and token RSHIFT resolved as shift (LSHIFT_ASSIGN < RSHIFT).
    Conflict between rule 134 and token EQUAL resolved as shift (LSHIFT_ASSIGN < EQUAL).
    Conflict between rule 134 and token NOTEQUAL resolved as shift (LSHIFT_ASSIGN < NOTEQUAL).
    Conflict between rule 134 and token GT resolved as shift (LSHIFT_ASSIGN < GT).
    Conflict between rule 134 and token GE resolved as shift (LSHIFT_ASSIGN < GE).
    Conflict between rule 134 and token LT resolved as shift (LSHIFT_ASSIGN < LT).
    Conflict between rule 134 and token LE resolved as shift (LSHIFT_ASSIGN < LE).
    Conflict between rule 134 and token BIT_AND resolved as shift (LSHIFT_ASSIGN < BIT_AND).
    Conflict between rule 134 and token LOGIC_AND resolved as shift (LSHIFT_ASSIGN < LOGIC_AND).
    Conflict between rule 134 and token BIT_OR resolved as shift (LSHIFT_ASSIGN < BIT_OR).
    Conflict between rule 134 and token LOGIC_OR resolved as shift (LSHIFT_ASSIGN < LOGIC_OR).
    Conflict between rule 134 and token EXC_OR resolved as shift (LSHIFT_ASSIGN < EXC_OR).
    Conflict between rule 134 and token AS resolved as shift (LSHIFT_ASSIGN < AS).
    Conflict between rule 134 and token INSTANCEOF resolved as shift (LSHIFT_ASSIGN < INSTANCEOF).


state 183

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  135                   | lhs RSHIFT_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 135 (expression_nobrace)

    Conflict between rule 135 and token DOT resolved as shift (RSHIFT_ASSIGN < DOT).
    Conflict between rule 135 and token ADD resolved as shift (RSHIFT_ASSIGN < ADD).
    Conflict between rule 135 and token SUB resolved as shift (RSHIFT_ASSIGN < SUB).
    Conflict between rule 135 and token MUL resolved as shift (RSHIFT_ASSIGN < MUL).
    Conflict between rule 135 and token DIV resolved as shift (RSHIFT_ASSIGN < DIV).
    Conflict between rule 135 and token MOD resolved as shift (RSHIFT_ASSIGN < MOD).
    Conflict between rule 135 and token LSHIFT resolved as shift (RSHIFT_ASSIGN < LSHIFT).
    Conflict between rule 135 and token RSHIFT resolved as shift (RSHIFT_ASSIGN < RSHIFT).
    Conflict between rule 135 and token EQUAL resolved as shift (RSHIFT_ASSIGN < EQUAL).
    Conflict between rule 135 and token NOTEQUAL resolved as shift (RSHIFT_ASSIGN < NOTEQUAL).
    Conflict between rule 135 and token GT resolved as shift (RSHIFT_ASSIGN < GT).
    Conflict between rule 135 and token GE resolved as shift (RSHIFT_ASSIGN < GE).
    Conflict between rule 135 and token LT resolved as shift (RSHIFT_ASSIGN < LT).
    Conflict between rule 135 and token LE resolved as shift (RSHIFT_ASSIGN < LE).
    Conflict between rule 135 and token BIT_AND resolved as shift (RSHIFT_ASSIGN < BIT_AND).
    Conflict between rule 135 and token LOGIC_AND resolved as shift (RSHIFT_ASSIGN < LOGIC_AND).
    Conflict between rule 135 and token BIT_OR resolved as shift (RSHIFT_ASSIGN < BIT_OR).
    Conflict between rule 135 and token LOGIC_OR resolved as shift (RSHIFT_ASSIGN < LOGIC_OR).
    Conflict between rule 135 and token EXC_OR resolved as shift (RSHIFT_ASSIGN < EXC_OR).
    Conflict between rule 135 and token AS resolved as shift (RSHIFT_ASSIGN < AS).
    Conflict between rule 135 and token INSTANCEOF resolved as shift (RSHIFT_ASSIGN < INSTANCEOF).


state 184

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  133                   | lhs EXC_OR_ASSIGN expression .  [COMMA, COLON, LCB, LRB, RRB, SEMI]
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 133 (expression_nobrace)

    Conflict between rule 133 and token DOT resolved as shift (EXC_OR_ASSIGN < DOT).
    Conflict between rule 133 and token ADD resolved as shift (EXC_OR_ASSIGN < ADD).
    Conflict between rule 133 and token SUB resolved as shift (EXC_OR_ASSIGN < SUB).
    Conflict between rule 133 and token MUL resolved as shift (EXC_OR_ASSIGN < MUL).
    Conflict between rule 133 and token DIV resolved as shift (EXC_OR_ASSIGN < DIV).
    Conflict between rule 133 and token MOD resolved as shift (EXC_OR_ASSIGN < MOD).
    Conflict between rule 133 and token LSHIFT resolved as shift (EXC_OR_ASSIGN < LSHIFT).
    Conflict between rule 133 and token RSHIFT resolved as shift (EXC_OR_ASSIGN < RSHIFT).
    Conflict between rule 133 and token EQUAL resolved as shift (EXC_OR_ASSIGN < EQUAL).
    Conflict between rule 133 and token NOTEQUAL resolved as shift (EXC_OR_ASSIGN < NOTEQUAL).
    Conflict between rule 133 and token GT resolved as shift (EXC_OR_ASSIGN < GT).
    Conflict between rule 133 and token GE resolved as shift (EXC_OR_ASSIGN < GE).
    Conflict between rule 133 and token LT resolved as shift (EXC_OR_ASSIGN < LT).
    Conflict between rule 133 and token LE resolved as shift (EXC_OR_ASSIGN < LE).
    Conflict between rule 133 and token BIT_AND resolved as shift (EXC_OR_ASSIGN < BIT_AND).
    Conflict between rule 133 and token LOGIC_AND resolved as shift (EXC_OR_ASSIGN < LOGIC_AND).
    Conflict between rule 133 and token BIT_OR resolved as shift (EXC_OR_ASSIGN < BIT_OR).
    Conflict between rule 133 and token LOGIC_OR resolved as shift (EXC_OR_ASSIGN < LOGIC_OR).
    Conflict between rule 133 and token EXC_OR resolved as shift (EXC_OR_ASSIGN < EXC_OR).
    Conflict between rule 133 and token AS resolved as shift (EXC_OR_ASSIGN < AS).
    Conflict between rule 133 and token INSTANCEOF resolved as shift (EXC_OR_ASSIGN < INSTANCEOF).


state 185

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  179 inferenced_type_init_stmt: VAR IDENT ASSIGN expression . stmt_term
  203 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 219


state 186

   99 argument_list: . expression
  100              | . argument_list COMMA expression
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  148                   | NEW fqcn_part typename_group LRB . argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  149                   | NEW fqcn_part typename_group LRB . RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 220
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 221
    fqcn_part           go to state 62
    expression          go to state 173
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 187

   59 function_define: DEF IDENT LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 222


state 188

   58 function_define: DEF IDENT LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 224


state 189

   97 parameter_list: typename_T . IDENT

    IDENT  shift, and go to state 225


state 190

   21 namespace_path: namespace_path COLO_COLO IDENT .

    $default  reduce using rule 21 (namespace_path)


state 191

   31 abstract_class_decl: ABSTRACT . CLASS parameterized_typename LCB access_member_tree_opt RCB
   32                    | ABSTRACT . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    CLASS  shift, and go to state 226


state 192

   25 parameterized_typename: . IDENT type_parameter_group
   37 interface_decl: INTERFACE . parameterized_typename LCB access_member_tree_opt RCB
   38               | INTERFACE . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 227

    parameterized_typename  go to state 228


state 193

   25 parameterized_typename: . IDENT type_parameter_group
   33 class_decl: CLASS . parameterized_typename LCB access_member_tree_opt RCB
   34           | CLASS . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 227

    parameterized_typename  go to state 229


state 194

   35 enum_decl: ENUM . IDENT LCB ident_list RCB
   36          | ENUM . IDENT LCB ident_list COMMA RCB

    IDENT  shift, and go to state 230


state 195

   11 namespace_member_decl: NAMESPACE . namespace_path namespace_body
   20 namespace_path: . IDENT
   21               | . namespace_path COLO_COLO IDENT

    IDENT  shift, and go to state 71

    namespace_path  go to state 231


state 196

   16 namespace_member_decl_list: namespace_member_decl .

    $default  reduce using rule 16 (namespace_member_decl_list)


state 197

   11 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   12                      | . abstract_class_decl
   13                      | . class_decl
   14                      | . interface_decl
   15                      | . enum_decl
   17 namespace_member_decl_list: namespace_member_decl_list . namespace_member_decl
   19 namespace_member_decl_optional: namespace_member_decl_list .  [RCB]
   31 abstract_class_decl: . ABSTRACT CLASS parameterized_typename LCB access_member_tree_opt RCB
   32                    | . ABSTRACT CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   33 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   34           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   35 enum_decl: . ENUM IDENT LCB ident_list RCB
   36          | . ENUM IDENT LCB ident_list COMMA RCB
   37 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   38               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    ABSTRACT   shift, and go to state 191
    INTERFACE  shift, and go to state 192
    CLASS      shift, and go to state 193
    ENUM       shift, and go to state 194
    NAMESPACE  shift, and go to state 195

    $default  reduce using rule 19 (namespace_member_decl_optional)

    namespace_member_decl  go to state 232
    abstract_class_decl    go to state 199
    class_decl             go to state 200
    enum_decl              go to state 201
    interface_decl         go to state 202


state 198

   10 namespace_body: LCB namespace_member_decl_optional . RCB

    RCB  shift, and go to state 233


state 199

   12 namespace_member_decl: abstract_class_decl .

    $default  reduce using rule 12 (namespace_member_decl)


state 200

   13 namespace_member_decl: class_decl .

    $default  reduce using rule 13 (namespace_member_decl)


state 201

   15 namespace_member_decl: enum_decl .

    $default  reduce using rule 15 (namespace_member_decl)


state 202

   14 namespace_member_decl: interface_decl .

    $default  reduce using rule 14 (namespace_member_decl)


state 203

  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK
  186 elif: ELIF . expression scope

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 234
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 204

  181 if_stmt: IF expression scope ELSE . scope
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB

    LCB  shift, and go to state 79

    scope  go to state 235


state 205

  182 if_stmt: IF expression scope elif_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW, ASSERT_T, DEFER]
  183        | IF expression scope elif_list . ELSE scope
  185 elif_list: elif_list . elif
  186 elif: . ELIF expression scope

    ELIF  shift, and go to state 203
    ELSE  shift, and go to state 236

    $default  reduce using rule 182 (if_stmt)

    elif  go to state 237


state 206

  184 elif_list: elif .

    $default  reduce using rule 184 (elif_list)


state 207

  199 scope: LCB stmt_list RCB .

    $default  reduce using rule 199 (scope)


state 208

  163 stmt_list: stmt_list stmt .

    $default  reduce using rule 163 (stmt_list)


state 209

  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  195 catch_stmt: CATCH LRB . typename_T IDENT RRB scope

    IDENT  shift, and go to state 14

    typename_T  go to state 238
    fqcn_part   go to state 149


state 210

  194 catch_stmt_list: catch_stmt_list catch_stmt .

    $default  reduce using rule 194 (catch_stmt_list)


state 211

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  196 assert_stmt: ASSERT_T expression COLON expression . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 239
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108


state 212

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  178 variable_init_stmt: typename_T IDENT ASSIGN expression . stmt_term
  203 stmt_term: . SEMI

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    SEMI        shift, and go to state 76
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    stmt_term  go to state 240


state 213

  104 typename_list: typename_list COMMA . typename_T
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 241
    fqcn_part   go to state 149


state 214

  102 typename_group: LSB typename_list RSB .

    $default  reduce using rule 102 (typename_group)


state 215

  105 typename_T: fqcn_part typename_group .

    $default  reduce using rule 105 (typename_T)


state 216

  154 lhs: expression DOT IDENT typename_group .

    $default  reduce using rule 154 (lhs)


state 217

  100 argument_list: argument_list COMMA . expression
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 62
    expression          go to state 242
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 218

  146 expression_nobrace: expression_nobrace LRB argument_list RRB .

    $default  reduce using rule 146 (expression_nobrace)


state 219

  179 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 179 (inferenced_type_init_stmt)


state 220

  149 expression_nobrace: NEW fqcn_part typename_group LRB RRB .

    $default  reduce using rule 149 (expression_nobrace)


state 221

  100 argument_list: argument_list . COMMA expression
  148 expression_nobrace: NEW fqcn_part typename_group LRB argument_list . RRB

    COMMA  shift, and go to state 217
    RRB    shift, and go to state 243


state 222

   59 function_define: DEF IDENT LRB RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 244
    fqcn_part   go to state 149


state 223

   98 parameter_list: parameter_list COMMA . typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 245
    fqcn_part   go to state 149


state 224

   58 function_define: DEF IDENT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 246


state 225

   97 parameter_list: typename_T IDENT .

    $default  reduce using rule 97 (parameter_list)


state 226

   25 parameterized_typename: . IDENT type_parameter_group
   31 abstract_class_decl: ABSTRACT CLASS . parameterized_typename LCB access_member_tree_opt RCB
   32                    | ABSTRACT CLASS . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 227

    parameterized_typename  go to state 247


state 227

   25 parameterized_typename: IDENT . type_parameter_group
   26 type_parameter_group: .  [COLON, LCB]
   27                     | . LSB type_parameter_list RSB

    LSB  shift, and go to state 248

    $default  reduce using rule 26 (type_parameter_group)

    type_parameter_group  go to state 249


state 228

   37 interface_decl: INTERFACE parameterized_typename . LCB access_member_tree_opt RCB
   38               | INTERFACE parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 250
    LCB    shift, and go to state 251


state 229

   33 class_decl: CLASS parameterized_typename . LCB access_member_tree_opt RCB
   34           | CLASS parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 252
    LCB    shift, and go to state 253


state 230

   35 enum_decl: ENUM IDENT . LCB ident_list RCB
   36          | ENUM IDENT . LCB ident_list COMMA RCB

    LCB  shift, and go to state 254


state 231

   10 namespace_body: . LCB namespace_member_decl_optional RCB
   11 namespace_member_decl: NAMESPACE namespace_path . namespace_body
   21 namespace_path: namespace_path . COLO_COLO IDENT

    COLO_COLO  shift, and go to state 127
    LCB        shift, and go to state 128

    namespace_body  go to state 255


state 232

   17 namespace_member_decl_list: namespace_member_decl_list namespace_member_decl .

    $default  reduce using rule 17 (namespace_member_decl_list)


state 233

   10 namespace_body: LCB namespace_member_decl_optional RCB .

    $default  reduce using rule 10 (namespace_body)


state 234

  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group
  186 elif: ELIF expression . scope
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    LCB         shift, and go to state 79
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    scope  go to state 256


state 235

  181 if_stmt: IF expression scope ELSE scope .

    $default  reduce using rule 181 (if_stmt)


state 236

  183 if_stmt: IF expression scope elif_list ELSE . scope
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB

    LCB  shift, and go to state 79

    scope  go to state 257


state 237

  185 elif_list: elif_list elif .

    $default  reduce using rule 185 (elif_list)


state 238

  195 catch_stmt: CATCH LRB typename_T . IDENT RRB scope

    IDENT  shift, and go to state 258


state 239

  196 assert_stmt: ASSERT_T expression COLON expression SEMI .

    $default  reduce using rule 196 (assert_stmt)


state 240

  178 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 178 (variable_init_stmt)


state 241

  104 typename_list: typename_list COMMA typename_T .

    $default  reduce using rule 104 (typename_list)


state 242

  100 argument_list: argument_list COMMA expression .  [COMMA, RRB]
  113 expression_nobrace: expression . ADD expression
  114                   | expression . SUB expression
  115                   | expression . MUL expression
  116                   | expression . DIV expression
  117                   | expression . MOD expression
  118                   | expression . BIT_OR expression
  119                   | expression . EQUAL expression
  120                   | expression . NOTEQUAL expression
  121                   | expression . BIT_AND expression
  122                   | expression . EXC_OR expression
  123                   | expression . LOGIC_OR expression
  124                   | expression . LOGIC_AND expression
  136                   | expression . GT expression
  137                   | expression . GE expression
  138                   | expression . LT expression
  139                   | expression . LE expression
  140                   | expression . LSHIFT expression
  141                   | expression . RSHIFT expression
  142                   | expression . INSTANCEOF typename_T
  143                   | expression . AS typename_T
  154 lhs: expression . DOT IDENT typename_group

    DOT         shift, and go to state 88
    ADD         shift, and go to state 89
    SUB         shift, and go to state 90
    MUL         shift, and go to state 91
    DIV         shift, and go to state 92
    MOD         shift, and go to state 93
    LSHIFT      shift, and go to state 94
    RSHIFT      shift, and go to state 95
    EQUAL       shift, and go to state 96
    NOTEQUAL    shift, and go to state 97
    GT          shift, and go to state 98
    GE          shift, and go to state 99
    LT          shift, and go to state 100
    LE          shift, and go to state 101
    BIT_AND     shift, and go to state 102
    LOGIC_AND   shift, and go to state 103
    BIT_OR      shift, and go to state 104
    LOGIC_OR    shift, and go to state 105
    EXC_OR      shift, and go to state 106
    AS          shift, and go to state 107
    INSTANCEOF  shift, and go to state 108

    $default  reduce using rule 100 (argument_list)


state 243

  148 expression_nobrace: NEW fqcn_part typename_group LRB argument_list RRB .

    $default  reduce using rule 148 (expression_nobrace)


state 244

   59 function_define: DEF IDENT LRB RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 259


state 245

   98 parameter_list: parameter_list COMMA typename_T . IDENT

    IDENT  shift, and go to state 260


state 246

   58 function_define: DEF IDENT LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 261
    fqcn_part   go to state 149


state 247

   31 abstract_class_decl: ABSTRACT CLASS parameterized_typename . LCB access_member_tree_opt RCB
   32                    | ABSTRACT CLASS parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 262
    LCB    shift, and go to state 263


state 248

   27 type_parameter_group: LSB . type_parameter_list RSB
   28 type_parameter_list: . type_parameter
   29                    | . type_parameter_list COMMA type_parameter
   30 type_parameter: . IDENT

    IDENT  shift, and go to state 264

    type_parameter_list  go to state 265
    type_parameter       go to state 266


state 249

   25 parameterized_typename: IDENT type_parameter_group .

    $default  reduce using rule 25 (parameterized_typename)


state 250

   38 interface_decl: INTERFACE parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
  103 typename_list: . typename_T
  104              | . typename_list COMMA typename_T
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 267
    typename_T     go to state 148
    fqcn_part      go to state 149


state 251

   37 interface_decl: INTERFACE parameterized_typename LCB . access_member_tree_opt RCB
   39 access_member_tree_opt: .  [RCB]
   40                       | . access_member_tree
   41 access_member_tree: . access_member_list
   42                   | . access_member_tree access_member_list
   43 access_member_list: . access_level_T COLON member_define_list
   92 access_level_T: . PUBLIC
   93               | . PRIVATE
   94               | . PROTECTED

    PUBLIC     shift, and go to state 268
    PRIVATE    shift, and go to state 269
    PROTECTED  shift, and go to state 270

    $default  reduce using rule 39 (access_member_tree_opt)

    access_member_tree_opt  go to state 271
    access_member_tree      go to state 272
    access_member_list      go to state 273
    access_level_T          go to state 274


state 252

   34 class_decl: CLASS parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
  103 typename_list: . typename_T
  104              | . typename_list COMMA typename_T
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 275
    typename_T     go to state 148
    fqcn_part      go to state 149


state 253

   33 class_decl: CLASS parameterized_typename LCB . access_member_tree_opt RCB
   39 access_member_tree_opt: .  [RCB]
   40                       | . access_member_tree
   41 access_member_tree: . access_member_list
   42                   | . access_member_tree access_member_list
   43 access_member_list: . access_level_T COLON member_define_list
   92 access_level_T: . PUBLIC
   93               | . PRIVATE
   94               | . PROTECTED

    PUBLIC     shift, and go to state 268
    PRIVATE    shift, and go to state 269
    PROTECTED  shift, and go to state 270

    $default  reduce using rule 39 (access_member_tree_opt)

    access_member_tree_opt  go to state 276
    access_member_tree      go to state 272
    access_member_list      go to state 273
    access_level_T          go to state 274


state 254

   35 enum_decl: ENUM IDENT LCB . ident_list RCB
   36          | ENUM IDENT LCB . ident_list COMMA RCB
   95 ident_list: . IDENT
   96           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 277

    ident_list  go to state 278


state 255

   11 namespace_member_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 11 (namespace_member_decl)


state 256

  186 elif: ELIF expression scope .

    $default  reduce using rule 186 (elif)


state 257

  183 if_stmt: IF expression scope elif_list ELSE scope .

    $default  reduce using rule 183 (if_stmt)


state 258

  195 catch_stmt: CATCH LRB typename_T IDENT . RRB scope

    RRB  shift, and go to state 279


state 259

   59 function_define: DEF IDENT LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 59 (function_define)


state 260

   98 parameter_list: parameter_list COMMA typename_T IDENT .

    $default  reduce using rule 98 (parameter_list)


state 261

   58 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 280


state 262

   32 abstract_class_decl: ABSTRACT CLASS parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
  103 typename_list: . typename_T
  104              | . typename_list COMMA typename_T
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 281
    typename_T     go to state 148
    fqcn_part      go to state 149


state 263

   31 abstract_class_decl: ABSTRACT CLASS parameterized_typename LCB . access_member_tree_opt RCB
   39 access_member_tree_opt: .  [RCB]
   40                       | . access_member_tree
   41 access_member_tree: . access_member_list
   42                   | . access_member_tree access_member_list
   43 access_member_list: . access_level_T COLON member_define_list
   92 access_level_T: . PUBLIC
   93               | . PRIVATE
   94               | . PROTECTED

    PUBLIC     shift, and go to state 268
    PRIVATE    shift, and go to state 269
    PROTECTED  shift, and go to state 270

    $default  reduce using rule 39 (access_member_tree_opt)

    access_member_tree_opt  go to state 282
    access_member_tree      go to state 272
    access_member_list      go to state 273
    access_level_T          go to state 274


state 264

   30 type_parameter: IDENT .

    $default  reduce using rule 30 (type_parameter)


state 265

   27 type_parameter_group: LSB type_parameter_list . RSB
   29 type_parameter_list: type_parameter_list . COMMA type_parameter

    COMMA  shift, and go to state 283
    RSB    shift, and go to state 284


state 266

   28 type_parameter_list: type_parameter .

    $default  reduce using rule 28 (type_parameter_list)


state 267

   38 interface_decl: INTERFACE parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
  104 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 213
    LCB    shift, and go to state 285


state 268

   92 access_level_T: PUBLIC .

    $default  reduce using rule 92 (access_level_T)


state 269

   93 access_level_T: PRIVATE .

    $default  reduce using rule 93 (access_level_T)


state 270

   94 access_level_T: PROTECTED .

    $default  reduce using rule 94 (access_level_T)


state 271

   37 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 286


state 272

   40 access_member_tree_opt: access_member_tree .  [RCB]
   42 access_member_tree: access_member_tree . access_member_list
   43 access_member_list: . access_level_T COLON member_define_list
   92 access_level_T: . PUBLIC
   93               | . PRIVATE
   94               | . PROTECTED

    PUBLIC     shift, and go to state 268
    PRIVATE    shift, and go to state 269
    PROTECTED  shift, and go to state 270

    $default  reduce using rule 40 (access_member_tree_opt)

    access_member_list  go to state 287
    access_level_T      go to state 274


state 273

   41 access_member_tree: access_member_list .

    $default  reduce using rule 41 (access_member_tree)


state 274

   43 access_member_list: access_level_T . COLON member_define_list

    COLON  shift, and go to state 288


state 275

   34 class_decl: CLASS parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
  104 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 213
    LCB    shift, and go to state 289


state 276

   33 class_decl: CLASS parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 290


state 277

   95 ident_list: IDENT .

    $default  reduce using rule 95 (ident_list)


state 278

   35 enum_decl: ENUM IDENT LCB ident_list . RCB
   36          | ENUM IDENT LCB ident_list . COMMA RCB
   96 ident_list: ident_list . COMMA IDENT

    COMMA  shift, and go to state 291
    RCB    shift, and go to state 292


state 279

  195 catch_stmt: CATCH LRB typename_T IDENT RRB . scope
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB

    LCB  shift, and go to state 79

    scope  go to state 293


state 280

   58 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 58 (function_define)


state 281

   32 abstract_class_decl: ABSTRACT CLASS parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
  104 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 213
    LCB    shift, and go to state 294


state 282

   31 abstract_class_decl: ABSTRACT CLASS parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 295


state 283

   29 type_parameter_list: type_parameter_list COMMA . type_parameter
   30 type_parameter: . IDENT

    IDENT  shift, and go to state 264

    type_parameter  go to state 296


state 284

   27 type_parameter_group: LSB type_parameter_list RSB .

    $default  reduce using rule 27 (type_parameter_group)


state 285

   38 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   39 access_member_tree_opt: .  [RCB]
   40                       | . access_member_tree
   41 access_member_tree: . access_member_list
   42                   | . access_member_tree access_member_list
   43 access_member_list: . access_level_T COLON member_define_list
   92 access_level_T: . PUBLIC
   93               | . PRIVATE
   94               | . PROTECTED

    PUBLIC     shift, and go to state 268
    PRIVATE    shift, and go to state 269
    PROTECTED  shift, and go to state 270

    $default  reduce using rule 39 (access_member_tree_opt)

    access_member_tree_opt  go to state 297
    access_member_tree      go to state 272
    access_member_list      go to state 273
    access_level_T          go to state 274


state 286

   37 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 37 (interface_decl)


state 287

   42 access_member_tree: access_member_tree access_member_list .

    $default  reduce using rule 42 (access_member_tree)


state 288

   43 access_member_list: access_level_T COLON . member_define_list
   44 member_define_list: . member_define
   45                   | . member_define_list member_define
   46 member_define: . constructor_define
   47              | . method_define
   48              | . operator_define
   49              | . field_define
   50 constructor_define: . DEF NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | . DEF NEW LRB RRB constructor_chain_optional scope_optional
   60 method_define: . DEF modifier_type_T_list IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | . DEF modifier_type_T_list IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   62              | . DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   63              | . DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   64 operator_define: . OPERATOR ADD LRB parameter_list RRB ARROW typename_T scope_optional
   65                | . OPERATOR SUB LRB parameter_list RRB ARROW typename_T scope_optional
   66                | . OPERATOR MUL LRB parameter_list RRB ARROW typename_T scope_optional
   67                | . OPERATOR DIV LRB parameter_list RRB ARROW typename_T scope_optional
   68                | . OPERATOR MOD LRB parameter_list RRB ARROW typename_T scope_optional
   69                | . OPERATOR GT LRB parameter_list RRB ARROW typename_T scope_optional
   70                | . OPERATOR GE LRB parameter_list RRB ARROW typename_T scope_optional
   71                | . OPERATOR LT LRB parameter_list RRB ARROW typename_T scope_optional
   72                | . OPERATOR LE LRB parameter_list RRB ARROW typename_T scope_optional
   73                | . OPERATOR EQUAL LRB parameter_list RRB ARROW typename_T scope_optional
   74                | . OPERATOR NOTEQUAL LRB parameter_list RRB ARROW typename_T scope_optional
   75                | . OPERATOR BIT_OR LRB parameter_list RRB ARROW typename_T scope_optional
   76                | . OPERATOR BIT_AND LRB parameter_list RRB ARROW typename_T scope_optional
   77                | . OPERATOR LOGIC_OR LRB parameter_list RRB ARROW typename_T scope_optional
   78                | . OPERATOR LOGIC_AND LRB parameter_list RRB ARROW typename_T scope_optional
   79                | . OPERATOR LSHIFT LRB parameter_list RRB ARROW typename_T scope_optional
   80                | . OPERATOR RSHIFT LRB parameter_list RRB ARROW typename_T scope_optional
   81                | . OPERATOR EXC_OR LRB parameter_list RRB ARROW typename_T scope_optional
   82                | . OPERATOR NOT LRB parameter_list RRB ARROW typename_T scope_optional
   83                | . OPERATOR CHILDA LRB parameter_list RRB ARROW typename_T scope_optional
   84 field_define: . modifier_type_T typename_T IDENT SEMI
   85             | . typename_T IDENT SEMI
   88 modifier_type_T: . STATIC
   89                | . NATIVE
   90                | . ABSTRACT
   91                | . OVERRIDE
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT     shift, and go to state 14
    ABSTRACT  shift, and go to state 298
    OVERRIDE  shift, and go to state 299
    STATIC    shift, and go to state 300
    NATIVE    shift, and go to state 301
    DEF       shift, and go to state 302
    OPERATOR  shift, and go to state 303

    member_define_list  go to state 304
    member_define       go to state 305
    constructor_define  go to state 306
    method_define       go to state 307
    operator_define     go to state 308
    field_define        go to state 309
    modifier_type_T     go to state 310
    typename_T          go to state 311
    fqcn_part           go to state 149


state 289

   34 class_decl: CLASS parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   39 access_member_tree_opt: .  [RCB]
   40                       | . access_member_tree
   41 access_member_tree: . access_member_list
   42                   | . access_member_tree access_member_list
   43 access_member_list: . access_level_T COLON member_define_list
   92 access_level_T: . PUBLIC
   93               | . PRIVATE
   94               | . PROTECTED

    PUBLIC     shift, and go to state 268
    PRIVATE    shift, and go to state 269
    PROTECTED  shift, and go to state 270

    $default  reduce using rule 39 (access_member_tree_opt)

    access_member_tree_opt  go to state 312
    access_member_tree      go to state 272
    access_member_list      go to state 273
    access_level_T          go to state 274


state 290

   33 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 33 (class_decl)


state 291

   36 enum_decl: ENUM IDENT LCB ident_list COMMA . RCB
   96 ident_list: ident_list COMMA . IDENT

    IDENT  shift, and go to state 313
    RCB    shift, and go to state 314


state 292

   35 enum_decl: ENUM IDENT LCB ident_list RCB .

    $default  reduce using rule 35 (enum_decl)


state 293

  195 catch_stmt: CATCH LRB typename_T IDENT RRB scope .

    $default  reduce using rule 195 (catch_stmt)


state 294

   32 abstract_class_decl: ABSTRACT CLASS parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   39 access_member_tree_opt: .  [RCB]
   40                       | . access_member_tree
   41 access_member_tree: . access_member_list
   42                   | . access_member_tree access_member_list
   43 access_member_list: . access_level_T COLON member_define_list
   92 access_level_T: . PUBLIC
   93               | . PRIVATE
   94               | . PROTECTED

    PUBLIC     shift, and go to state 268
    PRIVATE    shift, and go to state 269
    PROTECTED  shift, and go to state 270

    $default  reduce using rule 39 (access_member_tree_opt)

    access_member_tree_opt  go to state 315
    access_member_tree      go to state 272
    access_member_list      go to state 273
    access_level_T          go to state 274


state 295

   31 abstract_class_decl: ABSTRACT CLASS parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 31 (abstract_class_decl)


state 296

   29 type_parameter_list: type_parameter_list COMMA type_parameter .

    $default  reduce using rule 29 (type_parameter_list)


state 297

   38 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 316


state 298

   90 modifier_type_T: ABSTRACT .

    $default  reduce using rule 90 (modifier_type_T)


state 299

   91 modifier_type_T: OVERRIDE .

    $default  reduce using rule 91 (modifier_type_T)


state 300

   88 modifier_type_T: STATIC .

    $default  reduce using rule 88 (modifier_type_T)


state 301

   89 modifier_type_T: NATIVE .

    $default  reduce using rule 89 (modifier_type_T)


state 302

   50 constructor_define: DEF . NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | DEF . NEW LRB RRB constructor_chain_optional scope_optional
   60 method_define: DEF . modifier_type_T_list IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | DEF . modifier_type_T_list IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   62              | DEF . IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   63              | DEF . IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   86 modifier_type_T_list: . modifier_type_T
   87                     | . modifier_type_T_list modifier_type_T
   88 modifier_type_T: . STATIC
   89                | . NATIVE
   90                | . ABSTRACT
   91                | . OVERRIDE

    IDENT     shift, and go to state 317
    ABSTRACT  shift, and go to state 298
    OVERRIDE  shift, and go to state 299
    STATIC    shift, and go to state 300
    NATIVE    shift, and go to state 301
    NEW       shift, and go to state 318

    modifier_type_T_list  go to state 319
    modifier_type_T       go to state 320


state 303

   64 operator_define: OPERATOR . ADD LRB parameter_list RRB ARROW typename_T scope_optional
   65                | OPERATOR . SUB LRB parameter_list RRB ARROW typename_T scope_optional
   66                | OPERATOR . MUL LRB parameter_list RRB ARROW typename_T scope_optional
   67                | OPERATOR . DIV LRB parameter_list RRB ARROW typename_T scope_optional
   68                | OPERATOR . MOD LRB parameter_list RRB ARROW typename_T scope_optional
   69                | OPERATOR . GT LRB parameter_list RRB ARROW typename_T scope_optional
   70                | OPERATOR . GE LRB parameter_list RRB ARROW typename_T scope_optional
   71                | OPERATOR . LT LRB parameter_list RRB ARROW typename_T scope_optional
   72                | OPERATOR . LE LRB parameter_list RRB ARROW typename_T scope_optional
   73                | OPERATOR . EQUAL LRB parameter_list RRB ARROW typename_T scope_optional
   74                | OPERATOR . NOTEQUAL LRB parameter_list RRB ARROW typename_T scope_optional
   75                | OPERATOR . BIT_OR LRB parameter_list RRB ARROW typename_T scope_optional
   76                | OPERATOR . BIT_AND LRB parameter_list RRB ARROW typename_T scope_optional
   77                | OPERATOR . LOGIC_OR LRB parameter_list RRB ARROW typename_T scope_optional
   78                | OPERATOR . LOGIC_AND LRB parameter_list RRB ARROW typename_T scope_optional
   79                | OPERATOR . LSHIFT LRB parameter_list RRB ARROW typename_T scope_optional
   80                | OPERATOR . RSHIFT LRB parameter_list RRB ARROW typename_T scope_optional
   81                | OPERATOR . EXC_OR LRB parameter_list RRB ARROW typename_T scope_optional
   82                | OPERATOR . NOT LRB parameter_list RRB ARROW typename_T scope_optional
   83                | OPERATOR . CHILDA LRB parameter_list RRB ARROW typename_T scope_optional

    ADD        shift, and go to state 321
    SUB        shift, and go to state 322
    MUL        shift, and go to state 323
    DIV        shift, and go to state 324
    MOD        shift, and go to state 325
    NOT        shift, and go to state 326
    LSHIFT     shift, and go to state 327
    RSHIFT     shift, and go to state 328
    CHILDA     shift, and go to state 329
    EQUAL      shift, and go to state 330
    NOTEQUAL   shift, and go to state 331
    GT         shift, and go to state 332
    GE         shift, and go to state 333
    LT         shift, and go to state 334
    LE         shift, and go to state 335
    BIT_AND    shift, and go to state 336
    LOGIC_AND  shift, and go to state 337
    BIT_OR     shift, and go to state 338
    LOGIC_OR   shift, and go to state 339
    EXC_OR     shift, and go to state 340


state 304

   43 access_member_list: access_level_T COLON member_define_list .  [RCB, PUBLIC, PRIVATE, PROTECTED]
   45 member_define_list: member_define_list . member_define
   46 member_define: . constructor_define
   47              | . method_define
   48              | . operator_define
   49              | . field_define
   50 constructor_define: . DEF NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | . DEF NEW LRB RRB constructor_chain_optional scope_optional
   60 method_define: . DEF modifier_type_T_list IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | . DEF modifier_type_T_list IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   62              | . DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   63              | . DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   64 operator_define: . OPERATOR ADD LRB parameter_list RRB ARROW typename_T scope_optional
   65                | . OPERATOR SUB LRB parameter_list RRB ARROW typename_T scope_optional
   66                | . OPERATOR MUL LRB parameter_list RRB ARROW typename_T scope_optional
   67                | . OPERATOR DIV LRB parameter_list RRB ARROW typename_T scope_optional
   68                | . OPERATOR MOD LRB parameter_list RRB ARROW typename_T scope_optional
   69                | . OPERATOR GT LRB parameter_list RRB ARROW typename_T scope_optional
   70                | . OPERATOR GE LRB parameter_list RRB ARROW typename_T scope_optional
   71                | . OPERATOR LT LRB parameter_list RRB ARROW typename_T scope_optional
   72                | . OPERATOR LE LRB parameter_list RRB ARROW typename_T scope_optional
   73                | . OPERATOR EQUAL LRB parameter_list RRB ARROW typename_T scope_optional
   74                | . OPERATOR NOTEQUAL LRB parameter_list RRB ARROW typename_T scope_optional
   75                | . OPERATOR BIT_OR LRB parameter_list RRB ARROW typename_T scope_optional
   76                | . OPERATOR BIT_AND LRB parameter_list RRB ARROW typename_T scope_optional
   77                | . OPERATOR LOGIC_OR LRB parameter_list RRB ARROW typename_T scope_optional
   78                | . OPERATOR LOGIC_AND LRB parameter_list RRB ARROW typename_T scope_optional
   79                | . OPERATOR LSHIFT LRB parameter_list RRB ARROW typename_T scope_optional
   80                | . OPERATOR RSHIFT LRB parameter_list RRB ARROW typename_T scope_optional
   81                | . OPERATOR EXC_OR LRB parameter_list RRB ARROW typename_T scope_optional
   82                | . OPERATOR NOT LRB parameter_list RRB ARROW typename_T scope_optional
   83                | . OPERATOR CHILDA LRB parameter_list RRB ARROW typename_T scope_optional
   84 field_define: . modifier_type_T typename_T IDENT SEMI
   85             | . typename_T IDENT SEMI
   88 modifier_type_T: . STATIC
   89                | . NATIVE
   90                | . ABSTRACT
   91                | . OVERRIDE
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT     shift, and go to state 14
    ABSTRACT  shift, and go to state 298
    OVERRIDE  shift, and go to state 299
    STATIC    shift, and go to state 300
    NATIVE    shift, and go to state 301
    DEF       shift, and go to state 302
    OPERATOR  shift, and go to state 303

    $default  reduce using rule 43 (access_member_list)

    member_define       go to state 341
    constructor_define  go to state 306
    method_define       go to state 307
    operator_define     go to state 308
    field_define        go to state 309
    modifier_type_T     go to state 310
    typename_T          go to state 311
    fqcn_part           go to state 149


state 305

   44 member_define_list: member_define .

    $default  reduce using rule 44 (member_define_list)


state 306

   46 member_define: constructor_define .

    $default  reduce using rule 46 (member_define)


state 307

   47 member_define: method_define .

    $default  reduce using rule 47 (member_define)


state 308

   48 member_define: operator_define .

    $default  reduce using rule 48 (member_define)


state 309

   49 member_define: field_define .

    $default  reduce using rule 49 (member_define)


state 310

   84 field_define: modifier_type_T . typename_T IDENT SEMI
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 342
    fqcn_part   go to state 149


state 311

   85 field_define: typename_T . IDENT SEMI

    IDENT  shift, and go to state 343


state 312

   34 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 344


state 313

   96 ident_list: ident_list COMMA IDENT .

    $default  reduce using rule 96 (ident_list)


state 314

   36 enum_decl: ENUM IDENT LCB ident_list COMMA RCB .

    $default  reduce using rule 36 (enum_decl)


state 315

   32 abstract_class_decl: ABSTRACT CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 345


state 316

   38 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 38 (interface_decl)


state 317

   26 type_parameter_group: .  [LRB]
   27                     | . LSB type_parameter_list RSB
   62 method_define: DEF IDENT . type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   63              | DEF IDENT . type_parameter_group LRB RRB ARROW typename_T scope_optional

    LSB  shift, and go to state 248

    $default  reduce using rule 26 (type_parameter_group)

    type_parameter_group  go to state 346


state 318

   50 constructor_define: DEF NEW . LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | DEF NEW . LRB RRB constructor_chain_optional scope_optional

    LRB  shift, and go to state 347


state 319

   60 method_define: DEF modifier_type_T_list . IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | DEF modifier_type_T_list . IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   87 modifier_type_T_list: modifier_type_T_list . modifier_type_T
   88 modifier_type_T: . STATIC
   89                | . NATIVE
   90                | . ABSTRACT
   91                | . OVERRIDE

    IDENT     shift, and go to state 348
    ABSTRACT  shift, and go to state 298
    OVERRIDE  shift, and go to state 299
    STATIC    shift, and go to state 300
    NATIVE    shift, and go to state 301

    modifier_type_T  go to state 349


state 320

   86 modifier_type_T_list: modifier_type_T .

    $default  reduce using rule 86 (modifier_type_T_list)


state 321

   64 operator_define: OPERATOR ADD . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 350


state 322

   65 operator_define: OPERATOR SUB . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 351


state 323

   66 operator_define: OPERATOR MUL . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 352


state 324

   67 operator_define: OPERATOR DIV . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 353


state 325

   68 operator_define: OPERATOR MOD . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 354


state 326

   82 operator_define: OPERATOR NOT . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 355


state 327

   79 operator_define: OPERATOR LSHIFT . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 356


state 328

   80 operator_define: OPERATOR RSHIFT . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 357


state 329

   83 operator_define: OPERATOR CHILDA . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 358


state 330

   73 operator_define: OPERATOR EQUAL . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 359


state 331

   74 operator_define: OPERATOR NOTEQUAL . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 360


state 332

   69 operator_define: OPERATOR GT . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 361


state 333

   70 operator_define: OPERATOR GE . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 362


state 334

   71 operator_define: OPERATOR LT . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 363


state 335

   72 operator_define: OPERATOR LE . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 364


state 336

   76 operator_define: OPERATOR BIT_AND . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 365


state 337

   78 operator_define: OPERATOR LOGIC_AND . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 366


state 338

   75 operator_define: OPERATOR BIT_OR . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 367


state 339

   77 operator_define: OPERATOR LOGIC_OR . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 368


state 340

   81 operator_define: OPERATOR EXC_OR . LRB parameter_list RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 369


state 341

   45 member_define_list: member_define_list member_define .

    $default  reduce using rule 45 (member_define_list)


state 342

   84 field_define: modifier_type_T typename_T . IDENT SEMI

    IDENT  shift, and go to state 370


state 343

   85 field_define: typename_T IDENT . SEMI

    SEMI  shift, and go to state 371


state 344

   34 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 34 (class_decl)


state 345

   32 abstract_class_decl: ABSTRACT CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 32 (abstract_class_decl)


state 346

   62 method_define: DEF IDENT type_parameter_group . LRB parameter_list RRB ARROW typename_T scope_optional
   63              | DEF IDENT type_parameter_group . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 372


state 347

   50 constructor_define: DEF NEW LRB . parameter_list RRB constructor_chain_optional scope_optional
   51                   | DEF NEW LRB . RRB constructor_chain_optional scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 373

    parameter_list  go to state 374
    typename_T      go to state 189
    fqcn_part       go to state 149


state 348

   26 type_parameter_group: .  [LRB]
   27                     | . LSB type_parameter_list RSB
   60 method_define: DEF modifier_type_T_list IDENT . type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | DEF modifier_type_T_list IDENT . type_parameter_group LRB RRB ARROW typename_T scope_optional

    LSB  shift, and go to state 248

    $default  reduce using rule 26 (type_parameter_group)

    type_parameter_group  go to state 375


state 349

   87 modifier_type_T_list: modifier_type_T_list modifier_type_T .

    $default  reduce using rule 87 (modifier_type_T_list)


state 350

   64 operator_define: OPERATOR ADD LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 376
    typename_T      go to state 189
    fqcn_part       go to state 149


state 351

   65 operator_define: OPERATOR SUB LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 377
    typename_T      go to state 189
    fqcn_part       go to state 149


state 352

   66 operator_define: OPERATOR MUL LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 378
    typename_T      go to state 189
    fqcn_part       go to state 149


state 353

   67 operator_define: OPERATOR DIV LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 379
    typename_T      go to state 189
    fqcn_part       go to state 149


state 354

   68 operator_define: OPERATOR MOD LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 380
    typename_T      go to state 189
    fqcn_part       go to state 149


state 355

   82 operator_define: OPERATOR NOT LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 381
    typename_T      go to state 189
    fqcn_part       go to state 149


state 356

   79 operator_define: OPERATOR LSHIFT LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 382
    typename_T      go to state 189
    fqcn_part       go to state 149


state 357

   80 operator_define: OPERATOR RSHIFT LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 383
    typename_T      go to state 189
    fqcn_part       go to state 149


state 358

   83 operator_define: OPERATOR CHILDA LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 384
    typename_T      go to state 189
    fqcn_part       go to state 149


state 359

   73 operator_define: OPERATOR EQUAL LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 385
    typename_T      go to state 189
    fqcn_part       go to state 149


state 360

   74 operator_define: OPERATOR NOTEQUAL LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 386
    typename_T      go to state 189
    fqcn_part       go to state 149


state 361

   69 operator_define: OPERATOR GT LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 387
    typename_T      go to state 189
    fqcn_part       go to state 149


state 362

   70 operator_define: OPERATOR GE LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 388
    typename_T      go to state 189
    fqcn_part       go to state 149


state 363

   71 operator_define: OPERATOR LT LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 389
    typename_T      go to state 189
    fqcn_part       go to state 149


state 364

   72 operator_define: OPERATOR LE LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 390
    typename_T      go to state 189
    fqcn_part       go to state 149


state 365

   76 operator_define: OPERATOR BIT_AND LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 391
    typename_T      go to state 189
    fqcn_part       go to state 149


state 366

   78 operator_define: OPERATOR LOGIC_AND LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 392
    typename_T      go to state 189
    fqcn_part       go to state 149


state 367

   75 operator_define: OPERATOR BIT_OR LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 393
    typename_T      go to state 189
    fqcn_part       go to state 149


state 368

   77 operator_define: OPERATOR LOGIC_OR LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 394
    typename_T      go to state 189
    fqcn_part       go to state 149


state 369

   81 operator_define: OPERATOR EXC_OR LRB . parameter_list RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    parameter_list  go to state 395
    typename_T      go to state 189
    fqcn_part       go to state 149


state 370

   84 field_define: modifier_type_T typename_T IDENT . SEMI

    SEMI  shift, and go to state 396


state 371

   85 field_define: typename_T IDENT SEMI .

    $default  reduce using rule 85 (field_define)


state 372

   62 method_define: DEF IDENT type_parameter_group LRB . parameter_list RRB ARROW typename_T scope_optional
   63              | DEF IDENT type_parameter_group LRB . RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 397

    parameter_list  go to state 398
    typename_T      go to state 189
    fqcn_part       go to state 149


state 373

   51 constructor_define: DEF NEW LRB RRB . constructor_chain_optional scope_optional
   52 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   53                  | . COLON constructor_chain_type_T LRB RRB
   56 constructor_chain_optional: .  [LCB, SEMI]
   57                           | . constructor_chain

    COLON  shift, and go to state 399

    $default  reduce using rule 56 (constructor_chain_optional)

    constructor_chain           go to state 400
    constructor_chain_optional  go to state 401


state 374

   50 constructor_define: DEF NEW LRB parameter_list . RRB constructor_chain_optional scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 402


state 375

   60 method_define: DEF modifier_type_T_list IDENT type_parameter_group . LRB parameter_list RRB ARROW typename_T scope_optional
   61              | DEF modifier_type_T_list IDENT type_parameter_group . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 403


state 376

   64 operator_define: OPERATOR ADD LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 404


state 377

   65 operator_define: OPERATOR SUB LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 405


state 378

   66 operator_define: OPERATOR MUL LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 406


state 379

   67 operator_define: OPERATOR DIV LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 407


state 380

   68 operator_define: OPERATOR MOD LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 408


state 381

   82 operator_define: OPERATOR NOT LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 409


state 382

   79 operator_define: OPERATOR LSHIFT LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 410


state 383

   80 operator_define: OPERATOR RSHIFT LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 411


state 384

   83 operator_define: OPERATOR CHILDA LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 412


state 385

   73 operator_define: OPERATOR EQUAL LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 413


state 386

   74 operator_define: OPERATOR NOTEQUAL LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 414


state 387

   69 operator_define: OPERATOR GT LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 415


state 388

   70 operator_define: OPERATOR GE LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 416


state 389

   71 operator_define: OPERATOR LT LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 417


state 390

   72 operator_define: OPERATOR LE LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 418


state 391

   76 operator_define: OPERATOR BIT_AND LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 419


state 392

   78 operator_define: OPERATOR LOGIC_AND LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 420


state 393

   75 operator_define: OPERATOR BIT_OR LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 421


state 394

   77 operator_define: OPERATOR LOGIC_OR LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 422


state 395

   81 operator_define: OPERATOR EXC_OR LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 423


state 396

   84 field_define: modifier_type_T typename_T IDENT SEMI .

    $default  reduce using rule 84 (field_define)


state 397

   63 method_define: DEF IDENT type_parameter_group LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 424


state 398

   62 method_define: DEF IDENT type_parameter_group LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 425


state 399

   52 constructor_chain: COLON . constructor_chain_type_T LRB argument_list RRB
   53                  | COLON . constructor_chain_type_T LRB RRB
   54 constructor_chain_type_T: . SUPER_TOK
   55                         | . THIS_TOK

    THIS_TOK   shift, and go to state 426
    SUPER_TOK  shift, and go to state 427

    constructor_chain_type_T  go to state 428


state 400

   57 constructor_chain_optional: constructor_chain .

    $default  reduce using rule 57 (constructor_chain_optional)


state 401

   51 constructor_define: DEF NEW LRB RRB constructor_chain_optional . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 429


state 402

   50 constructor_define: DEF NEW LRB parameter_list RRB . constructor_chain_optional scope_optional
   52 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   53                  | . COLON constructor_chain_type_T LRB RRB
   56 constructor_chain_optional: .  [LCB, SEMI]
   57                           | . constructor_chain

    COLON  shift, and go to state 399

    $default  reduce using rule 56 (constructor_chain_optional)

    constructor_chain           go to state 400
    constructor_chain_optional  go to state 430


state 403

   60 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB . parameter_list RRB ARROW typename_T scope_optional
   61              | DEF modifier_type_T_list IDENT type_parameter_group LRB . RRB ARROW typename_T scope_optional
   97 parameter_list: . typename_T IDENT
   98               | . parameter_list COMMA typename_T IDENT
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 431

    parameter_list  go to state 432
    typename_T      go to state 189
    fqcn_part       go to state 149


state 404

   64 operator_define: OPERATOR ADD LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 433


state 405

   65 operator_define: OPERATOR SUB LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 434


state 406

   66 operator_define: OPERATOR MUL LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 435


state 407

   67 operator_define: OPERATOR DIV LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 436


state 408

   68 operator_define: OPERATOR MOD LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 437


state 409

   82 operator_define: OPERATOR NOT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 438


state 410

   79 operator_define: OPERATOR LSHIFT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 439


state 411

   80 operator_define: OPERATOR RSHIFT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 440


state 412

   83 operator_define: OPERATOR CHILDA LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 441


state 413

   73 operator_define: OPERATOR EQUAL LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 442


state 414

   74 operator_define: OPERATOR NOTEQUAL LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 443


state 415

   69 operator_define: OPERATOR GT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 444


state 416

   70 operator_define: OPERATOR GE LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 445


state 417

   71 operator_define: OPERATOR LT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 446


state 418

   72 operator_define: OPERATOR LE LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 447


state 419

   76 operator_define: OPERATOR BIT_AND LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 448


state 420

   78 operator_define: OPERATOR LOGIC_AND LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 449


state 421

   75 operator_define: OPERATOR BIT_OR LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 450


state 422

   77 operator_define: OPERATOR LOGIC_OR LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 451


state 423

   81 operator_define: OPERATOR EXC_OR LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 452


state 424

   63 method_define: DEF IDENT type_parameter_group LRB RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 453
    fqcn_part   go to state 149


state 425

   62 method_define: DEF IDENT type_parameter_group LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 454


state 426

   55 constructor_chain_type_T: THIS_TOK .

    $default  reduce using rule 55 (constructor_chain_type_T)


state 427

   54 constructor_chain_type_T: SUPER_TOK .

    $default  reduce using rule 54 (constructor_chain_type_T)


state 428

   52 constructor_chain: COLON constructor_chain_type_T . LRB argument_list RRB
   53                  | COLON constructor_chain_type_T . LRB RRB

    LRB  shift, and go to state 455


state 429

   51 constructor_define: DEF NEW LRB RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 51 (constructor_define)


state 430

   50 constructor_define: DEF NEW LRB parameter_list RRB constructor_chain_optional . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 456


state 431

   61 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 457


state 432

   60 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB parameter_list . RRB ARROW typename_T scope_optional
   98 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 223
    RRB    shift, and go to state 458


state 433

   64 operator_define: OPERATOR ADD LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 459
    fqcn_part   go to state 149


state 434

   65 operator_define: OPERATOR SUB LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 460
    fqcn_part   go to state 149


state 435

   66 operator_define: OPERATOR MUL LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 461
    fqcn_part   go to state 149


state 436

   67 operator_define: OPERATOR DIV LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 462
    fqcn_part   go to state 149


state 437

   68 operator_define: OPERATOR MOD LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 463
    fqcn_part   go to state 149


state 438

   82 operator_define: OPERATOR NOT LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 464
    fqcn_part   go to state 149


state 439

   79 operator_define: OPERATOR LSHIFT LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 465
    fqcn_part   go to state 149


state 440

   80 operator_define: OPERATOR RSHIFT LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 466
    fqcn_part   go to state 149


state 441

   83 operator_define: OPERATOR CHILDA LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 467
    fqcn_part   go to state 149


state 442

   73 operator_define: OPERATOR EQUAL LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 468
    fqcn_part   go to state 149


state 443

   74 operator_define: OPERATOR NOTEQUAL LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 469
    fqcn_part   go to state 149


state 444

   69 operator_define: OPERATOR GT LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 470
    fqcn_part   go to state 149


state 445

   70 operator_define: OPERATOR GE LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 471
    fqcn_part   go to state 149


state 446

   71 operator_define: OPERATOR LT LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 472
    fqcn_part   go to state 149


state 447

   72 operator_define: OPERATOR LE LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 473
    fqcn_part   go to state 149


state 448

   76 operator_define: OPERATOR BIT_AND LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 474
    fqcn_part   go to state 149


state 449

   78 operator_define: OPERATOR LOGIC_AND LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 475
    fqcn_part   go to state 149


state 450

   75 operator_define: OPERATOR BIT_OR LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 476
    fqcn_part   go to state 149


state 451

   77 operator_define: OPERATOR LOGIC_OR LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 477
    fqcn_part   go to state 149


state 452

   81 operator_define: OPERATOR EXC_OR LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 478
    fqcn_part   go to state 149


state 453

   63 method_define: DEF IDENT type_parameter_group LRB RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 479


state 454

   62 method_define: DEF IDENT type_parameter_group LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 480
    fqcn_part   go to state 149


state 455

   52 constructor_chain: COLON constructor_chain_type_T LRB . argument_list RRB
   53                  | COLON constructor_chain_type_T LRB . RRB
   99 argument_list: . expression
  100              | . argument_list COMMA expression
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT
  108 expression: . LRB expression RRB
  109           | . primary
  110           | . expression_nobrace
  111 expression_nobrace: . ADD expression
  112                   | . SUB expression
  113                   | . expression ADD expression
  114                   | . expression SUB expression
  115                   | . expression MUL expression
  116                   | . expression DIV expression
  117                   | . expression MOD expression
  118                   | . expression BIT_OR expression
  119                   | . expression EQUAL expression
  120                   | . expression NOTEQUAL expression
  121                   | . expression BIT_AND expression
  122                   | . expression EXC_OR expression
  123                   | . expression LOGIC_OR expression
  124                   | . expression LOGIC_AND expression
  125                   | . lhs ASSIGN expression
  126                   | . lhs ADD_ASSIGN expression
  127                   | . lhs SUB_ASSIGN expression
  128                   | . lhs MUL_ASSIGN expression
  129                   | . lhs DIV_ASSIGN expression
  130                   | . lhs MOD_ASSIGN expression
  131                   | . lhs AND_ASSIGN expression
  132                   | . lhs OR_ASSIGN expression
  133                   | . lhs EXC_OR_ASSIGN expression
  134                   | . lhs LSHIFT_ASSIGN expression
  135                   | . lhs RSHIFT_ASSIGN expression
  136                   | . expression GT expression
  137                   | . expression GE expression
  138                   | . expression LT expression
  139                   | . expression LE expression
  140                   | . expression LSHIFT expression
  141                   | . expression RSHIFT expression
  142                   | . expression INSTANCEOF typename_T
  143                   | . expression AS typename_T
  144                   | . CHILDA expression
  145                   | . NOT expression
  146                   | . expression_nobrace LRB argument_list RRB
  147                   | . expression_nobrace LRB RRB
  148                   | . NEW fqcn_part typename_group LRB argument_list RRB
  149                   | . NEW fqcn_part typename_group LRB RRB
  150                   | . THIS_TOK
  151                   | . SUPER_TOK
  152                   | . lhs
  153 lhs: . fqcn_part typename_group
  154    | . expression DOT IDENT typename_group
  155 primary: . INT
  156        | . DOUBLE
  157        | . CHAR_LITERAL
  158        | . STRING_LITERAL
  159        | . TRUE_TOK
  160        | . FALSE_TOK
  161        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 481
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 482
    fqcn_part           go to state 62
    expression          go to state 173
    expression_nobrace  go to state 44
    lhs                 go to state 45
    primary             go to state 46


state 456

   50 constructor_define: DEF NEW LRB parameter_list RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 50 (constructor_define)


state 457

   61 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 483
    fqcn_part   go to state 149


state 458

   60 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 484


state 459

   64 operator_define: OPERATOR ADD LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 485


state 460

   65 operator_define: OPERATOR SUB LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 486


state 461

   66 operator_define: OPERATOR MUL LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 487


state 462

   67 operator_define: OPERATOR DIV LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 488


state 463

   68 operator_define: OPERATOR MOD LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 489


state 464

   82 operator_define: OPERATOR NOT LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 490


state 465

   79 operator_define: OPERATOR LSHIFT LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 491


state 466

   80 operator_define: OPERATOR RSHIFT LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 492


state 467

   83 operator_define: OPERATOR CHILDA LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 493


state 468

   73 operator_define: OPERATOR EQUAL LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 494


state 469

   74 operator_define: OPERATOR NOTEQUAL LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 495


state 470

   69 operator_define: OPERATOR GT LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 496


state 471

   70 operator_define: OPERATOR GE LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 497


state 472

   71 operator_define: OPERATOR LT LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 498


state 473

   72 operator_define: OPERATOR LE LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 499


state 474

   76 operator_define: OPERATOR BIT_AND LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 500


state 475

   78 operator_define: OPERATOR LOGIC_AND LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 501


state 476

   75 operator_define: OPERATOR BIT_OR LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 502


state 477

   77 operator_define: OPERATOR LOGIC_OR LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 503


state 478

   81 operator_define: OPERATOR EXC_OR LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 504


state 479

   63 method_define: DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 63 (method_define)


state 480

   62 method_define: DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 505


state 481

   53 constructor_chain: COLON constructor_chain_type_T LRB RRB .

    $default  reduce using rule 53 (constructor_chain)


state 482

   52 constructor_chain: COLON constructor_chain_type_T LRB argument_list . RRB
  100 argument_list: argument_list . COMMA expression

    COMMA  shift, and go to state 217
    RRB    shift, and go to state 506


state 483

   61 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 507


state 484

   60 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB parameter_list RRB ARROW . typename_T scope_optional
  105 typename_T: . fqcn_part typename_group
  106 fqcn_part: . IDENT
  107          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 508
    fqcn_part   go to state 149


state 485

   64 operator_define: OPERATOR ADD LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 64 (operator_define)


state 486

   65 operator_define: OPERATOR SUB LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 65 (operator_define)


state 487

   66 operator_define: OPERATOR MUL LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 66 (operator_define)


state 488

   67 operator_define: OPERATOR DIV LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 67 (operator_define)


state 489

   68 operator_define: OPERATOR MOD LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 68 (operator_define)


state 490

   82 operator_define: OPERATOR NOT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 82 (operator_define)


state 491

   79 operator_define: OPERATOR LSHIFT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 79 (operator_define)


state 492

   80 operator_define: OPERATOR RSHIFT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 80 (operator_define)


state 493

   83 operator_define: OPERATOR CHILDA LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 83 (operator_define)


state 494

   73 operator_define: OPERATOR EQUAL LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 73 (operator_define)


state 495

   74 operator_define: OPERATOR NOTEQUAL LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 74 (operator_define)


state 496

   69 operator_define: OPERATOR GT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 69 (operator_define)


state 497

   70 operator_define: OPERATOR GE LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 70 (operator_define)


state 498

   71 operator_define: OPERATOR LT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 71 (operator_define)


state 499

   72 operator_define: OPERATOR LE LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 72 (operator_define)


state 500

   76 operator_define: OPERATOR BIT_AND LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 76 (operator_define)


state 501

   78 operator_define: OPERATOR LOGIC_AND LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 78 (operator_define)


state 502

   75 operator_define: OPERATOR BIT_OR LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 75 (operator_define)


state 503

   77 operator_define: OPERATOR LOGIC_OR LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 77 (operator_define)


state 504

   81 operator_define: OPERATOR EXC_OR LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 81 (operator_define)


state 505

   62 method_define: DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 62 (method_define)


state 506

   52 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB .

    $default  reduce using rule 52 (constructor_chain)


state 507

   61 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 61 (method_define)


state 508

   60 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T . scope_optional
  199 scope: . LCB stmt_list RCB
  200      | . LCB RCB
  201 scope_optional: . SEMI
  202               | . scope

    LCB   shift, and go to state 79
    SEMI  shift, and go to state 132

    scope           go to state 133
    scope_optional  go to state 509


state 509

   60 method_define: DEF modifier_type_T_list IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 60 (method_define)
