Terminals which are not used

   LINE
   INC
   DEC
   LSB
   RSB
   QUOTE
   POST_DEC
   POST_INC
   '<'
   REF
   PRE_DEC
   PRE_INC
   FORM_TYPE


State 42 conflicts: 1 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: init_decl body_decl
    2                 | compilation_unit body_decl
    3                 | error '\n'

    4 init_decl: /* empty */
    5          | import_list

    6 body_decl: stmt
    7          | namespace_decl
    8          | function_define

    9 namespace_decl: NAMESPACE namespace_path namespace_body

   10 namespace_body: LCB namespace_member_decl_optional RCB

   11 namespace_member_decl: NAMESPACE namespace_path namespace_body
   12                      | class_decl
   13                      | interface_decl
   14                      | enum_decl

   15 namespace_member_decl_list: namespace_member_decl
   16                           | namespace_member_decl_list namespace_member_decl

   17 namespace_member_decl_optional: /* empty */
   18                               | namespace_member_decl_list

   19 namespace_path: IDENT
   20               | namespace_path DOT IDENT

   21 import_list: import
   22            | import_list import

   23 import: IMPORT STRING_LITERAL

   24 parameterized_typename: IDENT type_parameter_group

   25 type_parameter_group: /* empty */
   26                     | LGEN type_parameter_list RGEN

   27 type_parameter_list: type_parameter
   28                    | type_parameter_list COMMA type_parameter

   29 type_parameter: IDENT type_parameter_rule_list
   30               | IN IDENT type_parameter_rule_list
   31               | OUT IDENT type_parameter_rule_list

   32 type_parameter_rule_list: /* empty */
   33                         | LRB typename_list RRB

   34 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB
   35           | CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   36 enum_decl: ENUM IDENT LCB ident_list RCB
   37          | ENUM IDENT LCB ident_list COMMA RCB

   38 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   39               | INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   40 access_member_tree_opt: /* empty */
   41                       | access_member_tree

   42 access_member_tree: access_member_list
   43                   | access_member_tree access_member_list

   44 access_member_list: access_level_T COLON member_define_list

   45 member_define_list: member_define
   46                   | member_define_list member_define

   47 member_define: constructor_define
   48              | method_define
   49              | field_define

   50 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | CTOR NEW LRB RRB constructor_chain_optional scope_optional

   52 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB
   53                  | COLON constructor_chain_type_T LRB RRB

   54 constructor_chain_type_T: SUPER_TOK
   55                         | THIS_TOK

   56 constructor_chain_optional: /* empty */
   57                           | constructor_chain

   58 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   59                | DEF IDENT LRB RRB ARROW typename_T scope_optional

   60 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

   62 field_define: modifier_type_T typename_T IDENT SEMI

   63 modifier_type_T: /* empty */
   64                | STATIC NATIVE
   65                | NATIVE STATIC
   66                | STATIC
   67                | NATIVE

   68 access_level_T: PUBLIC
   69               | PRIVATE
   70               | PROTECTED

   71 ident_list: IDENT
   72           | ident_list COMMA IDENT

   73 parameter_list: typename_T IDENT
   74               | parameter_list COMMA typename_T IDENT

   75 argument_list: expression
   76              | argument_list COMMA expression

   77 typename_group: /* empty */
   78               | LGEN typename_list RGEN

   79 typename_list: typename_T
   80              | typename_list COMMA typename_T

   81 typename_T: fqcn_part typename_group

   82 fqcn_part: IDENT
   83          | fqcn_part COLO_COLO IDENT

   84 expression: LRB expression RRB
   85           | primary
   86           | expression_nobrace

   87 expression_nobrace: ADD expression
   88                   | SUB expression
   89                   | expression ADD expression
   90                   | expression SUB expression
   91                   | expression MUL expression
   92                   | expression DIV expression
   93                   | expression MOD expression
   94                   | expression BIT_OR expression
   95                   | expression EQUAL expression
   96                   | expression NOTEQUAL expression
   97                   | expression BIT_AND expression
   98                   | expression EXC_OR expression
   99                   | expression LOGIC_OR expression
  100                   | expression LOGIC_AND expression
  101                   | lhs ASSIGN expression
  102                   | lhs ADD_ASSIGN expression
  103                   | lhs SUB_ASSIGN expression
  104                   | lhs MUL_ASSIGN expression
  105                   | lhs DIV_ASSIGN expression
  106                   | lhs MOD_ASSIGN expression
  107                   | lhs AND_ASSIGN expression
  108                   | lhs OR_ASSIGN expression
  109                   | lhs EXC_OR_ASSIGN expression
  110                   | lhs LSHIFT_ASSIGN expression
  111                   | lhs RSHIFT_ASSIGN expression
  112                   | expression GT expression
  113                   | expression GE expression
  114                   | expression LT expression
  115                   | expression LE expression
  116                   | expression LSHIFT expression
  117                   | expression RSHIFT expression
  118                   | expression AS typename_T
  119                   | CHILDA expression
  120                   | NOT expression
  121                   | expression_nobrace LRB argument_list RRB
  122                   | expression_nobrace LRB RRB
  123                   | NEW fqcn_part typename_group LRB argument_list RRB
  124                   | NEW fqcn_part typename_group LRB RRB
  125                   | THIS_TOK
  126                   | SUPER_TOK
  127                   | lhs

  128 lhs: fqcn_part typename_group
  129    | expression DOT IDENT typename_group

  130 primary: INT
  131        | DOUBLE
  132        | CHAR_LITERAL
  133        | STRING_LITERAL
  134        | TRUE_TOK
  135        | FALSE_TOK
  136        | NULL_TOK

  137 stmt_list: stmt
  138          | stmt_list stmt

  139 stmt: expression stmt_term
  140     | variable_decl_stmt
  141     | variable_init_stmt
  142     | inferenced_type_init_stmt
  143     | if_stmt
  144     | while_stmt
  145     | break_stmt
  146     | continue_stmt
  147     | return_stmt
  148     | throw_stmt
  149     | try_stmt

  150 variable_decl_stmt: typename_T IDENT SEMI

  151 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term

  152 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term

  153 if_stmt: IF LRB expression RRB scope
  154        | IF LRB expression RRB scope ELSE scope
  155        | IF LRB expression RRB scope elif_list
  156        | IF LRB expression RRB scope elif_list ELSE scope

  157 elif_list: elif
  158          | elif_list elif

  159 elif: ELIF LRB expression RRB scope

  160 while_stmt: WHILE expression scope_optional

  161 break_stmt: BREAK stmt_term

  162 continue_stmt: CONTINUE stmt_term

  163 return_stmt: RETURN expression stmt_term

  164 throw_stmt: THROW expression stmt_term

  165 try_stmt: TRY scope catch_stmt_list

  166 catch_stmt_list: catch_stmt
  167                | catch_stmt_list catch_stmt

  168 catch_stmt: CATCH LRB typename_T IDENT RRB scope

  169 scope: LCB stmt_list RCB
  170      | LCB RCB

  171 scope_optional: SEMI
  172               | scope

  173 stmt_term: SEMI


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3
'<' (60)
error (256) 3
CHAR_LITERAL (258) 132
STRING_LITERAL (259) 23 133
INT (260) 130
DOUBLE (261) 131
IDENT (262) 19 20 24 29 30 31 36 37 58 59 60 61 62 71 72 73 74 82 83
    129 150 151 152 168
DOT (263) 20 129
COMMA (264) 28 37 72 74 76 80
COLON (265) 35 39 44 52 53
COLO_COLO (266) 83
LINE (267)
ADD (268) 87 89
SUB (269) 88 90
MUL (270) 91
DIV (271) 92
MOD (272) 93
NOT (273) 120
LSHIFT (274) 116
RSHIFT (275) 117
CHILDA (276) 119
EQUAL (277) 95
NOTEQUAL (278) 96
GT (279) 112
GE (280) 113
LT (281) 114
LE (282) 115
LGEN (283) 26 78
RGEN (284) 26 78
BIT_AND (285) 97
LOGIC_AND (286) 100
BIT_OR (287) 94
LOGIC_OR (288) 99
ASSIGN (289) 101 151 152
ADD_ASSIGN (290) 102
SUB_ASSIGN (291) 103
MUL_ASSIGN (292) 104
DIV_ASSIGN (293) 105
MOD_ASSIGN (294) 106
AND_ASSIGN (295) 107
OR_ASSIGN (296) 108
LSHIFT_ASSIGN (297) 110
RSHIFT_ASSIGN (298) 111
EXC_OR_ASSIGN (299) 109
INC (300)
DEC (301)
EXC_OR (302) 98
LCB (303) 10 34 35 36 37 38 39 169 170
RCB (304) 10 34 35 36 37 38 39 169 170
LRB (305) 33 50 51 52 53 58 59 60 61 84 121 122 123 124 153 154 155
    156 159 168
RRB (306) 33 50 51 52 53 58 59 60 61 84 121 122 123 124 153 154 155
    156 159 168
LSB (307)
RSB (308)
SEMI (309) 62 150 171 173
IMPORT (310) 23
VAR (311) 152
THIS_TOK (312) 55 125
SUPER_TOK (313) 54 126
TRUE_TOK (314) 134
FALSE_TOK (315) 135
NULL_TOK (316) 136
AS (317) 118
INTERFACE (318) 38 39
CLASS (319) 34 35
ENUM (320) 36 37
PUBLIC (321) 68
PRIVATE (322) 69
PROTECTED (323) 70
STATIC (324) 64 65 66
NATIVE (325) 64 65 67
NEW (326) 50 51 123 124
IN (327) 30
OUT (328) 31
CTOR (329) 50 51
DEF (330) 58 59 60 61
ARROW (331) 58 59 60 61
NAMESPACE (332) 9 11
RETURN (333) 163
IF (334) 153 154 155 156
ELIF (335) 159
ELSE (336) 154 156
WHILE (337) 160
BREAK (338) 161
CONTINUE (339) 162
TRY (340) 165
CATCH (341) 168
THROW (342) 164
QUOTE (343)
POST_DEC (344)
POST_INC (345)
FUNCCALL (346)
REF (347)
POSITIVE (348)
NEGATIVE (349)
PRE_DEC (350)
PRE_INC (351)
FORM_TYPE (352)


Nonterminals, with rules where they appear

$accept (100)
    on left: 0
compilation_unit (101)
    on left: 1 2 3, on right: 0 2
init_decl (102)
    on left: 4 5, on right: 1
body_decl (103)
    on left: 6 7 8, on right: 1 2
namespace_decl (104)
    on left: 9, on right: 7
namespace_body (105)
    on left: 10, on right: 9 11
namespace_member_decl (106)
    on left: 11 12 13 14, on right: 15 16
namespace_member_decl_list (107)
    on left: 15 16, on right: 16 18
namespace_member_decl_optional (108)
    on left: 17 18, on right: 10
namespace_path (109)
    on left: 19 20, on right: 9 11 20
import_list (110)
    on left: 21 22, on right: 5 22
import (111)
    on left: 23, on right: 21 22
parameterized_typename (112)
    on left: 24, on right: 34 35 38 39
type_parameter_group (113)
    on left: 25 26, on right: 24 60 61
type_parameter_list (114)
    on left: 27 28, on right: 26 28
type_parameter (115)
    on left: 29 30 31, on right: 27 28
type_parameter_rule_list (116)
    on left: 32 33, on right: 29 30 31
class_decl (117)
    on left: 34 35, on right: 12
enum_decl (118)
    on left: 36 37, on right: 14
interface_decl (119)
    on left: 38 39, on right: 13
access_member_tree_opt (120)
    on left: 40 41, on right: 34 35 38 39
access_member_tree (121)
    on left: 42 43, on right: 41 43
access_member_list (122)
    on left: 44, on right: 42 43
member_define_list (123)
    on left: 45 46, on right: 44 46
member_define (124)
    on left: 47 48 49, on right: 45 46
constructor_define (125)
    on left: 50 51, on right: 47
constructor_chain (126)
    on left: 52 53, on right: 57
constructor_chain_type_T (127)
    on left: 54 55, on right: 52 53
constructor_chain_optional (128)
    on left: 56 57, on right: 50 51
function_define (129)
    on left: 58 59, on right: 8
method_define (130)
    on left: 60 61, on right: 48
field_define (131)
    on left: 62, on right: 49
modifier_type_T (132)
    on left: 63 64 65 66 67, on right: 60 61 62
access_level_T (133)
    on left: 68 69 70, on right: 44
ident_list (134)
    on left: 71 72, on right: 36 37 72
parameter_list (135)
    on left: 73 74, on right: 50 58 60 74
argument_list (136)
    on left: 75 76, on right: 52 76 121 123
typename_group (137)
    on left: 77 78, on right: 81 123 124 128 129
typename_list (138)
    on left: 79 80, on right: 33 35 39 78 80
typename_T (139)
    on left: 81, on right: 58 59 60 61 62 73 74 79 80 118 150 151 168
fqcn_part (140)
    on left: 82 83, on right: 81 83 123 124 128
expression (141)
    on left: 84 85 86, on right: 75 76 84 87 88 89 90 91 92 93 94 95
    96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
    113 114 115 116 117 118 119 120 129 139 151 152 153 154 155 156
    159 160 163 164
expression_nobrace (142)
    on left: 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
    104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
    120 121 122 123 124 125 126 127, on right: 86 121 122
lhs (143)
    on left: 128 129, on right: 101 102 103 104 105 106 107 108 109
    110 111 127
primary (144)
    on left: 130 131 132 133 134 135 136, on right: 85
stmt_list (145)
    on left: 137 138, on right: 138 169
stmt (146)
    on left: 139 140 141 142 143 144 145 146 147 148 149,
    on right: 6 137 138
variable_decl_stmt (147)
    on left: 150, on right: 140
variable_init_stmt (148)
    on left: 151, on right: 141
inferenced_type_init_stmt (149)
    on left: 152, on right: 142
if_stmt (150)
    on left: 153 154 155 156, on right: 143
elif_list (151)
    on left: 157 158, on right: 155 156 158
elif (152)
    on left: 159, on right: 157 158
while_stmt (153)
    on left: 160, on right: 144
break_stmt (154)
    on left: 161, on right: 145
continue_stmt (155)
    on left: 162, on right: 146
return_stmt (156)
    on left: 163, on right: 147
throw_stmt (157)
    on left: 164, on right: 148
try_stmt (158)
    on left: 165, on right: 149
catch_stmt_list (159)
    on left: 166 167, on right: 165 167
catch_stmt (160)
    on left: 168, on right: 166 167
scope (161)
    on left: 169 170, on right: 153 154 155 156 159 165 168 172
scope_optional (162)
    on left: 171 172, on right: 50 51 58 59 60 61 160
stmt_term (163)
    on left: 173, on right: 139 151 152 161 162 163 164


state 0

    0 $accept: . compilation_unit $end
    1 compilation_unit: . init_decl body_decl
    2                 | . compilation_unit body_decl
    3                 | . error '\n'
    4 init_decl: .  [CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
    5          | . import_list
   21 import_list: . import
   22            | . import_list import
   23 import: . IMPORT STRING_LITERAL

    error   shift, and go to state 1
    IMPORT  shift, and go to state 2

    CHAR_LITERAL    reduce using rule 4 (init_decl)
    STRING_LITERAL  reduce using rule 4 (init_decl)
    INT             reduce using rule 4 (init_decl)
    DOUBLE          reduce using rule 4 (init_decl)
    IDENT           reduce using rule 4 (init_decl)
    ADD             reduce using rule 4 (init_decl)
    SUB             reduce using rule 4 (init_decl)
    NOT             reduce using rule 4 (init_decl)
    CHILDA          reduce using rule 4 (init_decl)
    LRB             reduce using rule 4 (init_decl)
    VAR             reduce using rule 4 (init_decl)
    THIS_TOK        reduce using rule 4 (init_decl)
    SUPER_TOK       reduce using rule 4 (init_decl)
    TRUE_TOK        reduce using rule 4 (init_decl)
    FALSE_TOK       reduce using rule 4 (init_decl)
    NULL_TOK        reduce using rule 4 (init_decl)
    NEW             reduce using rule 4 (init_decl)
    DEF             reduce using rule 4 (init_decl)
    NAMESPACE       reduce using rule 4 (init_decl)
    RETURN          reduce using rule 4 (init_decl)
    IF              reduce using rule 4 (init_decl)
    WHILE           reduce using rule 4 (init_decl)
    BREAK           reduce using rule 4 (init_decl)
    CONTINUE        reduce using rule 4 (init_decl)
    TRY             reduce using rule 4 (init_decl)
    THROW           reduce using rule 4 (init_decl)

    compilation_unit  go to state 3
    init_decl         go to state 4
    import_list       go to state 5
    import            go to state 6


state 1

    3 compilation_unit: error . '\n'

    '\n'  shift, and go to state 7


state 2

   23 import: IMPORT . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 8


state 3

    0 $accept: compilation_unit . $end
    2 compilation_unit: compilation_unit . body_decl
    6 body_decl: . stmt
    7          | . namespace_decl
    8          | . function_define
    9 namespace_decl: . NAMESPACE namespace_path namespace_body
   58 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   59                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  139 stmt: . expression stmt_term
  140     | . variable_decl_stmt
  141     | . variable_init_stmt
  142     | . inferenced_type_init_stmt
  143     | . if_stmt
  144     | . while_stmt
  145     | . break_stmt
  146     | . continue_stmt
  147     | . return_stmt
  148     | . throw_stmt
  149     | . try_stmt
  150 variable_decl_stmt: . typename_T IDENT SEMI
  151 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  152 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  153 if_stmt: . IF LRB expression RRB scope
  154        | . IF LRB expression RRB scope ELSE scope
  155        | . IF LRB expression RRB scope elif_list
  156        | . IF LRB expression RRB scope elif_list ELSE scope
  160 while_stmt: . WHILE expression scope_optional
  161 break_stmt: . BREAK stmt_term
  162 continue_stmt: . CONTINUE stmt_term
  163 return_stmt: . RETURN expression stmt_term
  164 throw_stmt: . THROW expression stmt_term
  165 try_stmt: . TRY scope catch_stmt_list

    $end            shift, and go to state 9
    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    DEF             shift, and go to state 27
    NAMESPACE       shift, and go to state 28
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35

    body_decl                  go to state 36
    namespace_decl             go to state 37
    function_define            go to state 38
    typename_T                 go to state 39
    fqcn_part                  go to state 40
    expression                 go to state 41
    expression_nobrace         go to state 42
    lhs                        go to state 43
    primary                    go to state 44
    stmt                       go to state 45
    variable_decl_stmt         go to state 46
    variable_init_stmt         go to state 47
    inferenced_type_init_stmt  go to state 48
    if_stmt                    go to state 49
    while_stmt                 go to state 50
    break_stmt                 go to state 51
    continue_stmt              go to state 52
    return_stmt                go to state 53
    throw_stmt                 go to state 54
    try_stmt                   go to state 55


state 4

    1 compilation_unit: init_decl . body_decl
    6 body_decl: . stmt
    7          | . namespace_decl
    8          | . function_define
    9 namespace_decl: . NAMESPACE namespace_path namespace_body
   58 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   59                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  139 stmt: . expression stmt_term
  140     | . variable_decl_stmt
  141     | . variable_init_stmt
  142     | . inferenced_type_init_stmt
  143     | . if_stmt
  144     | . while_stmt
  145     | . break_stmt
  146     | . continue_stmt
  147     | . return_stmt
  148     | . throw_stmt
  149     | . try_stmt
  150 variable_decl_stmt: . typename_T IDENT SEMI
  151 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  152 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  153 if_stmt: . IF LRB expression RRB scope
  154        | . IF LRB expression RRB scope ELSE scope
  155        | . IF LRB expression RRB scope elif_list
  156        | . IF LRB expression RRB scope elif_list ELSE scope
  160 while_stmt: . WHILE expression scope_optional
  161 break_stmt: . BREAK stmt_term
  162 continue_stmt: . CONTINUE stmt_term
  163 return_stmt: . RETURN expression stmt_term
  164 throw_stmt: . THROW expression stmt_term
  165 try_stmt: . TRY scope catch_stmt_list

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    DEF             shift, and go to state 27
    NAMESPACE       shift, and go to state 28
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35

    body_decl                  go to state 56
    namespace_decl             go to state 37
    function_define            go to state 38
    typename_T                 go to state 39
    fqcn_part                  go to state 40
    expression                 go to state 41
    expression_nobrace         go to state 42
    lhs                        go to state 43
    primary                    go to state 44
    stmt                       go to state 45
    variable_decl_stmt         go to state 46
    variable_init_stmt         go to state 47
    inferenced_type_init_stmt  go to state 48
    if_stmt                    go to state 49
    while_stmt                 go to state 50
    break_stmt                 go to state 51
    continue_stmt              go to state 52
    return_stmt                go to state 53
    throw_stmt                 go to state 54
    try_stmt                   go to state 55


state 5

    5 init_decl: import_list .  [CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   22 import_list: import_list . import
   23 import: . IMPORT STRING_LITERAL

    IMPORT  shift, and go to state 2

    $default  reduce using rule 5 (init_decl)

    import  go to state 57


state 6

   21 import_list: import .

    $default  reduce using rule 21 (import_list)


state 7

    3 compilation_unit: error '\n' .

    $default  reduce using rule 3 (compilation_unit)


state 8

   23 import: IMPORT STRING_LITERAL .

    $default  reduce using rule 23 (import)


state 9

    0 $accept: compilation_unit $end .

    $default  accept


state 10

  132 primary: CHAR_LITERAL .

    $default  reduce using rule 132 (primary)


state 11

  133 primary: STRING_LITERAL .

    $default  reduce using rule 133 (primary)


state 12

  130 primary: INT .

    $default  reduce using rule 130 (primary)


state 13

  131 primary: DOUBLE .

    $default  reduce using rule 131 (primary)


state 14

   82 fqcn_part: IDENT .

    $default  reduce using rule 82 (fqcn_part)


state 15

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   87                   | ADD . expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 59
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 16

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   88                   | SUB . expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 60
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 17

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  120                   | NOT . expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 61
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 18

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  119                   | CHILDA . expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 62
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 19

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   84           | LRB . expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 63
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 20

  152 inferenced_type_init_stmt: VAR . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 64


state 21

  125 expression_nobrace: THIS_TOK .

    $default  reduce using rule 125 (expression_nobrace)


state 22

  126 expression_nobrace: SUPER_TOK .

    $default  reduce using rule 126 (expression_nobrace)


state 23

  134 primary: TRUE_TOK .

    $default  reduce using rule 134 (primary)


state 24

  135 primary: FALSE_TOK .

    $default  reduce using rule 135 (primary)


state 25

  136 primary: NULL_TOK .

    $default  reduce using rule 136 (primary)


state 26

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
  123 expression_nobrace: NEW . fqcn_part typename_group LRB argument_list RRB
  124                   | NEW . fqcn_part typename_group LRB RRB

    IDENT  shift, and go to state 14

    fqcn_part  go to state 65


state 27

   58 function_define: DEF . IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   59                | DEF . IDENT LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 66


state 28

    9 namespace_decl: NAMESPACE . namespace_path namespace_body
   19 namespace_path: . IDENT
   20               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 67

    namespace_path  go to state 68


state 29

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  163 return_stmt: RETURN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 69
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 30

  153 if_stmt: IF . LRB expression RRB scope
  154        | IF . LRB expression RRB scope ELSE scope
  155        | IF . LRB expression RRB scope elif_list
  156        | IF . LRB expression RRB scope elif_list ELSE scope

    LRB  shift, and go to state 70


state 31

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  160 while_stmt: WHILE . expression scope_optional

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 71
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 32

  161 break_stmt: BREAK . stmt_term
  173 stmt_term: . SEMI

    SEMI  shift, and go to state 72

    stmt_term  go to state 73


state 33

  162 continue_stmt: CONTINUE . stmt_term
  173 stmt_term: . SEMI

    SEMI  shift, and go to state 72

    stmt_term  go to state 74


state 34

  165 try_stmt: TRY . scope catch_stmt_list
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB

    LCB  shift, and go to state 75

    scope  go to state 76


state 35

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  164 throw_stmt: THROW . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 77
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 36

    2 compilation_unit: compilation_unit body_decl .

    $default  reduce using rule 2 (compilation_unit)


state 37

    7 body_decl: namespace_decl .

    $default  reduce using rule 7 (body_decl)


state 38

    8 body_decl: function_define .

    $default  reduce using rule 8 (body_decl)


state 39

  150 variable_decl_stmt: typename_T . IDENT SEMI
  151 variable_init_stmt: typename_T . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 78


state 40

   77 typename_group: .  [IDENT, DOT, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, SEMI, AS]
   78               | . LGEN typename_list RGEN
   81 typename_T: fqcn_part . typename_group
   83 fqcn_part: fqcn_part . COLO_COLO IDENT
  128 lhs: fqcn_part . typename_group

    COLO_COLO  shift, and go to state 79
    LGEN       shift, and go to state 80

    $default  reduce using rule 77 (typename_group)

    typename_group  go to state 81


state 41

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group
  139 stmt: expression . stmt_term
  173 stmt_term: . SEMI

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    SEMI       shift, and go to state 72
    AS         shift, and go to state 101

    stmt_term  go to state 102


state 42

   86 expression: expression_nobrace .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  121 expression_nobrace: expression_nobrace . LRB argument_list RRB
  122                   | expression_nobrace . LRB RRB

    LRB  shift, and go to state 103

    LRB       [reduce using rule 86 (expression)]
    $default  reduce using rule 86 (expression)


state 43

  101 expression_nobrace: lhs . ASSIGN expression
  102                   | lhs . ADD_ASSIGN expression
  103                   | lhs . SUB_ASSIGN expression
  104                   | lhs . MUL_ASSIGN expression
  105                   | lhs . DIV_ASSIGN expression
  106                   | lhs . MOD_ASSIGN expression
  107                   | lhs . AND_ASSIGN expression
  108                   | lhs . OR_ASSIGN expression
  109                   | lhs . EXC_OR_ASSIGN expression
  110                   | lhs . LSHIFT_ASSIGN expression
  111                   | lhs . RSHIFT_ASSIGN expression
  127                   | lhs .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]

    ASSIGN         shift, and go to state 104
    ADD_ASSIGN     shift, and go to state 105
    SUB_ASSIGN     shift, and go to state 106
    MUL_ASSIGN     shift, and go to state 107
    DIV_ASSIGN     shift, and go to state 108
    MOD_ASSIGN     shift, and go to state 109
    AND_ASSIGN     shift, and go to state 110
    OR_ASSIGN      shift, and go to state 111
    LSHIFT_ASSIGN  shift, and go to state 112
    RSHIFT_ASSIGN  shift, and go to state 113
    EXC_OR_ASSIGN  shift, and go to state 114

    $default  reduce using rule 127 (expression_nobrace)


state 44

   85 expression: primary .

    $default  reduce using rule 85 (expression)


state 45

    6 body_decl: stmt .

    $default  reduce using rule 6 (body_decl)


state 46

  140 stmt: variable_decl_stmt .

    $default  reduce using rule 140 (stmt)


state 47

  141 stmt: variable_init_stmt .

    $default  reduce using rule 141 (stmt)


state 48

  142 stmt: inferenced_type_init_stmt .

    $default  reduce using rule 142 (stmt)


state 49

  143 stmt: if_stmt .

    $default  reduce using rule 143 (stmt)


state 50

  144 stmt: while_stmt .

    $default  reduce using rule 144 (stmt)


state 51

  145 stmt: break_stmt .

    $default  reduce using rule 145 (stmt)


state 52

  146 stmt: continue_stmt .

    $default  reduce using rule 146 (stmt)


state 53

  147 stmt: return_stmt .

    $default  reduce using rule 147 (stmt)


state 54

  148 stmt: throw_stmt .

    $default  reduce using rule 148 (stmt)


state 55

  149 stmt: try_stmt .

    $default  reduce using rule 149 (stmt)


state 56

    1 compilation_unit: init_decl body_decl .

    $default  reduce using rule 1 (compilation_unit)


state 57

   22 import_list: import_list import .

    $default  reduce using rule 22 (import_list)


state 58

   77 typename_group: .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LCB, LRB, RRB, SEMI, AS]
   78               | . LGEN typename_list RGEN
   83 fqcn_part: fqcn_part . COLO_COLO IDENT
  128 lhs: fqcn_part . typename_group

    COLO_COLO  shift, and go to state 79
    LGEN       shift, and go to state 80

    $default  reduce using rule 77 (typename_group)

    typename_group  go to state 115


state 59

   87 expression_nobrace: ADD expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   89                   | expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 101

    $default  reduce using rule 87 (expression_nobrace)

    Conflict between rule 87 and token DOT resolved as reduce (DOT < POSITIVE).
    Conflict between rule 87 and token ADD resolved as reduce (ADD < POSITIVE).
    Conflict between rule 87 and token SUB resolved as reduce (SUB < POSITIVE).
    Conflict between rule 87 and token MUL resolved as reduce (MUL < POSITIVE).
    Conflict between rule 87 and token DIV resolved as reduce (DIV < POSITIVE).
    Conflict between rule 87 and token MOD resolved as reduce (MOD < POSITIVE).
    Conflict between rule 87 and token LSHIFT resolved as reduce (LSHIFT < POSITIVE).
    Conflict between rule 87 and token RSHIFT resolved as reduce (RSHIFT < POSITIVE).
    Conflict between rule 87 and token EQUAL resolved as reduce (EQUAL < POSITIVE).
    Conflict between rule 87 and token NOTEQUAL resolved as reduce (NOTEQUAL < POSITIVE).
    Conflict between rule 87 and token GT resolved as reduce (GT < POSITIVE).
    Conflict between rule 87 and token GE resolved as reduce (GE < POSITIVE).
    Conflict between rule 87 and token LT resolved as reduce (LT < POSITIVE).
    Conflict between rule 87 and token LE resolved as reduce (LE < POSITIVE).
    Conflict between rule 87 and token BIT_AND resolved as reduce (BIT_AND < POSITIVE).
    Conflict between rule 87 and token LOGIC_AND resolved as reduce (LOGIC_AND < POSITIVE).
    Conflict between rule 87 and token BIT_OR resolved as reduce (BIT_OR < POSITIVE).
    Conflict between rule 87 and token LOGIC_OR resolved as reduce (LOGIC_OR < POSITIVE).
    Conflict between rule 87 and token EXC_OR resolved as reduce (EXC_OR < POSITIVE).
    Conflict between rule 87 and token AS resolved as shift (POSITIVE < AS).


state 60

   88 expression_nobrace: SUB expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   89                   | expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 101

    $default  reduce using rule 88 (expression_nobrace)

    Conflict between rule 88 and token DOT resolved as reduce (DOT < NEGATIVE).
    Conflict between rule 88 and token ADD resolved as reduce (ADD < NEGATIVE).
    Conflict between rule 88 and token SUB resolved as reduce (SUB < NEGATIVE).
    Conflict between rule 88 and token MUL resolved as reduce (MUL < NEGATIVE).
    Conflict between rule 88 and token DIV resolved as reduce (DIV < NEGATIVE).
    Conflict between rule 88 and token MOD resolved as reduce (MOD < NEGATIVE).
    Conflict between rule 88 and token LSHIFT resolved as reduce (LSHIFT < NEGATIVE).
    Conflict between rule 88 and token RSHIFT resolved as reduce (RSHIFT < NEGATIVE).
    Conflict between rule 88 and token EQUAL resolved as reduce (EQUAL < NEGATIVE).
    Conflict between rule 88 and token NOTEQUAL resolved as reduce (NOTEQUAL < NEGATIVE).
    Conflict between rule 88 and token GT resolved as reduce (GT < NEGATIVE).
    Conflict between rule 88 and token GE resolved as reduce (GE < NEGATIVE).
    Conflict between rule 88 and token LT resolved as reduce (LT < NEGATIVE).
    Conflict between rule 88 and token LE resolved as reduce (LE < NEGATIVE).
    Conflict between rule 88 and token BIT_AND resolved as reduce (BIT_AND < NEGATIVE).
    Conflict between rule 88 and token LOGIC_AND resolved as reduce (LOGIC_AND < NEGATIVE).
    Conflict between rule 88 and token BIT_OR resolved as reduce (BIT_OR < NEGATIVE).
    Conflict between rule 88 and token LOGIC_OR resolved as reduce (LOGIC_OR < NEGATIVE).
    Conflict between rule 88 and token EXC_OR resolved as reduce (EXC_OR < NEGATIVE).
    Conflict between rule 88 and token AS resolved as shift (NEGATIVE < AS).


state 61

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  120                   | NOT expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  129 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 101

    $default  reduce using rule 120 (expression_nobrace)

    Conflict between rule 120 and token DOT resolved as reduce (DOT < NOT).
    Conflict between rule 120 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 120 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 120 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 120 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 120 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 120 and token LSHIFT resolved as reduce (LSHIFT < NOT).
    Conflict between rule 120 and token RSHIFT resolved as reduce (RSHIFT < NOT).
    Conflict between rule 120 and token EQUAL resolved as reduce (EQUAL < NOT).
    Conflict between rule 120 and token NOTEQUAL resolved as reduce (NOTEQUAL < NOT).
    Conflict between rule 120 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 120 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 120 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 120 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 120 and token BIT_AND resolved as reduce (BIT_AND < NOT).
    Conflict between rule 120 and token LOGIC_AND resolved as reduce (LOGIC_AND < NOT).
    Conflict between rule 120 and token BIT_OR resolved as reduce (BIT_OR < NOT).
    Conflict between rule 120 and token LOGIC_OR resolved as reduce (LOGIC_OR < NOT).
    Conflict between rule 120 and token EXC_OR resolved as reduce (EXC_OR < NOT).
    Conflict between rule 120 and token AS resolved as shift (NOT < AS).


state 62

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  119                   | CHILDA expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  129 lhs: expression . DOT IDENT typename_group

    AS  shift, and go to state 101

    $default  reduce using rule 119 (expression_nobrace)

    Conflict between rule 119 and token DOT resolved as reduce (DOT < CHILDA).
    Conflict between rule 119 and token ADD resolved as reduce (ADD < CHILDA).
    Conflict between rule 119 and token SUB resolved as reduce (SUB < CHILDA).
    Conflict between rule 119 and token MUL resolved as reduce (MUL < CHILDA).
    Conflict between rule 119 and token DIV resolved as reduce (DIV < CHILDA).
    Conflict between rule 119 and token MOD resolved as reduce (MOD < CHILDA).
    Conflict between rule 119 and token LSHIFT resolved as reduce (LSHIFT < CHILDA).
    Conflict between rule 119 and token RSHIFT resolved as reduce (RSHIFT < CHILDA).
    Conflict between rule 119 and token EQUAL resolved as reduce (EQUAL < CHILDA).
    Conflict between rule 119 and token NOTEQUAL resolved as reduce (NOTEQUAL < CHILDA).
    Conflict between rule 119 and token GT resolved as reduce (GT < CHILDA).
    Conflict between rule 119 and token GE resolved as reduce (GE < CHILDA).
    Conflict between rule 119 and token LT resolved as reduce (LT < CHILDA).
    Conflict between rule 119 and token LE resolved as reduce (LE < CHILDA).
    Conflict between rule 119 and token BIT_AND resolved as reduce (BIT_AND < CHILDA).
    Conflict between rule 119 and token LOGIC_AND resolved as reduce (LOGIC_AND < CHILDA).
    Conflict between rule 119 and token BIT_OR resolved as reduce (BIT_OR < CHILDA).
    Conflict between rule 119 and token LOGIC_OR resolved as reduce (LOGIC_OR < CHILDA).
    Conflict between rule 119 and token EXC_OR resolved as reduce (EXC_OR < CHILDA).
    Conflict between rule 119 and token AS resolved as shift (CHILDA < AS).


state 63

   84 expression: LRB expression . RRB
   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    RRB        shift, and go to state 116
    AS         shift, and go to state 101


state 64

  152 inferenced_type_init_stmt: VAR IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 117


state 65

   77 typename_group: .  [LRB]
   78               | . LGEN typename_list RGEN
   83 fqcn_part: fqcn_part . COLO_COLO IDENT
  123 expression_nobrace: NEW fqcn_part . typename_group LRB argument_list RRB
  124                   | NEW fqcn_part . typename_group LRB RRB

    COLO_COLO  shift, and go to state 79
    LGEN       shift, and go to state 80

    $default  reduce using rule 77 (typename_group)

    typename_group  go to state 118


state 66

   58 function_define: DEF IDENT . LRB parameter_list RRB ARROW typename_T scope_optional
   59                | DEF IDENT . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 119


state 67

   19 namespace_path: IDENT .

    $default  reduce using rule 19 (namespace_path)


state 68

    9 namespace_decl: NAMESPACE namespace_path . namespace_body
   10 namespace_body: . LCB namespace_member_decl_optional RCB
   20 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 120
    LCB  shift, and go to state 121

    namespace_body  go to state 122


state 69

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group
  163 return_stmt: RETURN expression . stmt_term
  173 stmt_term: . SEMI

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    SEMI       shift, and go to state 72
    AS         shift, and go to state 101

    stmt_term  go to state 123


state 70

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  153 if_stmt: IF LRB . expression RRB scope
  154        | IF LRB . expression RRB scope ELSE scope
  155        | IF LRB . expression RRB scope elif_list
  156        | IF LRB . expression RRB scope elif_list ELSE scope

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 124
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 71

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group
  160 while_stmt: WHILE expression . scope_optional
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB
  171 scope_optional: . SEMI
  172               | . scope

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    LCB        shift, and go to state 75
    SEMI       shift, and go to state 125
    AS         shift, and go to state 101

    scope           go to state 126
    scope_optional  go to state 127


state 72

  173 stmt_term: SEMI .

    $default  reduce using rule 173 (stmt_term)


state 73

  161 break_stmt: BREAK stmt_term .

    $default  reduce using rule 161 (break_stmt)


state 74

  162 continue_stmt: CONTINUE stmt_term .

    $default  reduce using rule 162 (continue_stmt)


state 75

   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  137 stmt_list: . stmt
  138          | . stmt_list stmt
  139 stmt: . expression stmt_term
  140     | . variable_decl_stmt
  141     | . variable_init_stmt
  142     | . inferenced_type_init_stmt
  143     | . if_stmt
  144     | . while_stmt
  145     | . break_stmt
  146     | . continue_stmt
  147     | . return_stmt
  148     | . throw_stmt
  149     | . try_stmt
  150 variable_decl_stmt: . typename_T IDENT SEMI
  151 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  152 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  153 if_stmt: . IF LRB expression RRB scope
  154        | . IF LRB expression RRB scope ELSE scope
  155        | . IF LRB expression RRB scope elif_list
  156        | . IF LRB expression RRB scope elif_list ELSE scope
  160 while_stmt: . WHILE expression scope_optional
  161 break_stmt: . BREAK stmt_term
  162 continue_stmt: . CONTINUE stmt_term
  163 return_stmt: . RETURN expression stmt_term
  164 throw_stmt: . THROW expression stmt_term
  165 try_stmt: . TRY scope catch_stmt_list
  169 scope: LCB . stmt_list RCB
  170      | LCB . RCB

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    RCB             shift, and go to state 128
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35

    typename_T                 go to state 39
    fqcn_part                  go to state 40
    expression                 go to state 41
    expression_nobrace         go to state 42
    lhs                        go to state 43
    primary                    go to state 44
    stmt_list                  go to state 129
    stmt                       go to state 130
    variable_decl_stmt         go to state 46
    variable_init_stmt         go to state 47
    inferenced_type_init_stmt  go to state 48
    if_stmt                    go to state 49
    while_stmt                 go to state 50
    break_stmt                 go to state 51
    continue_stmt              go to state 52
    return_stmt                go to state 53
    throw_stmt                 go to state 54
    try_stmt                   go to state 55


state 76

  165 try_stmt: TRY scope . catch_stmt_list
  166 catch_stmt_list: . catch_stmt
  167                | . catch_stmt_list catch_stmt
  168 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 131

    catch_stmt_list  go to state 132
    catch_stmt       go to state 133


state 77

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group
  164 throw_stmt: THROW expression . stmt_term
  173 stmt_term: . SEMI

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    SEMI       shift, and go to state 72
    AS         shift, and go to state 101

    stmt_term  go to state 134


state 78

  150 variable_decl_stmt: typename_T IDENT . SEMI
  151 variable_init_stmt: typename_T IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 135
    SEMI    shift, and go to state 136


state 79

   83 fqcn_part: fqcn_part COLO_COLO . IDENT

    IDENT  shift, and go to state 137


state 80

   78 typename_group: LGEN . typename_list RGEN
   79 typename_list: . typename_T
   80              | . typename_list COMMA typename_T
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 138
    typename_T     go to state 139
    fqcn_part      go to state 140


state 81

   81 typename_T: fqcn_part typename_group .  [IDENT]
  128 lhs: fqcn_part typename_group .  [DOT, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, SEMI, AS]

    IDENT     reduce using rule 81 (typename_T)
    $default  reduce using rule 128 (lhs)


state 82

  129 lhs: expression DOT . IDENT typename_group

    IDENT  shift, and go to state 141


state 83

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   89                   | expression ADD . expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 142
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 84

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   90                   | expression SUB . expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 143
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 85

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   91                   | expression MUL . expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 144
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 86

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   92                   | expression DIV . expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 145
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 87

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   93                   | expression MOD . expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 146
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 88

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  116                   | expression LSHIFT . expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 147
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 89

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  117                   | expression RSHIFT . expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 148
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 90

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   95                   | expression EQUAL . expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 149
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 91

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   96                   | expression NOTEQUAL . expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 150
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 92

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  112                   | expression GT . expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 151
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 93

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  113                   | expression GE . expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 152
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 94

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  114                   | expression LT . expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 153
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 95

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  115                   | expression LE . expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 154
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 96

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   97                   | expression BIT_AND . expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 155
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 97

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  100                   | expression LOGIC_AND . expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 156
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 98

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   94                   | expression BIT_OR . expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 157
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 99

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
   99                   | expression LOGIC_OR . expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 158
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 100

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   98                   | expression EXC_OR . expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 159
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 101

   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
  118 expression_nobrace: expression AS . typename_T

    IDENT  shift, and go to state 14

    typename_T  go to state 160
    fqcn_part   go to state 140


state 102

  139 stmt: expression stmt_term .

    $default  reduce using rule 139 (stmt)


state 103

   75 argument_list: . expression
   76              | . argument_list COMMA expression
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  121                   | expression_nobrace LRB . argument_list RRB
  122                   | . expression_nobrace LRB RRB
  122                   | expression_nobrace LRB . RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 161
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 162
    fqcn_part           go to state 58
    expression          go to state 163
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 104

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  101                   | lhs ASSIGN . expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 164
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 105

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  102                   | lhs ADD_ASSIGN . expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 165
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 106

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  103                   | lhs SUB_ASSIGN . expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 166
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 107

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  104                   | lhs MUL_ASSIGN . expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 167
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 108

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  105                   | lhs DIV_ASSIGN . expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 168
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 109

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  106                   | lhs MOD_ASSIGN . expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 169
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 110

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  107                   | lhs AND_ASSIGN . expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 170
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 111

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  108                   | lhs OR_ASSIGN . expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 171
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 112

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  110                   | lhs LSHIFT_ASSIGN . expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 172
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 113

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  111                   | lhs RSHIFT_ASSIGN . expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 173
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 114

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  109                   | lhs EXC_OR_ASSIGN . expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 174
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 115

  128 lhs: fqcn_part typename_group .

    $default  reduce using rule 128 (lhs)


state 116

   84 expression: LRB expression RRB .

    $default  reduce using rule 84 (expression)


state 117

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  152 inferenced_type_init_stmt: VAR IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 175
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 118

  123 expression_nobrace: NEW fqcn_part typename_group . LRB argument_list RRB
  124                   | NEW fqcn_part typename_group . LRB RRB

    LRB  shift, and go to state 176


state 119

   58 function_define: DEF IDENT LRB . parameter_list RRB ARROW typename_T scope_optional
   59                | DEF IDENT LRB . RRB ARROW typename_T scope_optional
   73 parameter_list: . typename_T IDENT
   74               | . parameter_list COMMA typename_T IDENT
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 177

    parameter_list  go to state 178
    typename_T      go to state 179
    fqcn_part       go to state 140


state 120

   20 namespace_path: namespace_path DOT . IDENT

    IDENT  shift, and go to state 180


state 121

   10 namespace_body: LCB . namespace_member_decl_optional RCB
   11 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   12                      | . class_decl
   13                      | . interface_decl
   14                      | . enum_decl
   15 namespace_member_decl_list: . namespace_member_decl
   16                           | . namespace_member_decl_list namespace_member_decl
   17 namespace_member_decl_optional: .  [RCB]
   18                               | . namespace_member_decl_list
   34 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   35           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   36 enum_decl: . ENUM IDENT LCB ident_list RCB
   37          | . ENUM IDENT LCB ident_list COMMA RCB
   38 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   39               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 181
    CLASS      shift, and go to state 182
    ENUM       shift, and go to state 183
    NAMESPACE  shift, and go to state 184

    $default  reduce using rule 17 (namespace_member_decl_optional)

    namespace_member_decl           go to state 185
    namespace_member_decl_list      go to state 186
    namespace_member_decl_optional  go to state 187
    class_decl                      go to state 188
    enum_decl                       go to state 189
    interface_decl                  go to state 190


state 122

    9 namespace_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 9 (namespace_decl)


state 123

  163 return_stmt: RETURN expression stmt_term .

    $default  reduce using rule 163 (return_stmt)


state 124

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group
  153 if_stmt: IF LRB expression . RRB scope
  154        | IF LRB expression . RRB scope ELSE scope
  155        | IF LRB expression . RRB scope elif_list
  156        | IF LRB expression . RRB scope elif_list ELSE scope

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    RRB        shift, and go to state 191
    AS         shift, and go to state 101


state 125

  171 scope_optional: SEMI .

    $default  reduce using rule 171 (scope_optional)


state 126

  172 scope_optional: scope .

    $default  reduce using rule 172 (scope_optional)


state 127

  160 while_stmt: WHILE expression scope_optional .

    $default  reduce using rule 160 (while_stmt)


state 128

  170 scope: LCB RCB .

    $default  reduce using rule 170 (scope)


state 129

   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  138 stmt_list: stmt_list . stmt
  139 stmt: . expression stmt_term
  140     | . variable_decl_stmt
  141     | . variable_init_stmt
  142     | . inferenced_type_init_stmt
  143     | . if_stmt
  144     | . while_stmt
  145     | . break_stmt
  146     | . continue_stmt
  147     | . return_stmt
  148     | . throw_stmt
  149     | . try_stmt
  150 variable_decl_stmt: . typename_T IDENT SEMI
  151 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  152 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  153 if_stmt: . IF LRB expression RRB scope
  154        | . IF LRB expression RRB scope ELSE scope
  155        | . IF LRB expression RRB scope elif_list
  156        | . IF LRB expression RRB scope elif_list ELSE scope
  160 while_stmt: . WHILE expression scope_optional
  161 break_stmt: . BREAK stmt_term
  162 continue_stmt: . CONTINUE stmt_term
  163 return_stmt: . RETURN expression stmt_term
  164 throw_stmt: . THROW expression stmt_term
  165 try_stmt: . TRY scope catch_stmt_list
  169 scope: LCB stmt_list . RCB

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    RCB             shift, and go to state 192
    LRB             shift, and go to state 19
    VAR             shift, and go to state 20
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26
    RETURN          shift, and go to state 29
    IF              shift, and go to state 30
    WHILE           shift, and go to state 31
    BREAK           shift, and go to state 32
    CONTINUE        shift, and go to state 33
    TRY             shift, and go to state 34
    THROW           shift, and go to state 35

    typename_T                 go to state 39
    fqcn_part                  go to state 40
    expression                 go to state 41
    expression_nobrace         go to state 42
    lhs                        go to state 43
    primary                    go to state 44
    stmt                       go to state 193
    variable_decl_stmt         go to state 46
    variable_init_stmt         go to state 47
    inferenced_type_init_stmt  go to state 48
    if_stmt                    go to state 49
    while_stmt                 go to state 50
    break_stmt                 go to state 51
    continue_stmt              go to state 52
    return_stmt                go to state 53
    throw_stmt                 go to state 54
    try_stmt                   go to state 55


state 130

  137 stmt_list: stmt .

    $default  reduce using rule 137 (stmt_list)


state 131

  168 catch_stmt: CATCH . LRB typename_T IDENT RRB scope

    LRB  shift, and go to state 194


state 132

  165 try_stmt: TRY scope catch_stmt_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  167 catch_stmt_list: catch_stmt_list . catch_stmt
  168 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 131

    $default  reduce using rule 165 (try_stmt)

    catch_stmt  go to state 195


state 133

  166 catch_stmt_list: catch_stmt .

    $default  reduce using rule 166 (catch_stmt_list)


state 134

  164 throw_stmt: THROW expression stmt_term .

    $default  reduce using rule 164 (throw_stmt)


state 135

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  151 variable_init_stmt: typename_T IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 196
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 136

  150 variable_decl_stmt: typename_T IDENT SEMI .

    $default  reduce using rule 150 (variable_decl_stmt)


state 137

   83 fqcn_part: fqcn_part COLO_COLO IDENT .

    $default  reduce using rule 83 (fqcn_part)


state 138

   78 typename_group: LGEN typename_list . RGEN
   80 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 197
    RGEN   shift, and go to state 198


state 139

   79 typename_list: typename_T .

    $default  reduce using rule 79 (typename_list)


state 140

   77 typename_group: .  [IDENT, DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, RGEN, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
   78               | . LGEN typename_list RGEN
   81 typename_T: fqcn_part . typename_group
   83 fqcn_part: fqcn_part . COLO_COLO IDENT

    COLO_COLO  shift, and go to state 79
    LGEN       shift, and go to state 80

    $default  reduce using rule 77 (typename_group)

    typename_group  go to state 199


state 141

   77 typename_group: .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LCB, LRB, RRB, SEMI, AS]
   78               | . LGEN typename_list RGEN
  129 lhs: expression DOT IDENT . typename_group

    LGEN  shift, and go to state 80

    $default  reduce using rule 77 (typename_group)

    typename_group  go to state 200


state 142

   89 expression_nobrace: expression . ADD expression  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   89                   | expression ADD expression .  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87
    GT   shift, and go to state 92
    GE   shift, and go to state 93
    LT   shift, and go to state 94
    LE   shift, and go to state 95
    AS   shift, and go to state 101

    $default  reduce using rule 89 (expression_nobrace)

    Conflict between rule 89 and token DOT resolved as shift (ADD < DOT).
    Conflict between rule 89 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 89 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 89 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 89 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 89 and token MOD resolved as shift (ADD < MOD).
    Conflict between rule 89 and token LSHIFT resolved as reduce (LSHIFT < ADD).
    Conflict between rule 89 and token RSHIFT resolved as reduce (RSHIFT < ADD).
    Conflict between rule 89 and token EQUAL resolved as reduce (EQUAL < ADD).
    Conflict between rule 89 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD).
    Conflict between rule 89 and token GT resolved as shift (ADD < GT).
    Conflict between rule 89 and token GE resolved as shift (ADD < GE).
    Conflict between rule 89 and token LT resolved as shift (ADD < LT).
    Conflict between rule 89 and token LE resolved as shift (ADD < LE).
    Conflict between rule 89 and token BIT_AND resolved as reduce (BIT_AND < ADD).
    Conflict between rule 89 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD).
    Conflict between rule 89 and token BIT_OR resolved as reduce (BIT_OR < ADD).
    Conflict between rule 89 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD).
    Conflict between rule 89 and token EXC_OR resolved as reduce (EXC_OR < ADD).
    Conflict between rule 89 and token AS resolved as shift (ADD < AS).


state 143

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   90                   | expression SUB expression .  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87
    GT   shift, and go to state 92
    GE   shift, and go to state 93
    LT   shift, and go to state 94
    LE   shift, and go to state 95
    AS   shift, and go to state 101

    $default  reduce using rule 90 (expression_nobrace)

    Conflict between rule 90 and token DOT resolved as shift (SUB < DOT).
    Conflict between rule 90 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 90 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 90 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 90 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 90 and token MOD resolved as shift (SUB < MOD).
    Conflict between rule 90 and token LSHIFT resolved as reduce (LSHIFT < SUB).
    Conflict between rule 90 and token RSHIFT resolved as reduce (RSHIFT < SUB).
    Conflict between rule 90 and token EQUAL resolved as reduce (EQUAL < SUB).
    Conflict between rule 90 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB).
    Conflict between rule 90 and token GT resolved as shift (SUB < GT).
    Conflict between rule 90 and token GE resolved as shift (SUB < GE).
    Conflict between rule 90 and token LT resolved as shift (SUB < LT).
    Conflict between rule 90 and token LE resolved as shift (SUB < LE).
    Conflict between rule 90 and token BIT_AND resolved as reduce (BIT_AND < SUB).
    Conflict between rule 90 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB).
    Conflict between rule 90 and token BIT_OR resolved as reduce (BIT_OR < SUB).
    Conflict between rule 90 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB).
    Conflict between rule 90 and token EXC_OR resolved as reduce (EXC_OR < SUB).
    Conflict between rule 90 and token AS resolved as shift (SUB < AS).


state 144

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   91                   | expression MUL expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    GT   shift, and go to state 92
    GE   shift, and go to state 93
    LT   shift, and go to state 94
    LE   shift, and go to state 95
    AS   shift, and go to state 101

    $default  reduce using rule 91 (expression_nobrace)

    Conflict between rule 91 and token DOT resolved as shift (MUL < DOT).
    Conflict between rule 91 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 91 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 91 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 91 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 91 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 91 and token LSHIFT resolved as reduce (LSHIFT < MUL).
    Conflict between rule 91 and token RSHIFT resolved as reduce (RSHIFT < MUL).
    Conflict between rule 91 and token EQUAL resolved as reduce (EQUAL < MUL).
    Conflict between rule 91 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL).
    Conflict between rule 91 and token GT resolved as shift (MUL < GT).
    Conflict between rule 91 and token GE resolved as shift (MUL < GE).
    Conflict between rule 91 and token LT resolved as shift (MUL < LT).
    Conflict between rule 91 and token LE resolved as shift (MUL < LE).
    Conflict between rule 91 and token BIT_AND resolved as reduce (BIT_AND < MUL).
    Conflict between rule 91 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL).
    Conflict between rule 91 and token BIT_OR resolved as reduce (BIT_OR < MUL).
    Conflict between rule 91 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL).
    Conflict between rule 91 and token EXC_OR resolved as reduce (EXC_OR < MUL).
    Conflict between rule 91 and token AS resolved as shift (MUL < AS).


state 145

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   92                   | expression DIV expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    GT   shift, and go to state 92
    GE   shift, and go to state 93
    LT   shift, and go to state 94
    LE   shift, and go to state 95
    AS   shift, and go to state 101

    $default  reduce using rule 92 (expression_nobrace)

    Conflict between rule 92 and token DOT resolved as shift (DIV < DOT).
    Conflict between rule 92 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 92 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 92 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 92 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 92 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 92 and token LSHIFT resolved as reduce (LSHIFT < DIV).
    Conflict between rule 92 and token RSHIFT resolved as reduce (RSHIFT < DIV).
    Conflict between rule 92 and token EQUAL resolved as reduce (EQUAL < DIV).
    Conflict between rule 92 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV).
    Conflict between rule 92 and token GT resolved as shift (DIV < GT).
    Conflict between rule 92 and token GE resolved as shift (DIV < GE).
    Conflict between rule 92 and token LT resolved as shift (DIV < LT).
    Conflict between rule 92 and token LE resolved as shift (DIV < LE).
    Conflict between rule 92 and token BIT_AND resolved as reduce (BIT_AND < DIV).
    Conflict between rule 92 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV).
    Conflict between rule 92 and token BIT_OR resolved as reduce (BIT_OR < DIV).
    Conflict between rule 92 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV).
    Conflict between rule 92 and token EXC_OR resolved as reduce (EXC_OR < DIV).
    Conflict between rule 92 and token AS resolved as shift (DIV < AS).


state 146

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   93                   | expression MOD expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    GT   shift, and go to state 92
    GE   shift, and go to state 93
    LT   shift, and go to state 94
    LE   shift, and go to state 95
    AS   shift, and go to state 101

    $default  reduce using rule 93 (expression_nobrace)

    Conflict between rule 93 and token DOT resolved as shift (MOD < DOT).
    Conflict between rule 93 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 93 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 93 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 93 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 93 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 93 and token LSHIFT resolved as reduce (LSHIFT < MOD).
    Conflict between rule 93 and token RSHIFT resolved as reduce (RSHIFT < MOD).
    Conflict between rule 93 and token EQUAL resolved as reduce (EQUAL < MOD).
    Conflict between rule 93 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD).
    Conflict between rule 93 and token GT resolved as shift (MOD < GT).
    Conflict between rule 93 and token GE resolved as shift (MOD < GE).
    Conflict between rule 93 and token LT resolved as shift (MOD < LT).
    Conflict between rule 93 and token LE resolved as shift (MOD < LE).
    Conflict between rule 93 and token BIT_AND resolved as reduce (BIT_AND < MOD).
    Conflict between rule 93 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD).
    Conflict between rule 93 and token BIT_OR resolved as reduce (BIT_OR < MOD).
    Conflict between rule 93 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD).
    Conflict between rule 93 and token EXC_OR resolved as reduce (EXC_OR < MOD).
    Conflict between rule 93 and token AS resolved as shift (MOD < AS).


state 147

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  116                   | expression LSHIFT expression .  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    ADD  shift, and go to state 83
    SUB  shift, and go to state 84
    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87
    GT   shift, and go to state 92
    GE   shift, and go to state 93
    LT   shift, and go to state 94
    LE   shift, and go to state 95
    AS   shift, and go to state 101

    $default  reduce using rule 116 (expression_nobrace)

    Conflict between rule 116 and token DOT resolved as shift (LSHIFT < DOT).
    Conflict between rule 116 and token ADD resolved as shift (LSHIFT < ADD).
    Conflict between rule 116 and token SUB resolved as shift (LSHIFT < SUB).
    Conflict between rule 116 and token MUL resolved as shift (LSHIFT < MUL).
    Conflict between rule 116 and token DIV resolved as shift (LSHIFT < DIV).
    Conflict between rule 116 and token MOD resolved as shift (LSHIFT < MOD).
    Conflict between rule 116 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 116 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 116 and token EQUAL resolved as reduce (EQUAL < LSHIFT).
    Conflict between rule 116 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT).
    Conflict between rule 116 and token GT resolved as shift (LSHIFT < GT).
    Conflict between rule 116 and token GE resolved as shift (LSHIFT < GE).
    Conflict between rule 116 and token LT resolved as shift (LSHIFT < LT).
    Conflict between rule 116 and token LE resolved as shift (LSHIFT < LE).
    Conflict between rule 116 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT).
    Conflict between rule 116 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT).
    Conflict between rule 116 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT).
    Conflict between rule 116 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT).
    Conflict between rule 116 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT).
    Conflict between rule 116 and token AS resolved as shift (LSHIFT < AS).


state 148

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  117                   | expression RSHIFT expression .  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    ADD  shift, and go to state 83
    SUB  shift, and go to state 84
    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87
    GT   shift, and go to state 92
    GE   shift, and go to state 93
    LT   shift, and go to state 94
    LE   shift, and go to state 95
    AS   shift, and go to state 101

    $default  reduce using rule 117 (expression_nobrace)

    Conflict between rule 117 and token DOT resolved as shift (RSHIFT < DOT).
    Conflict between rule 117 and token ADD resolved as shift (RSHIFT < ADD).
    Conflict between rule 117 and token SUB resolved as shift (RSHIFT < SUB).
    Conflict between rule 117 and token MUL resolved as shift (RSHIFT < MUL).
    Conflict between rule 117 and token DIV resolved as shift (RSHIFT < DIV).
    Conflict between rule 117 and token MOD resolved as shift (RSHIFT < MOD).
    Conflict between rule 117 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 117 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 117 and token EQUAL resolved as reduce (EQUAL < RSHIFT).
    Conflict between rule 117 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT).
    Conflict between rule 117 and token GT resolved as shift (RSHIFT < GT).
    Conflict between rule 117 and token GE resolved as shift (RSHIFT < GE).
    Conflict between rule 117 and token LT resolved as shift (RSHIFT < LT).
    Conflict between rule 117 and token LE resolved as shift (RSHIFT < LE).
    Conflict between rule 117 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT).
    Conflict between rule 117 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT).
    Conflict between rule 117 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT).
    Conflict between rule 117 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT).
    Conflict between rule 117 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT).
    Conflict between rule 117 and token AS resolved as shift (RSHIFT < AS).


state 149

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression  [COMMA, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
   95                   | expression EQUAL expression .  [COMMA, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    AS         shift, and go to state 101

    $default  reduce using rule 95 (expression_nobrace)

    Conflict between rule 95 and token DOT resolved as shift (EQUAL < DOT).
    Conflict between rule 95 and token ADD resolved as shift (EQUAL < ADD).
    Conflict between rule 95 and token SUB resolved as shift (EQUAL < SUB).
    Conflict between rule 95 and token MUL resolved as shift (EQUAL < MUL).
    Conflict between rule 95 and token DIV resolved as shift (EQUAL < DIV).
    Conflict between rule 95 and token MOD resolved as shift (EQUAL < MOD).
    Conflict between rule 95 and token LSHIFT resolved as shift (EQUAL < LSHIFT).
    Conflict between rule 95 and token RSHIFT resolved as shift (EQUAL < RSHIFT).
    Conflict between rule 95 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 95 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 95 and token GT resolved as shift (EQUAL < GT).
    Conflict between rule 95 and token GE resolved as shift (EQUAL < GE).
    Conflict between rule 95 and token LT resolved as shift (EQUAL < LT).
    Conflict between rule 95 and token LE resolved as shift (EQUAL < LE).
    Conflict between rule 95 and token BIT_AND resolved as shift (EQUAL < BIT_AND).
    Conflict between rule 95 and token LOGIC_AND resolved as shift (EQUAL < LOGIC_AND).
    Conflict between rule 95 and token BIT_OR resolved as shift (EQUAL < BIT_OR).
    Conflict between rule 95 and token LOGIC_OR resolved as shift (EQUAL < LOGIC_OR).
    Conflict between rule 95 and token EXC_OR resolved as shift (EQUAL < EXC_OR).
    Conflict between rule 95 and token AS resolved as shift (EQUAL < AS).


state 150

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression  [COMMA, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
   96                   | expression NOTEQUAL expression .  [COMMA, EQUAL, NOTEQUAL, LCB, LRB, RRB, SEMI]
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    AS         shift, and go to state 101

    $default  reduce using rule 96 (expression_nobrace)

    Conflict between rule 96 and token DOT resolved as shift (NOTEQUAL < DOT).
    Conflict between rule 96 and token ADD resolved as shift (NOTEQUAL < ADD).
    Conflict between rule 96 and token SUB resolved as shift (NOTEQUAL < SUB).
    Conflict between rule 96 and token MUL resolved as shift (NOTEQUAL < MUL).
    Conflict between rule 96 and token DIV resolved as shift (NOTEQUAL < DIV).
    Conflict between rule 96 and token MOD resolved as shift (NOTEQUAL < MOD).
    Conflict between rule 96 and token LSHIFT resolved as shift (NOTEQUAL < LSHIFT).
    Conflict between rule 96 and token RSHIFT resolved as shift (NOTEQUAL < RSHIFT).
    Conflict between rule 96 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 96 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 96 and token GT resolved as shift (NOTEQUAL < GT).
    Conflict between rule 96 and token GE resolved as shift (NOTEQUAL < GE).
    Conflict between rule 96 and token LT resolved as shift (NOTEQUAL < LT).
    Conflict between rule 96 and token LE resolved as shift (NOTEQUAL < LE).
    Conflict between rule 96 and token BIT_AND resolved as shift (NOTEQUAL < BIT_AND).
    Conflict between rule 96 and token LOGIC_AND resolved as shift (NOTEQUAL < LOGIC_AND).
    Conflict between rule 96 and token BIT_OR resolved as shift (NOTEQUAL < BIT_OR).
    Conflict between rule 96 and token LOGIC_OR resolved as shift (NOTEQUAL < LOGIC_OR).
    Conflict between rule 96 and token EXC_OR resolved as shift (NOTEQUAL < EXC_OR).
    Conflict between rule 96 and token AS resolved as shift (NOTEQUAL < AS).


state 151

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  112                   | expression GT expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    AS   shift, and go to state 101

    $default  reduce using rule 112 (expression_nobrace)

    Conflict between rule 112 and token DOT resolved as shift (GT < DOT).
    Conflict between rule 112 and token ADD resolved as reduce (ADD < GT).
    Conflict between rule 112 and token SUB resolved as reduce (SUB < GT).
    Conflict between rule 112 and token MUL resolved as reduce (MUL < GT).
    Conflict between rule 112 and token DIV resolved as reduce (DIV < GT).
    Conflict between rule 112 and token MOD resolved as reduce (MOD < GT).
    Conflict between rule 112 and token LSHIFT resolved as reduce (LSHIFT < GT).
    Conflict between rule 112 and token RSHIFT resolved as reduce (RSHIFT < GT).
    Conflict between rule 112 and token EQUAL resolved as reduce (EQUAL < GT).
    Conflict between rule 112 and token NOTEQUAL resolved as reduce (NOTEQUAL < GT).
    Conflict between rule 112 and token GT resolved as reduce (%left GT).
    Conflict between rule 112 and token GE resolved as reduce (%left GE).
    Conflict between rule 112 and token LT resolved as reduce (%left LT).
    Conflict between rule 112 and token LE resolved as reduce (%left LE).
    Conflict between rule 112 and token BIT_AND resolved as reduce (BIT_AND < GT).
    Conflict between rule 112 and token LOGIC_AND resolved as reduce (LOGIC_AND < GT).
    Conflict between rule 112 and token BIT_OR resolved as reduce (BIT_OR < GT).
    Conflict between rule 112 and token LOGIC_OR resolved as reduce (LOGIC_OR < GT).
    Conflict between rule 112 and token EXC_OR resolved as reduce (EXC_OR < GT).
    Conflict between rule 112 and token AS resolved as shift (GT < AS).


state 152

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  113                   | expression GE expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    AS   shift, and go to state 101

    $default  reduce using rule 113 (expression_nobrace)

    Conflict between rule 113 and token DOT resolved as shift (GE < DOT).
    Conflict between rule 113 and token ADD resolved as reduce (ADD < GE).
    Conflict between rule 113 and token SUB resolved as reduce (SUB < GE).
    Conflict between rule 113 and token MUL resolved as reduce (MUL < GE).
    Conflict between rule 113 and token DIV resolved as reduce (DIV < GE).
    Conflict between rule 113 and token MOD resolved as reduce (MOD < GE).
    Conflict between rule 113 and token LSHIFT resolved as reduce (LSHIFT < GE).
    Conflict between rule 113 and token RSHIFT resolved as reduce (RSHIFT < GE).
    Conflict between rule 113 and token EQUAL resolved as reduce (EQUAL < GE).
    Conflict between rule 113 and token NOTEQUAL resolved as reduce (NOTEQUAL < GE).
    Conflict between rule 113 and token GT resolved as reduce (%left GT).
    Conflict between rule 113 and token GE resolved as reduce (%left GE).
    Conflict between rule 113 and token LT resolved as reduce (%left LT).
    Conflict between rule 113 and token LE resolved as reduce (%left LE).
    Conflict between rule 113 and token BIT_AND resolved as reduce (BIT_AND < GE).
    Conflict between rule 113 and token LOGIC_AND resolved as reduce (LOGIC_AND < GE).
    Conflict between rule 113 and token BIT_OR resolved as reduce (BIT_OR < GE).
    Conflict between rule 113 and token LOGIC_OR resolved as reduce (LOGIC_OR < GE).
    Conflict between rule 113 and token EXC_OR resolved as reduce (EXC_OR < GE).
    Conflict between rule 113 and token AS resolved as shift (GE < AS).


state 153

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  114                   | expression LT expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    AS   shift, and go to state 101

    $default  reduce using rule 114 (expression_nobrace)

    Conflict between rule 114 and token DOT resolved as shift (LT < DOT).
    Conflict between rule 114 and token ADD resolved as reduce (ADD < LT).
    Conflict between rule 114 and token SUB resolved as reduce (SUB < LT).
    Conflict between rule 114 and token MUL resolved as reduce (MUL < LT).
    Conflict between rule 114 and token DIV resolved as reduce (DIV < LT).
    Conflict between rule 114 and token MOD resolved as reduce (MOD < LT).
    Conflict between rule 114 and token LSHIFT resolved as reduce (LSHIFT < LT).
    Conflict between rule 114 and token RSHIFT resolved as reduce (RSHIFT < LT).
    Conflict between rule 114 and token EQUAL resolved as reduce (EQUAL < LT).
    Conflict between rule 114 and token NOTEQUAL resolved as reduce (NOTEQUAL < LT).
    Conflict between rule 114 and token GT resolved as reduce (%left GT).
    Conflict between rule 114 and token GE resolved as reduce (%left GE).
    Conflict between rule 114 and token LT resolved as reduce (%left LT).
    Conflict between rule 114 and token LE resolved as reduce (%left LE).
    Conflict between rule 114 and token BIT_AND resolved as reduce (BIT_AND < LT).
    Conflict between rule 114 and token LOGIC_AND resolved as reduce (LOGIC_AND < LT).
    Conflict between rule 114 and token BIT_OR resolved as reduce (BIT_OR < LT).
    Conflict between rule 114 and token LOGIC_OR resolved as reduce (LOGIC_OR < LT).
    Conflict between rule 114 and token EXC_OR resolved as reduce (EXC_OR < LT).
    Conflict between rule 114 and token AS resolved as shift (LT < AS).


state 154

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  115                   | expression LE expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT  shift, and go to state 82
    AS   shift, and go to state 101

    $default  reduce using rule 115 (expression_nobrace)

    Conflict between rule 115 and token DOT resolved as shift (LE < DOT).
    Conflict between rule 115 and token ADD resolved as reduce (ADD < LE).
    Conflict between rule 115 and token SUB resolved as reduce (SUB < LE).
    Conflict between rule 115 and token MUL resolved as reduce (MUL < LE).
    Conflict between rule 115 and token DIV resolved as reduce (DIV < LE).
    Conflict between rule 115 and token MOD resolved as reduce (MOD < LE).
    Conflict between rule 115 and token LSHIFT resolved as reduce (LSHIFT < LE).
    Conflict between rule 115 and token RSHIFT resolved as reduce (RSHIFT < LE).
    Conflict between rule 115 and token EQUAL resolved as reduce (EQUAL < LE).
    Conflict between rule 115 and token NOTEQUAL resolved as reduce (NOTEQUAL < LE).
    Conflict between rule 115 and token GT resolved as reduce (%left GT).
    Conflict between rule 115 and token GE resolved as reduce (%left GE).
    Conflict between rule 115 and token LT resolved as reduce (%left LT).
    Conflict between rule 115 and token LE resolved as reduce (%left LE).
    Conflict between rule 115 and token BIT_AND resolved as reduce (BIT_AND < LE).
    Conflict between rule 115 and token LOGIC_AND resolved as reduce (LOGIC_AND < LE).
    Conflict between rule 115 and token BIT_OR resolved as reduce (BIT_OR < LE).
    Conflict between rule 115 and token LOGIC_OR resolved as reduce (LOGIC_OR < LE).
    Conflict between rule 115 and token EXC_OR resolved as reduce (EXC_OR < LE).
    Conflict between rule 115 and token AS resolved as shift (LE < AS).


state 155

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression  [COMMA, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
   97                   | expression BIT_AND expression .  [COMMA, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT     shift, and go to state 82
    ADD     shift, and go to state 83
    SUB     shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LSHIFT  shift, and go to state 88
    RSHIFT  shift, and go to state 89
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    LT      shift, and go to state 94
    LE      shift, and go to state 95
    BIT_OR  shift, and go to state 98
    EXC_OR  shift, and go to state 100
    AS      shift, and go to state 101

    $default  reduce using rule 97 (expression_nobrace)

    Conflict between rule 97 and token DOT resolved as shift (BIT_AND < DOT).
    Conflict between rule 97 and token ADD resolved as shift (BIT_AND < ADD).
    Conflict between rule 97 and token SUB resolved as shift (BIT_AND < SUB).
    Conflict between rule 97 and token MUL resolved as shift (BIT_AND < MUL).
    Conflict between rule 97 and token DIV resolved as shift (BIT_AND < DIV).
    Conflict between rule 97 and token MOD resolved as shift (BIT_AND < MOD).
    Conflict between rule 97 and token LSHIFT resolved as shift (BIT_AND < LSHIFT).
    Conflict between rule 97 and token RSHIFT resolved as shift (BIT_AND < RSHIFT).
    Conflict between rule 97 and token EQUAL resolved as reduce (EQUAL < BIT_AND).
    Conflict between rule 97 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_AND).
    Conflict between rule 97 and token GT resolved as shift (BIT_AND < GT).
    Conflict between rule 97 and token GE resolved as shift (BIT_AND < GE).
    Conflict between rule 97 and token LT resolved as shift (BIT_AND < LT).
    Conflict between rule 97 and token LE resolved as shift (BIT_AND < LE).
    Conflict between rule 97 and token BIT_AND resolved as reduce (%left BIT_AND).
    Conflict between rule 97 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_AND).
    Conflict between rule 97 and token BIT_OR resolved as shift (BIT_AND < BIT_OR).
    Conflict between rule 97 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_AND).
    Conflict between rule 97 and token EXC_OR resolved as shift (BIT_AND < EXC_OR).
    Conflict between rule 97 and token AS resolved as shift (BIT_AND < AS).


state 156

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression  [COMMA, EQUAL, NOTEQUAL, LOGIC_AND, LCB, LRB, RRB, SEMI]
  100                   | expression LOGIC_AND expression .  [COMMA, EQUAL, NOTEQUAL, LOGIC_AND, LCB, LRB, RRB, SEMI]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT       shift, and go to state 82
    ADD       shift, and go to state 83
    SUB       shift, and go to state 84
    MUL       shift, and go to state 85
    DIV       shift, and go to state 86
    MOD       shift, and go to state 87
    LSHIFT    shift, and go to state 88
    RSHIFT    shift, and go to state 89
    GT        shift, and go to state 92
    GE        shift, and go to state 93
    LT        shift, and go to state 94
    LE        shift, and go to state 95
    BIT_AND   shift, and go to state 96
    BIT_OR    shift, and go to state 98
    LOGIC_OR  shift, and go to state 99
    EXC_OR    shift, and go to state 100
    AS        shift, and go to state 101

    $default  reduce using rule 100 (expression_nobrace)

    Conflict between rule 100 and token DOT resolved as shift (LOGIC_AND < DOT).
    Conflict between rule 100 and token ADD resolved as shift (LOGIC_AND < ADD).
    Conflict between rule 100 and token SUB resolved as shift (LOGIC_AND < SUB).
    Conflict between rule 100 and token MUL resolved as shift (LOGIC_AND < MUL).
    Conflict between rule 100 and token DIV resolved as shift (LOGIC_AND < DIV).
    Conflict between rule 100 and token MOD resolved as shift (LOGIC_AND < MOD).
    Conflict between rule 100 and token LSHIFT resolved as shift (LOGIC_AND < LSHIFT).
    Conflict between rule 100 and token RSHIFT resolved as shift (LOGIC_AND < RSHIFT).
    Conflict between rule 100 and token EQUAL resolved as reduce (EQUAL < LOGIC_AND).
    Conflict between rule 100 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_AND).
    Conflict between rule 100 and token GT resolved as shift (LOGIC_AND < GT).
    Conflict between rule 100 and token GE resolved as shift (LOGIC_AND < GE).
    Conflict between rule 100 and token LT resolved as shift (LOGIC_AND < LT).
    Conflict between rule 100 and token LE resolved as shift (LOGIC_AND < LE).
    Conflict between rule 100 and token BIT_AND resolved as shift (LOGIC_AND < BIT_AND).
    Conflict between rule 100 and token LOGIC_AND resolved as reduce (%left LOGIC_AND).
    Conflict between rule 100 and token BIT_OR resolved as shift (LOGIC_AND < BIT_OR).
    Conflict between rule 100 and token LOGIC_OR resolved as shift (LOGIC_AND < LOGIC_OR).
    Conflict between rule 100 and token EXC_OR resolved as shift (LOGIC_AND < EXC_OR).
    Conflict between rule 100 and token AS resolved as shift (LOGIC_AND < AS).


state 157

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression  [COMMA, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, LCB, LRB, RRB, SEMI]
   94                   | expression BIT_OR expression .  [COMMA, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, LCB, LRB, RRB, SEMI]
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT     shift, and go to state 82
    ADD     shift, and go to state 83
    SUB     shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LSHIFT  shift, and go to state 88
    RSHIFT  shift, and go to state 89
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    LT      shift, and go to state 94
    LE      shift, and go to state 95
    EXC_OR  shift, and go to state 100
    AS      shift, and go to state 101

    $default  reduce using rule 94 (expression_nobrace)

    Conflict between rule 94 and token DOT resolved as shift (BIT_OR < DOT).
    Conflict between rule 94 and token ADD resolved as shift (BIT_OR < ADD).
    Conflict between rule 94 and token SUB resolved as shift (BIT_OR < SUB).
    Conflict between rule 94 and token MUL resolved as shift (BIT_OR < MUL).
    Conflict between rule 94 and token DIV resolved as shift (BIT_OR < DIV).
    Conflict between rule 94 and token MOD resolved as shift (BIT_OR < MOD).
    Conflict between rule 94 and token LSHIFT resolved as shift (BIT_OR < LSHIFT).
    Conflict between rule 94 and token RSHIFT resolved as shift (BIT_OR < RSHIFT).
    Conflict between rule 94 and token EQUAL resolved as reduce (EQUAL < BIT_OR).
    Conflict between rule 94 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_OR).
    Conflict between rule 94 and token GT resolved as shift (BIT_OR < GT).
    Conflict between rule 94 and token GE resolved as shift (BIT_OR < GE).
    Conflict between rule 94 and token LT resolved as shift (BIT_OR < LT).
    Conflict between rule 94 and token LE resolved as shift (BIT_OR < LE).
    Conflict between rule 94 and token BIT_AND resolved as reduce (BIT_AND < BIT_OR).
    Conflict between rule 94 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_OR).
    Conflict between rule 94 and token BIT_OR resolved as reduce (%left BIT_OR).
    Conflict between rule 94 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_OR).
    Conflict between rule 94 and token EXC_OR resolved as shift (BIT_OR < EXC_OR).
    Conflict between rule 94 and token AS resolved as shift (BIT_OR < AS).


state 158

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression  [COMMA, EQUAL, NOTEQUAL, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
   99                   | expression LOGIC_OR expression .  [COMMA, EQUAL, NOTEQUAL, LOGIC_AND, LOGIC_OR, LCB, LRB, RRB, SEMI]
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT      shift, and go to state 82
    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    MUL      shift, and go to state 85
    DIV      shift, and go to state 86
    MOD      shift, and go to state 87
    LSHIFT   shift, and go to state 88
    RSHIFT   shift, and go to state 89
    GT       shift, and go to state 92
    GE       shift, and go to state 93
    LT       shift, and go to state 94
    LE       shift, and go to state 95
    BIT_AND  shift, and go to state 96
    BIT_OR   shift, and go to state 98
    EXC_OR   shift, and go to state 100
    AS       shift, and go to state 101

    $default  reduce using rule 99 (expression_nobrace)

    Conflict between rule 99 and token DOT resolved as shift (LOGIC_OR < DOT).
    Conflict between rule 99 and token ADD resolved as shift (LOGIC_OR < ADD).
    Conflict between rule 99 and token SUB resolved as shift (LOGIC_OR < SUB).
    Conflict between rule 99 and token MUL resolved as shift (LOGIC_OR < MUL).
    Conflict between rule 99 and token DIV resolved as shift (LOGIC_OR < DIV).
    Conflict between rule 99 and token MOD resolved as shift (LOGIC_OR < MOD).
    Conflict between rule 99 and token LSHIFT resolved as shift (LOGIC_OR < LSHIFT).
    Conflict between rule 99 and token RSHIFT resolved as shift (LOGIC_OR < RSHIFT).
    Conflict between rule 99 and token EQUAL resolved as reduce (EQUAL < LOGIC_OR).
    Conflict between rule 99 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_OR).
    Conflict between rule 99 and token GT resolved as shift (LOGIC_OR < GT).
    Conflict between rule 99 and token GE resolved as shift (LOGIC_OR < GE).
    Conflict between rule 99 and token LT resolved as shift (LOGIC_OR < LT).
    Conflict between rule 99 and token LE resolved as shift (LOGIC_OR < LE).
    Conflict between rule 99 and token BIT_AND resolved as shift (LOGIC_OR < BIT_AND).
    Conflict between rule 99 and token LOGIC_AND resolved as reduce (LOGIC_AND < LOGIC_OR).
    Conflict between rule 99 and token BIT_OR resolved as shift (LOGIC_OR < BIT_OR).
    Conflict between rule 99 and token LOGIC_OR resolved as reduce (%left LOGIC_OR).
    Conflict between rule 99 and token EXC_OR resolved as shift (LOGIC_OR < EXC_OR).
    Conflict between rule 99 and token AS resolved as shift (LOGIC_OR < AS).


state 159

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression  [COMMA, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   98                   | expression EXC_OR expression .  [COMMA, EQUAL, NOTEQUAL, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI]
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT     shift, and go to state 82
    ADD     shift, and go to state 83
    SUB     shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    LSHIFT  shift, and go to state 88
    RSHIFT  shift, and go to state 89
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    LT      shift, and go to state 94
    LE      shift, and go to state 95
    AS      shift, and go to state 101

    $default  reduce using rule 98 (expression_nobrace)

    Conflict between rule 98 and token DOT resolved as shift (EXC_OR < DOT).
    Conflict between rule 98 and token ADD resolved as shift (EXC_OR < ADD).
    Conflict between rule 98 and token SUB resolved as shift (EXC_OR < SUB).
    Conflict between rule 98 and token MUL resolved as shift (EXC_OR < MUL).
    Conflict between rule 98 and token DIV resolved as shift (EXC_OR < DIV).
    Conflict between rule 98 and token MOD resolved as shift (EXC_OR < MOD).
    Conflict between rule 98 and token LSHIFT resolved as shift (EXC_OR < LSHIFT).
    Conflict between rule 98 and token RSHIFT resolved as shift (EXC_OR < RSHIFT).
    Conflict between rule 98 and token EQUAL resolved as reduce (EQUAL < EXC_OR).
    Conflict between rule 98 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR).
    Conflict between rule 98 and token GT resolved as shift (EXC_OR < GT).
    Conflict between rule 98 and token GE resolved as shift (EXC_OR < GE).
    Conflict between rule 98 and token LT resolved as shift (EXC_OR < LT).
    Conflict between rule 98 and token LE resolved as shift (EXC_OR < LE).
    Conflict between rule 98 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR).
    Conflict between rule 98 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR).
    Conflict between rule 98 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR).
    Conflict between rule 98 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR).
    Conflict between rule 98 and token EXC_OR resolved as reduce (%left EXC_OR).
    Conflict between rule 98 and token AS resolved as shift (EXC_OR < AS).


state 160

  118 expression_nobrace: expression AS typename_T .

    $default  reduce using rule 118 (expression_nobrace)


state 161

  122 expression_nobrace: expression_nobrace LRB RRB .

    $default  reduce using rule 122 (expression_nobrace)


state 162

   76 argument_list: argument_list . COMMA expression
  121 expression_nobrace: expression_nobrace LRB argument_list . RRB

    COMMA  shift, and go to state 201
    RRB    shift, and go to state 202


state 163

   75 argument_list: expression .  [COMMA, RRB]
   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    AS         shift, and go to state 101

    $default  reduce using rule 75 (argument_list)


state 164

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  101                   | lhs ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 101 (expression_nobrace)

    Conflict between rule 101 and token DOT resolved as reduce (DOT < ASSIGN).
    Conflict between rule 101 and token ADD resolved as reduce (ADD < ASSIGN).
    Conflict between rule 101 and token SUB resolved as reduce (SUB < ASSIGN).
    Conflict between rule 101 and token MUL resolved as reduce (MUL < ASSIGN).
    Conflict between rule 101 and token DIV resolved as reduce (DIV < ASSIGN).
    Conflict between rule 101 and token MOD resolved as reduce (MOD < ASSIGN).
    Conflict between rule 101 and token LSHIFT resolved as reduce (LSHIFT < ASSIGN).
    Conflict between rule 101 and token RSHIFT resolved as reduce (RSHIFT < ASSIGN).
    Conflict between rule 101 and token EQUAL resolved as reduce (EQUAL < ASSIGN).
    Conflict between rule 101 and token NOTEQUAL resolved as reduce (NOTEQUAL < ASSIGN).
    Conflict between rule 101 and token GT resolved as reduce (GT < ASSIGN).
    Conflict between rule 101 and token GE resolved as reduce (GE < ASSIGN).
    Conflict between rule 101 and token LT resolved as reduce (LT < ASSIGN).
    Conflict between rule 101 and token LE resolved as reduce (LE < ASSIGN).
    Conflict between rule 101 and token BIT_AND resolved as reduce (BIT_AND < ASSIGN).
    Conflict between rule 101 and token LOGIC_AND resolved as reduce (LOGIC_AND < ASSIGN).
    Conflict between rule 101 and token BIT_OR resolved as reduce (BIT_OR < ASSIGN).
    Conflict between rule 101 and token LOGIC_OR resolved as reduce (LOGIC_OR < ASSIGN).
    Conflict between rule 101 and token EXC_OR resolved as reduce (EXC_OR < ASSIGN).
    Conflict between rule 101 and token AS resolved as reduce (AS < ASSIGN).


state 165

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  102                   | lhs ADD_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 102 (expression_nobrace)

    Conflict between rule 102 and token DOT resolved as reduce (DOT < ADD_ASSIGN).
    Conflict between rule 102 and token ADD resolved as reduce (ADD < ADD_ASSIGN).
    Conflict between rule 102 and token SUB resolved as reduce (SUB < ADD_ASSIGN).
    Conflict between rule 102 and token MUL resolved as reduce (MUL < ADD_ASSIGN).
    Conflict between rule 102 and token DIV resolved as reduce (DIV < ADD_ASSIGN).
    Conflict between rule 102 and token MOD resolved as reduce (MOD < ADD_ASSIGN).
    Conflict between rule 102 and token LSHIFT resolved as reduce (LSHIFT < ADD_ASSIGN).
    Conflict between rule 102 and token RSHIFT resolved as reduce (RSHIFT < ADD_ASSIGN).
    Conflict between rule 102 and token EQUAL resolved as reduce (EQUAL < ADD_ASSIGN).
    Conflict between rule 102 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 102 and token GT resolved as reduce (GT < ADD_ASSIGN).
    Conflict between rule 102 and token GE resolved as reduce (GE < ADD_ASSIGN).
    Conflict between rule 102 and token LT resolved as reduce (LT < ADD_ASSIGN).
    Conflict between rule 102 and token LE resolved as reduce (LE < ADD_ASSIGN).
    Conflict between rule 102 and token BIT_AND resolved as reduce (BIT_AND < ADD_ASSIGN).
    Conflict between rule 102 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 102 and token BIT_OR resolved as reduce (BIT_OR < ADD_ASSIGN).
    Conflict between rule 102 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 102 and token EXC_OR resolved as reduce (EXC_OR < ADD_ASSIGN).
    Conflict between rule 102 and token AS resolved as reduce (AS < ADD_ASSIGN).


state 166

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  103                   | lhs SUB_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 103 (expression_nobrace)

    Conflict between rule 103 and token DOT resolved as reduce (DOT < SUB_ASSIGN).
    Conflict between rule 103 and token ADD resolved as reduce (ADD < SUB_ASSIGN).
    Conflict between rule 103 and token SUB resolved as reduce (SUB < SUB_ASSIGN).
    Conflict between rule 103 and token MUL resolved as reduce (MUL < SUB_ASSIGN).
    Conflict between rule 103 and token DIV resolved as reduce (DIV < SUB_ASSIGN).
    Conflict between rule 103 and token MOD resolved as reduce (MOD < SUB_ASSIGN).
    Conflict between rule 103 and token LSHIFT resolved as reduce (LSHIFT < SUB_ASSIGN).
    Conflict between rule 103 and token RSHIFT resolved as reduce (RSHIFT < SUB_ASSIGN).
    Conflict between rule 103 and token EQUAL resolved as reduce (EQUAL < SUB_ASSIGN).
    Conflict between rule 103 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 103 and token GT resolved as reduce (GT < SUB_ASSIGN).
    Conflict between rule 103 and token GE resolved as reduce (GE < SUB_ASSIGN).
    Conflict between rule 103 and token LT resolved as reduce (LT < SUB_ASSIGN).
    Conflict between rule 103 and token LE resolved as reduce (LE < SUB_ASSIGN).
    Conflict between rule 103 and token BIT_AND resolved as reduce (BIT_AND < SUB_ASSIGN).
    Conflict between rule 103 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 103 and token BIT_OR resolved as reduce (BIT_OR < SUB_ASSIGN).
    Conflict between rule 103 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 103 and token EXC_OR resolved as reduce (EXC_OR < SUB_ASSIGN).
    Conflict between rule 103 and token AS resolved as reduce (AS < SUB_ASSIGN).


state 167

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  104                   | lhs MUL_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 104 (expression_nobrace)

    Conflict between rule 104 and token DOT resolved as reduce (DOT < MUL_ASSIGN).
    Conflict between rule 104 and token ADD resolved as reduce (ADD < MUL_ASSIGN).
    Conflict between rule 104 and token SUB resolved as reduce (SUB < MUL_ASSIGN).
    Conflict between rule 104 and token MUL resolved as reduce (MUL < MUL_ASSIGN).
    Conflict between rule 104 and token DIV resolved as reduce (DIV < MUL_ASSIGN).
    Conflict between rule 104 and token MOD resolved as reduce (MOD < MUL_ASSIGN).
    Conflict between rule 104 and token LSHIFT resolved as reduce (LSHIFT < MUL_ASSIGN).
    Conflict between rule 104 and token RSHIFT resolved as reduce (RSHIFT < MUL_ASSIGN).
    Conflict between rule 104 and token EQUAL resolved as reduce (EQUAL < MUL_ASSIGN).
    Conflict between rule 104 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 104 and token GT resolved as reduce (GT < MUL_ASSIGN).
    Conflict between rule 104 and token GE resolved as reduce (GE < MUL_ASSIGN).
    Conflict between rule 104 and token LT resolved as reduce (LT < MUL_ASSIGN).
    Conflict between rule 104 and token LE resolved as reduce (LE < MUL_ASSIGN).
    Conflict between rule 104 and token BIT_AND resolved as reduce (BIT_AND < MUL_ASSIGN).
    Conflict between rule 104 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 104 and token BIT_OR resolved as reduce (BIT_OR < MUL_ASSIGN).
    Conflict between rule 104 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 104 and token EXC_OR resolved as reduce (EXC_OR < MUL_ASSIGN).
    Conflict between rule 104 and token AS resolved as reduce (AS < MUL_ASSIGN).


state 168

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  105                   | lhs DIV_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 105 (expression_nobrace)

    Conflict between rule 105 and token DOT resolved as reduce (DOT < DIV_ASSIGN).
    Conflict between rule 105 and token ADD resolved as reduce (ADD < DIV_ASSIGN).
    Conflict between rule 105 and token SUB resolved as reduce (SUB < DIV_ASSIGN).
    Conflict between rule 105 and token MUL resolved as reduce (MUL < DIV_ASSIGN).
    Conflict between rule 105 and token DIV resolved as reduce (DIV < DIV_ASSIGN).
    Conflict between rule 105 and token MOD resolved as reduce (MOD < DIV_ASSIGN).
    Conflict between rule 105 and token LSHIFT resolved as reduce (LSHIFT < DIV_ASSIGN).
    Conflict between rule 105 and token RSHIFT resolved as reduce (RSHIFT < DIV_ASSIGN).
    Conflict between rule 105 and token EQUAL resolved as reduce (EQUAL < DIV_ASSIGN).
    Conflict between rule 105 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 105 and token GT resolved as reduce (GT < DIV_ASSIGN).
    Conflict between rule 105 and token GE resolved as reduce (GE < DIV_ASSIGN).
    Conflict between rule 105 and token LT resolved as reduce (LT < DIV_ASSIGN).
    Conflict between rule 105 and token LE resolved as reduce (LE < DIV_ASSIGN).
    Conflict between rule 105 and token BIT_AND resolved as reduce (BIT_AND < DIV_ASSIGN).
    Conflict between rule 105 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 105 and token BIT_OR resolved as reduce (BIT_OR < DIV_ASSIGN).
    Conflict between rule 105 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 105 and token EXC_OR resolved as reduce (EXC_OR < DIV_ASSIGN).
    Conflict between rule 105 and token AS resolved as reduce (AS < DIV_ASSIGN).


state 169

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  106                   | lhs MOD_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 106 (expression_nobrace)

    Conflict between rule 106 and token DOT resolved as reduce (DOT < MOD_ASSIGN).
    Conflict between rule 106 and token ADD resolved as reduce (ADD < MOD_ASSIGN).
    Conflict between rule 106 and token SUB resolved as reduce (SUB < MOD_ASSIGN).
    Conflict between rule 106 and token MUL resolved as reduce (MUL < MOD_ASSIGN).
    Conflict between rule 106 and token DIV resolved as reduce (DIV < MOD_ASSIGN).
    Conflict between rule 106 and token MOD resolved as reduce (MOD < MOD_ASSIGN).
    Conflict between rule 106 and token LSHIFT resolved as reduce (LSHIFT < MOD_ASSIGN).
    Conflict between rule 106 and token RSHIFT resolved as reduce (RSHIFT < MOD_ASSIGN).
    Conflict between rule 106 and token EQUAL resolved as reduce (EQUAL < MOD_ASSIGN).
    Conflict between rule 106 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 106 and token GT resolved as reduce (GT < MOD_ASSIGN).
    Conflict between rule 106 and token GE resolved as reduce (GE < MOD_ASSIGN).
    Conflict between rule 106 and token LT resolved as reduce (LT < MOD_ASSIGN).
    Conflict between rule 106 and token LE resolved as reduce (LE < MOD_ASSIGN).
    Conflict between rule 106 and token BIT_AND resolved as reduce (BIT_AND < MOD_ASSIGN).
    Conflict between rule 106 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 106 and token BIT_OR resolved as reduce (BIT_OR < MOD_ASSIGN).
    Conflict between rule 106 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 106 and token EXC_OR resolved as reduce (EXC_OR < MOD_ASSIGN).
    Conflict between rule 106 and token AS resolved as reduce (AS < MOD_ASSIGN).


state 170

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  107                   | lhs AND_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 107 (expression_nobrace)

    Conflict between rule 107 and token DOT resolved as reduce (DOT < AND_ASSIGN).
    Conflict between rule 107 and token ADD resolved as reduce (ADD < AND_ASSIGN).
    Conflict between rule 107 and token SUB resolved as reduce (SUB < AND_ASSIGN).
    Conflict between rule 107 and token MUL resolved as reduce (MUL < AND_ASSIGN).
    Conflict between rule 107 and token DIV resolved as reduce (DIV < AND_ASSIGN).
    Conflict between rule 107 and token MOD resolved as reduce (MOD < AND_ASSIGN).
    Conflict between rule 107 and token LSHIFT resolved as reduce (LSHIFT < AND_ASSIGN).
    Conflict between rule 107 and token RSHIFT resolved as reduce (RSHIFT < AND_ASSIGN).
    Conflict between rule 107 and token EQUAL resolved as reduce (EQUAL < AND_ASSIGN).
    Conflict between rule 107 and token NOTEQUAL resolved as reduce (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 107 and token GT resolved as reduce (GT < AND_ASSIGN).
    Conflict between rule 107 and token GE resolved as reduce (GE < AND_ASSIGN).
    Conflict between rule 107 and token LT resolved as reduce (LT < AND_ASSIGN).
    Conflict between rule 107 and token LE resolved as reduce (LE < AND_ASSIGN).
    Conflict between rule 107 and token BIT_AND resolved as reduce (BIT_AND < AND_ASSIGN).
    Conflict between rule 107 and token LOGIC_AND resolved as reduce (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 107 and token BIT_OR resolved as reduce (BIT_OR < AND_ASSIGN).
    Conflict between rule 107 and token LOGIC_OR resolved as reduce (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 107 and token EXC_OR resolved as reduce (EXC_OR < AND_ASSIGN).
    Conflict between rule 107 and token AS resolved as reduce (AS < AND_ASSIGN).


state 171

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  108                   | lhs OR_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 108 (expression_nobrace)

    Conflict between rule 108 and token DOT resolved as reduce (DOT < OR_ASSIGN).
    Conflict between rule 108 and token ADD resolved as reduce (ADD < OR_ASSIGN).
    Conflict between rule 108 and token SUB resolved as reduce (SUB < OR_ASSIGN).
    Conflict between rule 108 and token MUL resolved as reduce (MUL < OR_ASSIGN).
    Conflict between rule 108 and token DIV resolved as reduce (DIV < OR_ASSIGN).
    Conflict between rule 108 and token MOD resolved as reduce (MOD < OR_ASSIGN).
    Conflict between rule 108 and token LSHIFT resolved as reduce (LSHIFT < OR_ASSIGN).
    Conflict between rule 108 and token RSHIFT resolved as reduce (RSHIFT < OR_ASSIGN).
    Conflict between rule 108 and token EQUAL resolved as reduce (EQUAL < OR_ASSIGN).
    Conflict between rule 108 and token NOTEQUAL resolved as reduce (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 108 and token GT resolved as reduce (GT < OR_ASSIGN).
    Conflict between rule 108 and token GE resolved as reduce (GE < OR_ASSIGN).
    Conflict between rule 108 and token LT resolved as reduce (LT < OR_ASSIGN).
    Conflict between rule 108 and token LE resolved as reduce (LE < OR_ASSIGN).
    Conflict between rule 108 and token BIT_AND resolved as reduce (BIT_AND < OR_ASSIGN).
    Conflict between rule 108 and token LOGIC_AND resolved as reduce (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 108 and token BIT_OR resolved as reduce (BIT_OR < OR_ASSIGN).
    Conflict between rule 108 and token LOGIC_OR resolved as reduce (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 108 and token EXC_OR resolved as reduce (EXC_OR < OR_ASSIGN).
    Conflict between rule 108 and token AS resolved as reduce (AS < OR_ASSIGN).


state 172

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  110                   | lhs LSHIFT_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 110 (expression_nobrace)

    Conflict between rule 110 and token DOT resolved as reduce (DOT < LSHIFT_ASSIGN).
    Conflict between rule 110 and token ADD resolved as reduce (ADD < LSHIFT_ASSIGN).
    Conflict between rule 110 and token SUB resolved as reduce (SUB < LSHIFT_ASSIGN).
    Conflict between rule 110 and token MUL resolved as reduce (MUL < LSHIFT_ASSIGN).
    Conflict between rule 110 and token DIV resolved as reduce (DIV < LSHIFT_ASSIGN).
    Conflict between rule 110 and token MOD resolved as reduce (MOD < LSHIFT_ASSIGN).
    Conflict between rule 110 and token LSHIFT resolved as reduce (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 110 and token RSHIFT resolved as reduce (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 110 and token EQUAL resolved as reduce (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 110 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 110 and token GT resolved as reduce (GT < LSHIFT_ASSIGN).
    Conflict between rule 110 and token GE resolved as reduce (GE < LSHIFT_ASSIGN).
    Conflict between rule 110 and token LT resolved as reduce (LT < LSHIFT_ASSIGN).
    Conflict between rule 110 and token LE resolved as reduce (LE < LSHIFT_ASSIGN).
    Conflict between rule 110 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 110 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 110 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 110 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 110 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT_ASSIGN).
    Conflict between rule 110 and token AS resolved as reduce (AS < LSHIFT_ASSIGN).


state 173

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  111                   | lhs RSHIFT_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 111 (expression_nobrace)

    Conflict between rule 111 and token DOT resolved as reduce (DOT < RSHIFT_ASSIGN).
    Conflict between rule 111 and token ADD resolved as reduce (ADD < RSHIFT_ASSIGN).
    Conflict between rule 111 and token SUB resolved as reduce (SUB < RSHIFT_ASSIGN).
    Conflict between rule 111 and token MUL resolved as reduce (MUL < RSHIFT_ASSIGN).
    Conflict between rule 111 and token DIV resolved as reduce (DIV < RSHIFT_ASSIGN).
    Conflict between rule 111 and token MOD resolved as reduce (MOD < RSHIFT_ASSIGN).
    Conflict between rule 111 and token LSHIFT resolved as reduce (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 111 and token RSHIFT resolved as reduce (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 111 and token EQUAL resolved as reduce (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 111 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 111 and token GT resolved as reduce (GT < RSHIFT_ASSIGN).
    Conflict between rule 111 and token GE resolved as reduce (GE < RSHIFT_ASSIGN).
    Conflict between rule 111 and token LT resolved as reduce (LT < RSHIFT_ASSIGN).
    Conflict between rule 111 and token LE resolved as reduce (LE < RSHIFT_ASSIGN).
    Conflict between rule 111 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 111 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 111 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 111 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 111 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT_ASSIGN).
    Conflict between rule 111 and token AS resolved as reduce (AS < RSHIFT_ASSIGN).


state 174

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  109                   | lhs EXC_OR_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LCB, LRB, RRB, SEMI, AS]
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    $default  reduce using rule 109 (expression_nobrace)

    Conflict between rule 109 and token DOT resolved as reduce (DOT < EXC_OR_ASSIGN).
    Conflict between rule 109 and token ADD resolved as reduce (ADD < EXC_OR_ASSIGN).
    Conflict between rule 109 and token SUB resolved as reduce (SUB < EXC_OR_ASSIGN).
    Conflict between rule 109 and token MUL resolved as reduce (MUL < EXC_OR_ASSIGN).
    Conflict between rule 109 and token DIV resolved as reduce (DIV < EXC_OR_ASSIGN).
    Conflict between rule 109 and token MOD resolved as reduce (MOD < EXC_OR_ASSIGN).
    Conflict between rule 109 and token LSHIFT resolved as reduce (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 109 and token RSHIFT resolved as reduce (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 109 and token EQUAL resolved as reduce (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 109 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 109 and token GT resolved as reduce (GT < EXC_OR_ASSIGN).
    Conflict between rule 109 and token GE resolved as reduce (GE < EXC_OR_ASSIGN).
    Conflict between rule 109 and token LT resolved as reduce (LT < EXC_OR_ASSIGN).
    Conflict between rule 109 and token LE resolved as reduce (LE < EXC_OR_ASSIGN).
    Conflict between rule 109 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 109 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 109 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 109 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 109 and token EXC_OR resolved as reduce (EXC_OR < EXC_OR_ASSIGN).
    Conflict between rule 109 and token AS resolved as reduce (AS < EXC_OR_ASSIGN).


state 175

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group
  152 inferenced_type_init_stmt: VAR IDENT ASSIGN expression . stmt_term
  173 stmt_term: . SEMI

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    SEMI       shift, and go to state 72
    AS         shift, and go to state 101

    stmt_term  go to state 203


state 176

   75 argument_list: . expression
   76              | . argument_list COMMA expression
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  123                   | NEW fqcn_part typename_group LRB . argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  124                   | NEW fqcn_part typename_group LRB . RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 204
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 205
    fqcn_part           go to state 58
    expression          go to state 163
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 177

   59 function_define: DEF IDENT LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 206


state 178

   58 function_define: DEF IDENT LRB parameter_list . RRB ARROW typename_T scope_optional
   74 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 207
    RRB    shift, and go to state 208


state 179

   73 parameter_list: typename_T . IDENT

    IDENT  shift, and go to state 209


state 180

   20 namespace_path: namespace_path DOT IDENT .

    $default  reduce using rule 20 (namespace_path)


state 181

   24 parameterized_typename: . IDENT type_parameter_group
   38 interface_decl: INTERFACE . parameterized_typename LCB access_member_tree_opt RCB
   39               | INTERFACE . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 210

    parameterized_typename  go to state 211


state 182

   24 parameterized_typename: . IDENT type_parameter_group
   34 class_decl: CLASS . parameterized_typename LCB access_member_tree_opt RCB
   35           | CLASS . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 210

    parameterized_typename  go to state 212


state 183

   36 enum_decl: ENUM . IDENT LCB ident_list RCB
   37          | ENUM . IDENT LCB ident_list COMMA RCB

    IDENT  shift, and go to state 213


state 184

   11 namespace_member_decl: NAMESPACE . namespace_path namespace_body
   19 namespace_path: . IDENT
   20               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 67

    namespace_path  go to state 214


state 185

   15 namespace_member_decl_list: namespace_member_decl .

    $default  reduce using rule 15 (namespace_member_decl_list)


state 186

   11 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   12                      | . class_decl
   13                      | . interface_decl
   14                      | . enum_decl
   16 namespace_member_decl_list: namespace_member_decl_list . namespace_member_decl
   18 namespace_member_decl_optional: namespace_member_decl_list .  [RCB]
   34 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   35           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   36 enum_decl: . ENUM IDENT LCB ident_list RCB
   37          | . ENUM IDENT LCB ident_list COMMA RCB
   38 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   39               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 181
    CLASS      shift, and go to state 182
    ENUM       shift, and go to state 183
    NAMESPACE  shift, and go to state 184

    $default  reduce using rule 18 (namespace_member_decl_optional)

    namespace_member_decl  go to state 215
    class_decl             go to state 188
    enum_decl              go to state 189
    interface_decl         go to state 190


state 187

   10 namespace_body: LCB namespace_member_decl_optional . RCB

    RCB  shift, and go to state 216


state 188

   12 namespace_member_decl: class_decl .

    $default  reduce using rule 12 (namespace_member_decl)


state 189

   14 namespace_member_decl: enum_decl .

    $default  reduce using rule 14 (namespace_member_decl)


state 190

   13 namespace_member_decl: interface_decl .

    $default  reduce using rule 13 (namespace_member_decl)


state 191

  153 if_stmt: IF LRB expression RRB . scope
  154        | IF LRB expression RRB . scope ELSE scope
  155        | IF LRB expression RRB . scope elif_list
  156        | IF LRB expression RRB . scope elif_list ELSE scope
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB

    LCB  shift, and go to state 75

    scope  go to state 217


state 192

  169 scope: LCB stmt_list RCB .

    $default  reduce using rule 169 (scope)


state 193

  138 stmt_list: stmt_list stmt .

    $default  reduce using rule 138 (stmt_list)


state 194

   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
  168 catch_stmt: CATCH LRB . typename_T IDENT RRB scope

    IDENT  shift, and go to state 14

    typename_T  go to state 218
    fqcn_part   go to state 140


state 195

  167 catch_stmt_list: catch_stmt_list catch_stmt .

    $default  reduce using rule 167 (catch_stmt_list)


state 196

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group
  151 variable_init_stmt: typename_T IDENT ASSIGN expression . stmt_term
  173 stmt_term: . SEMI

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    SEMI       shift, and go to state 72
    AS         shift, and go to state 101

    stmt_term  go to state 219


state 197

   80 typename_list: typename_list COMMA . typename_T
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 220
    fqcn_part   go to state 140


state 198

   78 typename_group: LGEN typename_list RGEN .

    $default  reduce using rule 78 (typename_group)


state 199

   81 typename_T: fqcn_part typename_group .

    $default  reduce using rule 81 (typename_T)


state 200

  129 lhs: expression DOT IDENT typename_group .

    $default  reduce using rule 129 (lhs)


state 201

   76 argument_list: argument_list COMMA . expression
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 221
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 202

  121 expression_nobrace: expression_nobrace LRB argument_list RRB .

    $default  reduce using rule 121 (expression_nobrace)


state 203

  152 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 152 (inferenced_type_init_stmt)


state 204

  124 expression_nobrace: NEW fqcn_part typename_group LRB RRB .

    $default  reduce using rule 124 (expression_nobrace)


state 205

   76 argument_list: argument_list . COMMA expression
  123 expression_nobrace: NEW fqcn_part typename_group LRB argument_list . RRB

    COMMA  shift, and go to state 201
    RRB    shift, and go to state 222


state 206

   59 function_define: DEF IDENT LRB RRB ARROW . typename_T scope_optional
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 223
    fqcn_part   go to state 140


state 207

   74 parameter_list: parameter_list COMMA . typename_T IDENT
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 224
    fqcn_part   go to state 140


state 208

   58 function_define: DEF IDENT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 225


state 209

   73 parameter_list: typename_T IDENT .

    $default  reduce using rule 73 (parameter_list)


state 210

   24 parameterized_typename: IDENT . type_parameter_group
   25 type_parameter_group: .  [COLON, LCB]
   26                     | . LGEN type_parameter_list RGEN

    LGEN  shift, and go to state 226

    $default  reduce using rule 25 (type_parameter_group)

    type_parameter_group  go to state 227


state 211

   38 interface_decl: INTERFACE parameterized_typename . LCB access_member_tree_opt RCB
   39               | INTERFACE parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 228
    LCB    shift, and go to state 229


state 212

   34 class_decl: CLASS parameterized_typename . LCB access_member_tree_opt RCB
   35           | CLASS parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 230
    LCB    shift, and go to state 231


state 213

   36 enum_decl: ENUM IDENT . LCB ident_list RCB
   37          | ENUM IDENT . LCB ident_list COMMA RCB

    LCB  shift, and go to state 232


state 214

   10 namespace_body: . LCB namespace_member_decl_optional RCB
   11 namespace_member_decl: NAMESPACE namespace_path . namespace_body
   20 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 120
    LCB  shift, and go to state 121

    namespace_body  go to state 233


state 215

   16 namespace_member_decl_list: namespace_member_decl_list namespace_member_decl .

    $default  reduce using rule 16 (namespace_member_decl_list)


state 216

   10 namespace_body: LCB namespace_member_decl_optional RCB .

    $default  reduce using rule 10 (namespace_body)


state 217

  153 if_stmt: IF LRB expression RRB scope .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  154        | IF LRB expression RRB scope . ELSE scope
  155        | IF LRB expression RRB scope . elif_list
  156        | IF LRB expression RRB scope . elif_list ELSE scope
  157 elif_list: . elif
  158          | . elif_list elif
  159 elif: . ELIF LRB expression RRB scope

    ELIF  shift, and go to state 234
    ELSE  shift, and go to state 235

    $default  reduce using rule 153 (if_stmt)

    elif_list  go to state 236
    elif       go to state 237


state 218

  168 catch_stmt: CATCH LRB typename_T . IDENT RRB scope

    IDENT  shift, and go to state 238


state 219

  151 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 151 (variable_init_stmt)


state 220

   80 typename_list: typename_list COMMA typename_T .

    $default  reduce using rule 80 (typename_list)


state 221

   76 argument_list: argument_list COMMA expression .  [COMMA, RRB]
   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    AS         shift, and go to state 101

    $default  reduce using rule 76 (argument_list)


state 222

  123 expression_nobrace: NEW fqcn_part typename_group LRB argument_list RRB .

    $default  reduce using rule 123 (expression_nobrace)


state 223

   59 function_define: DEF IDENT LRB RRB ARROW typename_T . scope_optional
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB
  171 scope_optional: . SEMI
  172               | . scope

    LCB   shift, and go to state 75
    SEMI  shift, and go to state 125

    scope           go to state 126
    scope_optional  go to state 239


state 224

   74 parameter_list: parameter_list COMMA typename_T . IDENT

    IDENT  shift, and go to state 240


state 225

   58 function_define: DEF IDENT LRB parameter_list RRB ARROW . typename_T scope_optional
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 241
    fqcn_part   go to state 140


state 226

   26 type_parameter_group: LGEN . type_parameter_list RGEN
   27 type_parameter_list: . type_parameter
   28                    | . type_parameter_list COMMA type_parameter
   29 type_parameter: . IDENT type_parameter_rule_list
   30               | . IN IDENT type_parameter_rule_list
   31               | . OUT IDENT type_parameter_rule_list

    IDENT  shift, and go to state 242
    IN     shift, and go to state 243
    OUT    shift, and go to state 244

    type_parameter_list  go to state 245
    type_parameter       go to state 246


state 227

   24 parameterized_typename: IDENT type_parameter_group .

    $default  reduce using rule 24 (parameterized_typename)


state 228

   39 interface_decl: INTERFACE parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   79 typename_list: . typename_T
   80              | . typename_list COMMA typename_T
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 247
    typename_T     go to state 139
    fqcn_part      go to state 140


state 229

   38 interface_decl: INTERFACE parameterized_typename LCB . access_member_tree_opt RCB
   40 access_member_tree_opt: .  [RCB]
   41                       | . access_member_tree
   42 access_member_tree: . access_member_list
   43                   | . access_member_tree access_member_list
   44 access_member_list: . access_level_T COLON member_define_list
   68 access_level_T: . PUBLIC
   69               | . PRIVATE
   70               | . PROTECTED

    PUBLIC     shift, and go to state 248
    PRIVATE    shift, and go to state 249
    PROTECTED  shift, and go to state 250

    $default  reduce using rule 40 (access_member_tree_opt)

    access_member_tree_opt  go to state 251
    access_member_tree      go to state 252
    access_member_list      go to state 253
    access_level_T          go to state 254


state 230

   35 class_decl: CLASS parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   79 typename_list: . typename_T
   80              | . typename_list COMMA typename_T
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 255
    typename_T     go to state 139
    fqcn_part      go to state 140


state 231

   34 class_decl: CLASS parameterized_typename LCB . access_member_tree_opt RCB
   40 access_member_tree_opt: .  [RCB]
   41                       | . access_member_tree
   42 access_member_tree: . access_member_list
   43                   | . access_member_tree access_member_list
   44 access_member_list: . access_level_T COLON member_define_list
   68 access_level_T: . PUBLIC
   69               | . PRIVATE
   70               | . PROTECTED

    PUBLIC     shift, and go to state 248
    PRIVATE    shift, and go to state 249
    PROTECTED  shift, and go to state 250

    $default  reduce using rule 40 (access_member_tree_opt)

    access_member_tree_opt  go to state 256
    access_member_tree      go to state 252
    access_member_list      go to state 253
    access_level_T          go to state 254


state 232

   36 enum_decl: ENUM IDENT LCB . ident_list RCB
   37          | ENUM IDENT LCB . ident_list COMMA RCB
   71 ident_list: . IDENT
   72           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 257

    ident_list  go to state 258


state 233

   11 namespace_member_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 11 (namespace_member_decl)


state 234

  159 elif: ELIF . LRB expression RRB scope

    LRB  shift, and go to state 259


state 235

  154 if_stmt: IF LRB expression RRB scope ELSE . scope
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB

    LCB  shift, and go to state 75

    scope  go to state 260


state 236

  155 if_stmt: IF LRB expression RRB scope elif_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS_TOK, SUPER_TOK, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, DEF, NAMESPACE, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  156        | IF LRB expression RRB scope elif_list . ELSE scope
  158 elif_list: elif_list . elif
  159 elif: . ELIF LRB expression RRB scope

    ELIF  shift, and go to state 234
    ELSE  shift, and go to state 261

    $default  reduce using rule 155 (if_stmt)

    elif  go to state 262


state 237

  157 elif_list: elif .

    $default  reduce using rule 157 (elif_list)


state 238

  168 catch_stmt: CATCH LRB typename_T IDENT . RRB scope

    RRB  shift, and go to state 263


state 239

   59 function_define: DEF IDENT LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 59 (function_define)


state 240

   74 parameter_list: parameter_list COMMA typename_T IDENT .

    $default  reduce using rule 74 (parameter_list)


state 241

   58 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T . scope_optional
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB
  171 scope_optional: . SEMI
  172               | . scope

    LCB   shift, and go to state 75
    SEMI  shift, and go to state 125

    scope           go to state 126
    scope_optional  go to state 264


state 242

   29 type_parameter: IDENT . type_parameter_rule_list
   32 type_parameter_rule_list: .  [COMMA, RGEN]
   33                         | . LRB typename_list RRB

    LRB  shift, and go to state 265

    $default  reduce using rule 32 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 266


state 243

   30 type_parameter: IN . IDENT type_parameter_rule_list

    IDENT  shift, and go to state 267


state 244

   31 type_parameter: OUT . IDENT type_parameter_rule_list

    IDENT  shift, and go to state 268


state 245

   26 type_parameter_group: LGEN type_parameter_list . RGEN
   28 type_parameter_list: type_parameter_list . COMMA type_parameter

    COMMA  shift, and go to state 269
    RGEN   shift, and go to state 270


state 246

   27 type_parameter_list: type_parameter .

    $default  reduce using rule 27 (type_parameter_list)


state 247

   39 interface_decl: INTERFACE parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   80 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 197
    LCB    shift, and go to state 271


state 248

   68 access_level_T: PUBLIC .

    $default  reduce using rule 68 (access_level_T)


state 249

   69 access_level_T: PRIVATE .

    $default  reduce using rule 69 (access_level_T)


state 250

   70 access_level_T: PROTECTED .

    $default  reduce using rule 70 (access_level_T)


state 251

   38 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 272


state 252

   41 access_member_tree_opt: access_member_tree .  [RCB]
   43 access_member_tree: access_member_tree . access_member_list
   44 access_member_list: . access_level_T COLON member_define_list
   68 access_level_T: . PUBLIC
   69               | . PRIVATE
   70               | . PROTECTED

    PUBLIC     shift, and go to state 248
    PRIVATE    shift, and go to state 249
    PROTECTED  shift, and go to state 250

    $default  reduce using rule 41 (access_member_tree_opt)

    access_member_list  go to state 273
    access_level_T      go to state 254


state 253

   42 access_member_tree: access_member_list .

    $default  reduce using rule 42 (access_member_tree)


state 254

   44 access_member_list: access_level_T . COLON member_define_list

    COLON  shift, and go to state 274


state 255

   35 class_decl: CLASS parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   80 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 197
    LCB    shift, and go to state 275


state 256

   34 class_decl: CLASS parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 276


state 257

   71 ident_list: IDENT .

    $default  reduce using rule 71 (ident_list)


state 258

   36 enum_decl: ENUM IDENT LCB ident_list . RCB
   37          | ENUM IDENT LCB ident_list . COMMA RCB
   72 ident_list: ident_list . COMMA IDENT

    COMMA  shift, and go to state 277
    RCB    shift, and go to state 278


state 259

   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK
  159 elif: ELIF LRB . expression RRB scope

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    fqcn_part           go to state 58
    expression          go to state 279
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 260

  154 if_stmt: IF LRB expression RRB scope ELSE scope .

    $default  reduce using rule 154 (if_stmt)


state 261

  156 if_stmt: IF LRB expression RRB scope elif_list ELSE . scope
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB

    LCB  shift, and go to state 75

    scope  go to state 280


state 262

  158 elif_list: elif_list elif .

    $default  reduce using rule 158 (elif_list)


state 263

  168 catch_stmt: CATCH LRB typename_T IDENT RRB . scope
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB

    LCB  shift, and go to state 75

    scope  go to state 281


state 264

   58 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 58 (function_define)


state 265

   33 type_parameter_rule_list: LRB . typename_list RRB
   79 typename_list: . typename_T
   80              | . typename_list COMMA typename_T
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_list  go to state 282
    typename_T     go to state 139
    fqcn_part      go to state 140


state 266

   29 type_parameter: IDENT type_parameter_rule_list .

    $default  reduce using rule 29 (type_parameter)


state 267

   30 type_parameter: IN IDENT . type_parameter_rule_list
   32 type_parameter_rule_list: .  [COMMA, RGEN]
   33                         | . LRB typename_list RRB

    LRB  shift, and go to state 265

    $default  reduce using rule 32 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 283


state 268

   31 type_parameter: OUT IDENT . type_parameter_rule_list
   32 type_parameter_rule_list: .  [COMMA, RGEN]
   33                         | . LRB typename_list RRB

    LRB  shift, and go to state 265

    $default  reduce using rule 32 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 284


state 269

   28 type_parameter_list: type_parameter_list COMMA . type_parameter
   29 type_parameter: . IDENT type_parameter_rule_list
   30               | . IN IDENT type_parameter_rule_list
   31               | . OUT IDENT type_parameter_rule_list

    IDENT  shift, and go to state 242
    IN     shift, and go to state 243
    OUT    shift, and go to state 244

    type_parameter  go to state 285


state 270

   26 type_parameter_group: LGEN type_parameter_list RGEN .

    $default  reduce using rule 26 (type_parameter_group)


state 271

   39 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   40 access_member_tree_opt: .  [RCB]
   41                       | . access_member_tree
   42 access_member_tree: . access_member_list
   43                   | . access_member_tree access_member_list
   44 access_member_list: . access_level_T COLON member_define_list
   68 access_level_T: . PUBLIC
   69               | . PRIVATE
   70               | . PROTECTED

    PUBLIC     shift, and go to state 248
    PRIVATE    shift, and go to state 249
    PROTECTED  shift, and go to state 250

    $default  reduce using rule 40 (access_member_tree_opt)

    access_member_tree_opt  go to state 286
    access_member_tree      go to state 252
    access_member_list      go to state 253
    access_level_T          go to state 254


state 272

   38 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 38 (interface_decl)


state 273

   43 access_member_tree: access_member_tree access_member_list .

    $default  reduce using rule 43 (access_member_tree)


state 274

   44 access_member_list: access_level_T COLON . member_define_list
   45 member_define_list: . member_define
   46                   | . member_define_list member_define
   47 member_define: . constructor_define
   48              | . method_define
   49              | . field_define
   50 constructor_define: . CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | . CTOR NEW LRB RRB constructor_chain_optional scope_optional
   60 method_define: . modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | . modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   62 field_define: . modifier_type_T typename_T IDENT SEMI
   63 modifier_type_T: .  [IDENT, DEF]
   64                | . STATIC NATIVE
   65                | . NATIVE STATIC
   66                | . STATIC
   67                | . NATIVE

    STATIC  shift, and go to state 287
    NATIVE  shift, and go to state 288
    CTOR    shift, and go to state 289

    $default  reduce using rule 63 (modifier_type_T)

    member_define_list  go to state 290
    member_define       go to state 291
    constructor_define  go to state 292
    method_define       go to state 293
    field_define        go to state 294
    modifier_type_T     go to state 295


state 275

   35 class_decl: CLASS parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   40 access_member_tree_opt: .  [RCB]
   41                       | . access_member_tree
   42 access_member_tree: . access_member_list
   43                   | . access_member_tree access_member_list
   44 access_member_list: . access_level_T COLON member_define_list
   68 access_level_T: . PUBLIC
   69               | . PRIVATE
   70               | . PROTECTED

    PUBLIC     shift, and go to state 248
    PRIVATE    shift, and go to state 249
    PROTECTED  shift, and go to state 250

    $default  reduce using rule 40 (access_member_tree_opt)

    access_member_tree_opt  go to state 296
    access_member_tree      go to state 252
    access_member_list      go to state 253
    access_level_T          go to state 254


state 276

   34 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 34 (class_decl)


state 277

   37 enum_decl: ENUM IDENT LCB ident_list COMMA . RCB
   72 ident_list: ident_list COMMA . IDENT

    IDENT  shift, and go to state 297
    RCB    shift, and go to state 298


state 278

   36 enum_decl: ENUM IDENT LCB ident_list RCB .

    $default  reduce using rule 36 (enum_decl)


state 279

   89 expression_nobrace: expression . ADD expression
   90                   | expression . SUB expression
   91                   | expression . MUL expression
   92                   | expression . DIV expression
   93                   | expression . MOD expression
   94                   | expression . BIT_OR expression
   95                   | expression . EQUAL expression
   96                   | expression . NOTEQUAL expression
   97                   | expression . BIT_AND expression
   98                   | expression . EXC_OR expression
   99                   | expression . LOGIC_OR expression
  100                   | expression . LOGIC_AND expression
  112                   | expression . GT expression
  113                   | expression . GE expression
  114                   | expression . LT expression
  115                   | expression . LE expression
  116                   | expression . LSHIFT expression
  117                   | expression . RSHIFT expression
  118                   | expression . AS typename_T
  129 lhs: expression . DOT IDENT typename_group
  159 elif: ELIF LRB expression . RRB scope

    DOT        shift, and go to state 82
    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    MUL        shift, and go to state 85
    DIV        shift, and go to state 86
    MOD        shift, and go to state 87
    LSHIFT     shift, and go to state 88
    RSHIFT     shift, and go to state 89
    EQUAL      shift, and go to state 90
    NOTEQUAL   shift, and go to state 91
    GT         shift, and go to state 92
    GE         shift, and go to state 93
    LT         shift, and go to state 94
    LE         shift, and go to state 95
    BIT_AND    shift, and go to state 96
    LOGIC_AND  shift, and go to state 97
    BIT_OR     shift, and go to state 98
    LOGIC_OR   shift, and go to state 99
    EXC_OR     shift, and go to state 100
    RRB        shift, and go to state 299
    AS         shift, and go to state 101


state 280

  156 if_stmt: IF LRB expression RRB scope elif_list ELSE scope .

    $default  reduce using rule 156 (if_stmt)


state 281

  168 catch_stmt: CATCH LRB typename_T IDENT RRB scope .

    $default  reduce using rule 168 (catch_stmt)


state 282

   33 type_parameter_rule_list: LRB typename_list . RRB
   80 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 197
    RRB    shift, and go to state 300


state 283

   30 type_parameter: IN IDENT type_parameter_rule_list .

    $default  reduce using rule 30 (type_parameter)


state 284

   31 type_parameter: OUT IDENT type_parameter_rule_list .

    $default  reduce using rule 31 (type_parameter)


state 285

   28 type_parameter_list: type_parameter_list COMMA type_parameter .

    $default  reduce using rule 28 (type_parameter_list)


state 286

   39 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 301


state 287

   64 modifier_type_T: STATIC . NATIVE
   66                | STATIC .  [IDENT, DEF]

    NATIVE  shift, and go to state 302

    $default  reduce using rule 66 (modifier_type_T)


state 288

   65 modifier_type_T: NATIVE . STATIC
   67                | NATIVE .  [IDENT, DEF]

    STATIC  shift, and go to state 303

    $default  reduce using rule 67 (modifier_type_T)


state 289

   50 constructor_define: CTOR . NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | CTOR . NEW LRB RRB constructor_chain_optional scope_optional

    NEW  shift, and go to state 304


state 290

   44 access_member_list: access_level_T COLON member_define_list .  [RCB, PUBLIC, PRIVATE, PROTECTED]
   46 member_define_list: member_define_list . member_define
   47 member_define: . constructor_define
   48              | . method_define
   49              | . field_define
   50 constructor_define: . CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | . CTOR NEW LRB RRB constructor_chain_optional scope_optional
   60 method_define: . modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | . modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   62 field_define: . modifier_type_T typename_T IDENT SEMI
   63 modifier_type_T: .  [IDENT, DEF]
   64                | . STATIC NATIVE
   65                | . NATIVE STATIC
   66                | . STATIC
   67                | . NATIVE

    STATIC  shift, and go to state 287
    NATIVE  shift, and go to state 288
    CTOR    shift, and go to state 289

    IDENT     reduce using rule 63 (modifier_type_T)
    DEF       reduce using rule 63 (modifier_type_T)
    $default  reduce using rule 44 (access_member_list)

    member_define       go to state 305
    constructor_define  go to state 292
    method_define       go to state 293
    field_define        go to state 294
    modifier_type_T     go to state 295


state 291

   45 member_define_list: member_define .

    $default  reduce using rule 45 (member_define_list)


state 292

   47 member_define: constructor_define .

    $default  reduce using rule 47 (member_define)


state 293

   48 member_define: method_define .

    $default  reduce using rule 48 (member_define)


state 294

   49 member_define: field_define .

    $default  reduce using rule 49 (member_define)


state 295

   60 method_define: modifier_type_T . DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | modifier_type_T . DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   62 field_define: modifier_type_T . typename_T IDENT SEMI
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    DEF    shift, and go to state 306

    typename_T  go to state 307
    fqcn_part   go to state 140


state 296

   35 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 308


state 297

   72 ident_list: ident_list COMMA IDENT .

    $default  reduce using rule 72 (ident_list)


state 298

   37 enum_decl: ENUM IDENT LCB ident_list COMMA RCB .

    $default  reduce using rule 37 (enum_decl)


state 299

  159 elif: ELIF LRB expression RRB . scope
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB

    LCB  shift, and go to state 75

    scope  go to state 309


state 300

   33 type_parameter_rule_list: LRB typename_list RRB .

    $default  reduce using rule 33 (type_parameter_rule_list)


state 301

   39 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 39 (interface_decl)


state 302

   64 modifier_type_T: STATIC NATIVE .

    $default  reduce using rule 64 (modifier_type_T)


state 303

   65 modifier_type_T: NATIVE STATIC .

    $default  reduce using rule 65 (modifier_type_T)


state 304

   50 constructor_define: CTOR NEW . LRB parameter_list RRB constructor_chain_optional scope_optional
   51                   | CTOR NEW . LRB RRB constructor_chain_optional scope_optional

    LRB  shift, and go to state 310


state 305

   46 member_define_list: member_define_list member_define .

    $default  reduce using rule 46 (member_define_list)


state 306

   60 method_define: modifier_type_T DEF . IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | modifier_type_T DEF . IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 311


state 307

   62 field_define: modifier_type_T typename_T . IDENT SEMI

    IDENT  shift, and go to state 312


state 308

   35 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 35 (class_decl)


state 309

  159 elif: ELIF LRB expression RRB scope .

    $default  reduce using rule 159 (elif)


state 310

   50 constructor_define: CTOR NEW LRB . parameter_list RRB constructor_chain_optional scope_optional
   51                   | CTOR NEW LRB . RRB constructor_chain_optional scope_optional
   73 parameter_list: . typename_T IDENT
   74               | . parameter_list COMMA typename_T IDENT
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 313

    parameter_list  go to state 314
    typename_T      go to state 179
    fqcn_part       go to state 140


state 311

   25 type_parameter_group: .  [LRB]
   26                     | . LGEN type_parameter_list RGEN
   60 method_define: modifier_type_T DEF IDENT . type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   61              | modifier_type_T DEF IDENT . type_parameter_group LRB RRB ARROW typename_T scope_optional

    LGEN  shift, and go to state 226

    $default  reduce using rule 25 (type_parameter_group)

    type_parameter_group  go to state 315


state 312

   62 field_define: modifier_type_T typename_T IDENT . SEMI

    SEMI  shift, and go to state 316


state 313

   51 constructor_define: CTOR NEW LRB RRB . constructor_chain_optional scope_optional
   52 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   53                  | . COLON constructor_chain_type_T LRB RRB
   56 constructor_chain_optional: .  [LCB, SEMI]
   57                           | . constructor_chain

    COLON  shift, and go to state 317

    $default  reduce using rule 56 (constructor_chain_optional)

    constructor_chain           go to state 318
    constructor_chain_optional  go to state 319


state 314

   50 constructor_define: CTOR NEW LRB parameter_list . RRB constructor_chain_optional scope_optional
   74 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 207
    RRB    shift, and go to state 320


state 315

   60 method_define: modifier_type_T DEF IDENT type_parameter_group . LRB parameter_list RRB ARROW typename_T scope_optional
   61              | modifier_type_T DEF IDENT type_parameter_group . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 321


state 316

   62 field_define: modifier_type_T typename_T IDENT SEMI .

    $default  reduce using rule 62 (field_define)


state 317

   52 constructor_chain: COLON . constructor_chain_type_T LRB argument_list RRB
   53                  | COLON . constructor_chain_type_T LRB RRB
   54 constructor_chain_type_T: . SUPER_TOK
   55                         | . THIS_TOK

    THIS_TOK   shift, and go to state 322
    SUPER_TOK  shift, and go to state 323

    constructor_chain_type_T  go to state 324


state 318

   57 constructor_chain_optional: constructor_chain .

    $default  reduce using rule 57 (constructor_chain_optional)


state 319

   51 constructor_define: CTOR NEW LRB RRB constructor_chain_optional . scope_optional
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB
  171 scope_optional: . SEMI
  172               | . scope

    LCB   shift, and go to state 75
    SEMI  shift, and go to state 125

    scope           go to state 126
    scope_optional  go to state 325


state 320

   50 constructor_define: CTOR NEW LRB parameter_list RRB . constructor_chain_optional scope_optional
   52 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   53                  | . COLON constructor_chain_type_T LRB RRB
   56 constructor_chain_optional: .  [LCB, SEMI]
   57                           | . constructor_chain

    COLON  shift, and go to state 317

    $default  reduce using rule 56 (constructor_chain_optional)

    constructor_chain           go to state 318
    constructor_chain_optional  go to state 326


state 321

   60 method_define: modifier_type_T DEF IDENT type_parameter_group LRB . parameter_list RRB ARROW typename_T scope_optional
   61              | modifier_type_T DEF IDENT type_parameter_group LRB . RRB ARROW typename_T scope_optional
   73 parameter_list: . typename_T IDENT
   74               | . parameter_list COMMA typename_T IDENT
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14
    RRB    shift, and go to state 327

    parameter_list  go to state 328
    typename_T      go to state 179
    fqcn_part       go to state 140


state 322

   55 constructor_chain_type_T: THIS_TOK .

    $default  reduce using rule 55 (constructor_chain_type_T)


state 323

   54 constructor_chain_type_T: SUPER_TOK .

    $default  reduce using rule 54 (constructor_chain_type_T)


state 324

   52 constructor_chain: COLON constructor_chain_type_T . LRB argument_list RRB
   53                  | COLON constructor_chain_type_T . LRB RRB

    LRB  shift, and go to state 329


state 325

   51 constructor_define: CTOR NEW LRB RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 51 (constructor_define)


state 326

   50 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional . scope_optional
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB
  171 scope_optional: . SEMI
  172               | . scope

    LCB   shift, and go to state 75
    SEMI  shift, and go to state 125

    scope           go to state 126
    scope_optional  go to state 330


state 327

   61 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 331


state 328

   60 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list . RRB ARROW typename_T scope_optional
   74 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 207
    RRB    shift, and go to state 332


state 329

   52 constructor_chain: COLON constructor_chain_type_T LRB . argument_list RRB
   53                  | COLON constructor_chain_type_T LRB . RRB
   75 argument_list: . expression
   76              | . argument_list COMMA expression
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT
   84 expression: . LRB expression RRB
   85           | . primary
   86           | . expression_nobrace
   87 expression_nobrace: . ADD expression
   88                   | . SUB expression
   89                   | . expression ADD expression
   90                   | . expression SUB expression
   91                   | . expression MUL expression
   92                   | . expression DIV expression
   93                   | . expression MOD expression
   94                   | . expression BIT_OR expression
   95                   | . expression EQUAL expression
   96                   | . expression NOTEQUAL expression
   97                   | . expression BIT_AND expression
   98                   | . expression EXC_OR expression
   99                   | . expression LOGIC_OR expression
  100                   | . expression LOGIC_AND expression
  101                   | . lhs ASSIGN expression
  102                   | . lhs ADD_ASSIGN expression
  103                   | . lhs SUB_ASSIGN expression
  104                   | . lhs MUL_ASSIGN expression
  105                   | . lhs DIV_ASSIGN expression
  106                   | . lhs MOD_ASSIGN expression
  107                   | . lhs AND_ASSIGN expression
  108                   | . lhs OR_ASSIGN expression
  109                   | . lhs EXC_OR_ASSIGN expression
  110                   | . lhs LSHIFT_ASSIGN expression
  111                   | . lhs RSHIFT_ASSIGN expression
  112                   | . expression GT expression
  113                   | . expression GE expression
  114                   | . expression LT expression
  115                   | . expression LE expression
  116                   | . expression LSHIFT expression
  117                   | . expression RSHIFT expression
  118                   | . expression AS typename_T
  119                   | . CHILDA expression
  120                   | . NOT expression
  121                   | . expression_nobrace LRB argument_list RRB
  122                   | . expression_nobrace LRB RRB
  123                   | . NEW fqcn_part typename_group LRB argument_list RRB
  124                   | . NEW fqcn_part typename_group LRB RRB
  125                   | . THIS_TOK
  126                   | . SUPER_TOK
  127                   | . lhs
  128 lhs: . fqcn_part typename_group
  129    | . expression DOT IDENT typename_group
  130 primary: . INT
  131        | . DOUBLE
  132        | . CHAR_LITERAL
  133        | . STRING_LITERAL
  134        | . TRUE_TOK
  135        | . FALSE_TOK
  136        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    INT             shift, and go to state 12
    DOUBLE          shift, and go to state 13
    IDENT           shift, and go to state 14
    ADD             shift, and go to state 15
    SUB             shift, and go to state 16
    NOT             shift, and go to state 17
    CHILDA          shift, and go to state 18
    LRB             shift, and go to state 19
    RRB             shift, and go to state 333
    THIS_TOK        shift, and go to state 21
    SUPER_TOK       shift, and go to state 22
    TRUE_TOK        shift, and go to state 23
    FALSE_TOK       shift, and go to state 24
    NULL_TOK        shift, and go to state 25
    NEW             shift, and go to state 26

    argument_list       go to state 334
    fqcn_part           go to state 58
    expression          go to state 163
    expression_nobrace  go to state 42
    lhs                 go to state 43
    primary             go to state 44


state 330

   50 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 50 (constructor_define)


state 331

   61 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW . typename_T scope_optional
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 335
    fqcn_part   go to state 140


state 332

   60 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 336


state 333

   53 constructor_chain: COLON constructor_chain_type_T LRB RRB .

    $default  reduce using rule 53 (constructor_chain)


state 334

   52 constructor_chain: COLON constructor_chain_type_T LRB argument_list . RRB
   76 argument_list: argument_list . COMMA expression

    COMMA  shift, and go to state 201
    RRB    shift, and go to state 337


state 335

   61 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T . scope_optional
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB
  171 scope_optional: . SEMI
  172               | . scope

    LCB   shift, and go to state 75
    SEMI  shift, and go to state 125

    scope           go to state 126
    scope_optional  go to state 338


state 336

   60 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW . typename_T scope_optional
   81 typename_T: . fqcn_part typename_group
   82 fqcn_part: . IDENT
   83          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 14

    typename_T  go to state 339
    fqcn_part   go to state 140


state 337

   52 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB .

    $default  reduce using rule 52 (constructor_chain)


state 338

   61 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 61 (method_define)


state 339

   60 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T . scope_optional
  169 scope: . LCB stmt_list RCB
  170      | . LCB RCB
  171 scope_optional: . SEMI
  172               | . scope

    LCB   shift, and go to state 75
    SEMI  shift, and go to state 125

    scope           go to state 126
    scope_optional  go to state 340


state 340

   60 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 60 (method_define)
