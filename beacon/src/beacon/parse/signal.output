Terminals which are not used

   COMMA_OPT
   COLO_COLO
   INC
   DEC
   LSB
   RSB
   AS


State 32 conflicts: 2 shift/reduce
State 59 conflicts: 2 shift/reduce
State 67 conflicts: 2 shift/reduce
State 151 conflicts: 2 shift/reduce
State 171 conflicts: 2 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: program
    2                 | error '\n'

    3 program: stmt_list
    4        | import
    5        | namespace_decl
    6        | function_define

    7 namespace_decl: NAMESPACE namespace_path namespace_body

    8 namespace_body: LCB namespace_member_decl_optional RCB

    9 namespace_member_decl: NAMESPACE namespace_path namespace_body
   10                      | class_decl
   11                      | interface_decl
   12                      | enum_decl

   13 namespace_member_decl_list: namespace_member_decl
   14                           | namespace_member_decl_list namespace_member_decl

   15 namespace_member_decl_optional: /* empty */
   16                               | namespace_member_decl_list

   17 namespace_path: IDENT
   18               | namespace_path DOT IDENT

   19 import: IMPORT STRING_LITERAL

   20 parameterized_typename: IDENT type_parameter_group

   21 type_parameter_group: /* empty */
   22                     | LT type_parameter_list GT

   23 type_parameter_list: type_parameter
   24                    | type_parameter_list COMMA type_parameter

   25 type_parameter: IDENT type_parameter_rule_list
   26               | IN IDENT type_parameter_rule_list
   27               | OUT IDENT type_parameter_rule_list

   28 type_parameter_rule_list: /* empty */
   29                         | LRB typename_list RRB

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   32 enum_decl: ENUM IDENT LCB ident_list RCB
   33          | ENUM IDENT LCB ident_list COMMA RCB

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   36 access_member_tree_opt: /* empty */
   37                       | access_member_tree

   38 access_member_tree: access_member_list
   39                   | access_member_tree access_member_list

   40 access_member_list: access_level_T COLON member_define_list

   41 member_define_list: member_define
   42                   | member_define_list member_define

   43 member_define: constructor_define
   44              | method_define
   45              | field_define

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW LRB RRB constructor_chain_optional scope_optional

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB
   49                  | COLON constructor_chain_type_T LRB RRB

   50 constructor_chain_type_T: SUPER
   51                         | THIS

   52 constructor_chain_optional: /* empty */
   53                           | constructor_chain

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT LRB RRB ARROW typename_T scope_optional

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

   58 field_define: modifier_type_T typename_T IDENT SEMI

   59 modifier_type_T: /* empty */
   60                | STATIC NATIVE
   61                | NATIVE STATIC
   62                | STATIC
   63                | NATIVE

   64 access_level_T: PUBLIC
   65               | PRIVATE
   66               | PROTECTED

   67 ident_list: IDENT
   68           | ident_list COMMA IDENT

   69 parameter_list: typename_T IDENT
   70               | parameter_list COMMA typename_T IDENT

   71 argument_list: expression
   72              | argument_list COMMA expression

   73 typename_group: /* empty */
   74               | '<' typename_list '>'

   75 typename_list: typename_T
   76              | typename_list COMMA typename_T

   77 typename_T: IDENT typename_group

   78 expression: primary
   79           | ADD expression
   80           | SUB expression
   81           | expression ADD expression
   82           | expression SUB expression
   83           | expression MUL expression
   84           | expression DIV expression
   85           | expression MOD expression
   86           | expression BIT_OR expression
   87           | expression EQUAL expression
   88           | expression NOTEQUAL expression
   89           | expression BIT_AND expression
   90           | expression EXC_OR expression
   91           | expression LOGIC_OR expression
   92           | expression LOGIC_AND expression
   93           | expression ASSIGN expression
   94           | expression ADD_ASSIGN expression
   95           | expression SUB_ASSIGN expression
   96           | expression MUL_ASSIGN expression
   97           | expression DIV_ASSIGN expression
   98           | expression MOD_ASSIGN expression
   99           | expression AND_ASSIGN expression
  100           | expression OR_ASSIGN expression
  101           | expression EXC_OR_ASSIGN expression
  102           | expression LSHIFT_ASSIGN expression
  103           | expression RSHIFT_ASSIGN expression
  104           | expression GT expression
  105           | expression GE expression
  106           | expression LT expression
  107           | expression LE expression
  108           | expression LSHIFT expression
  109           | expression RSHIFT expression
  110           | CHILDA expression
  111           | NOT expression
  112           | LRB expression RRB

  113 primary: INT
  114        | DOUBLE
  115        | CHAR_LITERAL
  116        | STRING_LITERAL
  117        | TRUE_TOK
  118        | FALSE_TOK
  119        | NULL_TOK

  120 stmt_list: stmt
  121          | stmt_list stmt

  122 stmt: expression stmt_term
  123     | variable_decl_stmt
  124     | variable_init_stmt
  125     | inferenced_type_init_stmt
  126     | if_stmt
  127     | while_stmt
  128     | break_stmt
  129     | continue_stmt
  130     | return_stmt
  131     | throw_stmt
  132     | try_stmt

  133 variable_decl_stmt: typename_T IDENT SEMI

  134 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term

  135 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term

  136 if_stmt: IF LRB expression RRB scope
  137        | IF LRB expression RRB scope ELSE scope
  138        | IF LRB expression RRB scope elif_list
  139        | IF LRB expression RRB scope elif_list ELSE scope

  140 elif_list: elif
  141          | elif_list elif

  142 elif: ELIF LRB expression RRB scope

  143 while_stmt: WHILE LRB expression RRB scope_optional

  144 break_stmt: BREAK stmt_term

  145 continue_stmt: CONTINUE stmt_term

  146 return_stmt: RETURN expression stmt_term

  147 throw_stmt: THROW expression stmt_term

  148 try_stmt: TRY scope catch_stmt_list

  149 catch_stmt_list: catch_stmt
  150                | catch_stmt_list catch_stmt

  151 catch_stmt: CATCH LRB typename_T IDENT RRB scope

  152 scope: LCB stmt_list RCB
  153      | LCB RCB

  154 scope_optional: SEMI
  155               | scope

  156 stmt_term: SEMI
  157          | /* empty */


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2
'<' (60) 74
'>' (62) 74
error (256) 2
CHAR_LITERAL (258) 115
STRING_LITERAL (259) 19 116
INT (260) 113
DOUBLE (261) 114
IDENT (262) 17 18 20 25 26 27 32 33 54 55 56 57 58 67 68 69 70 77 133
    134 135 151
DOT (263) 18
COMMA (264) 24 33 68 70 72 76
COMMA_OPT (265)
COLON (266) 31 35 40 48 49
COLO_COLO (267)
ADD (268) 79 81
SUB (269) 80 82
MUL (270) 83
DIV (271) 84
MOD (272) 85
NOT (273) 111
LSHIFT (274) 108
RSHIFT (275) 109
CHILDA (276) 110
EQUAL (277) 87
NOTEQUAL (278) 88
GT (279) 22 104
GE (280) 105
LT (281) 22 106
LE (282) 107
BIT_AND (283) 89
LOGIC_AND (284) 92
BIT_OR (285) 86
LOGIC_OR (286) 91
ASSIGN (287) 93 134 135
ADD_ASSIGN (288) 94
SUB_ASSIGN (289) 95
MUL_ASSIGN (290) 96
DIV_ASSIGN (291) 97
MOD_ASSIGN (292) 98
AND_ASSIGN (293) 99
OR_ASSIGN (294) 100
LSHIFT_ASSIGN (295) 102
RSHIFT_ASSIGN (296) 103
EXC_OR_ASSIGN (297) 101
INC (298)
DEC (299)
EXC_OR (300) 90
LCB (301) 8 30 31 32 33 34 35 152 153
RCB (302) 8 30 31 32 33 34 35 152 153
LRB (303) 29 46 47 48 49 54 55 56 57 112 136 137 138 139 142 143 151
RRB (304) 29 46 47 48 49 54 55 56 57 112 136 137 138 139 142 143 151
LSB (305)
RSB (306)
SEMI (307) 58 133 154 156
IMPORT (308) 19
VAR (309) 135
THIS (310) 51
SUPER (311) 50
TRUE_TOK (312) 117
FALSE_TOK (313) 118
NULL_TOK (314) 119
AS (315)
INTERFACE (316) 34 35
CLASS (317) 30 31
ENUM (318) 32 33
PUBLIC (319) 64
PRIVATE (320) 65
PROTECTED (321) 66
STATIC (322) 60 61 62
NATIVE (323) 60 61 63
NEW (324) 46 47
IN (325) 26
OUT (326) 27
CTOR (327) 46 47
DEF (328) 54 55 56 57
ARROW (329) 54 55 56 57
NAMESPACE (330) 7 9
RETURN (331) 146
IF (332) 136 137 138 139
ELIF (333) 142
ELSE (334) 137 139
WHILE (335) 143
BREAK (336) 144
CONTINUE (337) 145
TRY (338) 148
CATCH (339) 151
THROW (340) 147
POSITIVE (341)
NEGATIVE (342)


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
compilation_unit (92)
    on left: 1 2, on right: 0
program (93)
    on left: 3 4 5 6, on right: 1
namespace_decl (94)
    on left: 7, on right: 5
namespace_body (95)
    on left: 8, on right: 7 9
namespace_member_decl (96)
    on left: 9 10 11 12, on right: 13 14
namespace_member_decl_list (97)
    on left: 13 14, on right: 14 16
namespace_member_decl_optional (98)
    on left: 15 16, on right: 8
namespace_path (99)
    on left: 17 18, on right: 7 9 18
import (100)
    on left: 19, on right: 4
parameterized_typename (101)
    on left: 20, on right: 30 31 34 35
type_parameter_group (102)
    on left: 21 22, on right: 20 56 57
type_parameter_list (103)
    on left: 23 24, on right: 22 24
type_parameter (104)
    on left: 25 26 27, on right: 23 24
type_parameter_rule_list (105)
    on left: 28 29, on right: 25 26 27
class_decl (106)
    on left: 30 31, on right: 10
enum_decl (107)
    on left: 32 33, on right: 12
interface_decl (108)
    on left: 34 35, on right: 11
access_member_tree_opt (109)
    on left: 36 37, on right: 30 31 34 35
access_member_tree (110)
    on left: 38 39, on right: 37 39
access_member_list (111)
    on left: 40, on right: 38 39
member_define_list (112)
    on left: 41 42, on right: 40 42
member_define (113)
    on left: 43 44 45, on right: 41 42
constructor_define (114)
    on left: 46 47, on right: 43
constructor_chain (115)
    on left: 48 49, on right: 53
constructor_chain_type_T (116)
    on left: 50 51, on right: 48 49
constructor_chain_optional (117)
    on left: 52 53, on right: 46 47
function_define (118)
    on left: 54 55, on right: 6
method_define (119)
    on left: 56 57, on right: 44
field_define (120)
    on left: 58, on right: 45
modifier_type_T (121)
    on left: 59 60 61 62 63, on right: 56 57 58
access_level_T (122)
    on left: 64 65 66, on right: 40
ident_list (123)
    on left: 67 68, on right: 32 33 68
parameter_list (124)
    on left: 69 70, on right: 46 54 56 70
argument_list (125)
    on left: 71 72, on right: 48 72
typename_group (126)
    on left: 73 74, on right: 77
typename_list (127)
    on left: 75 76, on right: 29 31 35 74 76
typename_T (128)
    on left: 77, on right: 54 55 56 57 58 69 70 75 76 133 134 151
expression (129)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
   , on right: 71 72 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
    95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
    112 122 134 135 136 137 138 139 142 143 146 147
primary (130)
    on left: 113 114 115 116 117 118 119, on right: 78
stmt_list (131)
    on left: 120 121, on right: 3 121 152
stmt (132)
    on left: 122 123 124 125 126 127 128 129 130 131 132,
    on right: 120 121
variable_decl_stmt (133)
    on left: 133, on right: 123
variable_init_stmt (134)
    on left: 134, on right: 124
inferenced_type_init_stmt (135)
    on left: 135, on right: 125
if_stmt (136)
    on left: 136 137 138 139, on right: 126
elif_list (137)
    on left: 140 141, on right: 138 139 141
elif (138)
    on left: 142, on right: 140 141
while_stmt (139)
    on left: 143, on right: 127
break_stmt (140)
    on left: 144, on right: 128
continue_stmt (141)
    on left: 145, on right: 129
return_stmt (142)
    on left: 146, on right: 130
throw_stmt (143)
    on left: 147, on right: 131
try_stmt (144)
    on left: 148, on right: 132
catch_stmt_list (145)
    on left: 149 150, on right: 148 150
catch_stmt (146)
    on left: 151, on right: 149 150
scope (147)
    on left: 152 153, on right: 136 137 138 139 142 148 151 155
scope_optional (148)
    on left: 154 155, on right: 46 47 54 55 56 57 143
stmt_term (149)
    on left: 156 157, on right: 122 134 135 144 145 146 147


state 0

    0 $accept: . compilation_unit $end
    1 compilation_unit: . program
    2                 | . error '\n'
    3 program: . stmt_list
    4        | . import
    5        | . namespace_decl
    6        | . function_define
    7 namespace_decl: . NAMESPACE namespace_path namespace_body
   19 import: . IMPORT STRING_LITERAL
   54 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
   77 typename_T: . IDENT typename_group
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  120 stmt_list: . stmt
  121          | . stmt_list stmt
  122 stmt: . expression stmt_term
  123     | . variable_decl_stmt
  124     | . variable_init_stmt
  125     | . inferenced_type_init_stmt
  126     | . if_stmt
  127     | . while_stmt
  128     | . break_stmt
  129     | . continue_stmt
  130     | . return_stmt
  131     | . throw_stmt
  132     | . try_stmt
  133 variable_decl_stmt: . typename_T IDENT SEMI
  134 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  135 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  136 if_stmt: . IF LRB expression RRB scope
  137        | . IF LRB expression RRB scope ELSE scope
  138        | . IF LRB expression RRB scope elif_list
  139        | . IF LRB expression RRB scope elif_list ELSE scope
  143 while_stmt: . WHILE LRB expression RRB scope_optional
  144 break_stmt: . BREAK stmt_term
  145 continue_stmt: . CONTINUE stmt_term
  146 return_stmt: . RETURN expression stmt_term
  147 throw_stmt: . THROW expression stmt_term
  148 try_stmt: . TRY scope catch_stmt_list

    error           shift, and go to state 1
    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    IMPORT          shift, and go to state 12
    VAR             shift, and go to state 13
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16
    DEF             shift, and go to state 17
    NAMESPACE       shift, and go to state 18
    RETURN          shift, and go to state 19
    IF              shift, and go to state 20
    WHILE           shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    TRY             shift, and go to state 24
    THROW           shift, and go to state 25

    compilation_unit           go to state 26
    program                    go to state 27
    namespace_decl             go to state 28
    import                     go to state 29
    function_define            go to state 30
    typename_T                 go to state 31
    expression                 go to state 32
    primary                    go to state 33
    stmt_list                  go to state 34
    stmt                       go to state 35
    variable_decl_stmt         go to state 36
    variable_init_stmt         go to state 37
    inferenced_type_init_stmt  go to state 38
    if_stmt                    go to state 39
    while_stmt                 go to state 40
    break_stmt                 go to state 41
    continue_stmt              go to state 42
    return_stmt                go to state 43
    throw_stmt                 go to state 44
    try_stmt                   go to state 45


state 1

    2 compilation_unit: error . '\n'

    '\n'  shift, and go to state 46


state 2

  115 primary: CHAR_LITERAL .

    $default  reduce using rule 115 (primary)


state 3

  116 primary: STRING_LITERAL .

    $default  reduce using rule 116 (primary)


state 4

  113 primary: INT .

    $default  reduce using rule 113 (primary)


state 5

  114 primary: DOUBLE .

    $default  reduce using rule 114 (primary)


state 6

   73 typename_group: .  [IDENT, COMMA, LCB, RRB, SEMI, '>']
   74               | . '<' typename_list '>'
   77 typename_T: IDENT . typename_group

    '<'  shift, and go to state 47

    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 48


state 7

   78 expression: . primary
   79           | . ADD expression
   79           | ADD . expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 49
    primary     go to state 33


state 8

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   80           | SUB . expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 50
    primary     go to state 33


state 9

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  111           | NOT . expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 51
    primary     go to state 33


state 10

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  110           | CHILDA . expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 52
    primary     go to state 33


state 11

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  112           | LRB . expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 53
    primary     go to state 33


state 12

   19 import: IMPORT . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 54


state 13

  135 inferenced_type_init_stmt: VAR . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 55


state 14

  117 primary: TRUE_TOK .

    $default  reduce using rule 117 (primary)


state 15

  118 primary: FALSE_TOK .

    $default  reduce using rule 118 (primary)


state 16

  119 primary: NULL_TOK .

    $default  reduce using rule 119 (primary)


state 17

   54 function_define: DEF . IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF . IDENT LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 56


state 18

    7 namespace_decl: NAMESPACE . namespace_path namespace_body
   17 namespace_path: . IDENT
   18               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 57

    namespace_path  go to state 58


state 19

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  146 return_stmt: RETURN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 59
    primary     go to state 33


state 20

  136 if_stmt: IF . LRB expression RRB scope
  137        | IF . LRB expression RRB scope ELSE scope
  138        | IF . LRB expression RRB scope elif_list
  139        | IF . LRB expression RRB scope elif_list ELSE scope

    LRB  shift, and go to state 60


state 21

  143 while_stmt: WHILE . LRB expression RRB scope_optional

    LRB  shift, and go to state 61


state 22

  144 break_stmt: BREAK . stmt_term
  156 stmt_term: . SEMI
  157          | .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    SEMI  shift, and go to state 62

    $default  reduce using rule 157 (stmt_term)

    stmt_term  go to state 63


state 23

  145 continue_stmt: CONTINUE . stmt_term
  156 stmt_term: . SEMI
  157          | .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    SEMI  shift, and go to state 62

    $default  reduce using rule 157 (stmt_term)

    stmt_term  go to state 64


state 24

  148 try_stmt: TRY . scope catch_stmt_list
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB

    LCB  shift, and go to state 65

    scope  go to state 66


state 25

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  147 throw_stmt: THROW . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 67
    primary     go to state 33


state 26

    0 $accept: compilation_unit . $end

    $end  shift, and go to state 68


state 27

    1 compilation_unit: program .

    $default  reduce using rule 1 (compilation_unit)


state 28

    5 program: namespace_decl .

    $default  reduce using rule 5 (program)


state 29

    4 program: import .

    $default  reduce using rule 4 (program)


state 30

    6 program: function_define .

    $default  reduce using rule 6 (program)


state 31

  133 variable_decl_stmt: typename_T . IDENT SEMI
  134 variable_init_stmt: typename_T . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 69


state 32

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  122 stmt: expression . stmt_term
  156 stmt_term: . SEMI
  157          | .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    SEMI           shift, and go to state 62

    ADD       [reduce using rule 157 (stmt_term)]
    SUB       [reduce using rule 157 (stmt_term)]
    $default  reduce using rule 157 (stmt_term)

    stmt_term  go to state 99


state 33

   78 expression: primary .

    $default  reduce using rule 78 (expression)


state 34

    3 program: stmt_list .  [$end]
   77 typename_T: . IDENT typename_group
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  121 stmt_list: stmt_list . stmt
  122 stmt: . expression stmt_term
  123     | . variable_decl_stmt
  124     | . variable_init_stmt
  125     | . inferenced_type_init_stmt
  126     | . if_stmt
  127     | . while_stmt
  128     | . break_stmt
  129     | . continue_stmt
  130     | . return_stmt
  131     | . throw_stmt
  132     | . try_stmt
  133 variable_decl_stmt: . typename_T IDENT SEMI
  134 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  135 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  136 if_stmt: . IF LRB expression RRB scope
  137        | . IF LRB expression RRB scope ELSE scope
  138        | . IF LRB expression RRB scope elif_list
  139        | . IF LRB expression RRB scope elif_list ELSE scope
  143 while_stmt: . WHILE LRB expression RRB scope_optional
  144 break_stmt: . BREAK stmt_term
  145 continue_stmt: . CONTINUE stmt_term
  146 return_stmt: . RETURN expression stmt_term
  147 throw_stmt: . THROW expression stmt_term
  148 try_stmt: . TRY scope catch_stmt_list

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16
    RETURN          shift, and go to state 19
    IF              shift, and go to state 20
    WHILE           shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    TRY             shift, and go to state 24
    THROW           shift, and go to state 25

    $default  reduce using rule 3 (program)

    typename_T                 go to state 31
    expression                 go to state 32
    primary                    go to state 33
    stmt                       go to state 100
    variable_decl_stmt         go to state 36
    variable_init_stmt         go to state 37
    inferenced_type_init_stmt  go to state 38
    if_stmt                    go to state 39
    while_stmt                 go to state 40
    break_stmt                 go to state 41
    continue_stmt              go to state 42
    return_stmt                go to state 43
    throw_stmt                 go to state 44
    try_stmt                   go to state 45


state 35

  120 stmt_list: stmt .

    $default  reduce using rule 120 (stmt_list)


state 36

  123 stmt: variable_decl_stmt .

    $default  reduce using rule 123 (stmt)


state 37

  124 stmt: variable_init_stmt .

    $default  reduce using rule 124 (stmt)


state 38

  125 stmt: inferenced_type_init_stmt .

    $default  reduce using rule 125 (stmt)


state 39

  126 stmt: if_stmt .

    $default  reduce using rule 126 (stmt)


state 40

  127 stmt: while_stmt .

    $default  reduce using rule 127 (stmt)


state 41

  128 stmt: break_stmt .

    $default  reduce using rule 128 (stmt)


state 42

  129 stmt: continue_stmt .

    $default  reduce using rule 129 (stmt)


state 43

  130 stmt: return_stmt .

    $default  reduce using rule 130 (stmt)


state 44

  131 stmt: throw_stmt .

    $default  reduce using rule 131 (stmt)


state 45

  132 stmt: try_stmt .

    $default  reduce using rule 132 (stmt)


state 46

    2 compilation_unit: error '\n' .

    $default  reduce using rule 2 (compilation_unit)


state 47

   74 typename_group: '<' . typename_list '>'
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_list  go to state 101
    typename_T     go to state 102


state 48

   77 typename_T: IDENT typename_group .

    $default  reduce using rule 77 (typename_T)


state 49

   79 expression: ADD expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   81           | expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token ADD resolved as reduce (ADD < POSITIVE).
    Conflict between rule 79 and token SUB resolved as reduce (SUB < POSITIVE).
    Conflict between rule 79 and token MUL resolved as reduce (MUL < POSITIVE).
    Conflict between rule 79 and token DIV resolved as reduce (DIV < POSITIVE).
    Conflict between rule 79 and token MOD resolved as reduce (MOD < POSITIVE).
    Conflict between rule 79 and token LSHIFT resolved as reduce (LSHIFT < POSITIVE).
    Conflict between rule 79 and token RSHIFT resolved as reduce (RSHIFT < POSITIVE).
    Conflict between rule 79 and token EQUAL resolved as reduce (EQUAL < POSITIVE).
    Conflict between rule 79 and token NOTEQUAL resolved as reduce (NOTEQUAL < POSITIVE).
    Conflict between rule 79 and token GT resolved as reduce (GT < POSITIVE).
    Conflict between rule 79 and token GE resolved as reduce (GE < POSITIVE).
    Conflict between rule 79 and token LT resolved as reduce (LT < POSITIVE).
    Conflict between rule 79 and token LE resolved as reduce (LE < POSITIVE).
    Conflict between rule 79 and token BIT_AND resolved as reduce (BIT_AND < POSITIVE).
    Conflict between rule 79 and token LOGIC_AND resolved as reduce (LOGIC_AND < POSITIVE).
    Conflict between rule 79 and token BIT_OR resolved as reduce (BIT_OR < POSITIVE).
    Conflict between rule 79 and token LOGIC_OR resolved as reduce (LOGIC_OR < POSITIVE).
    Conflict between rule 79 and token ASSIGN resolved as shift (POSITIVE < ASSIGN).
    Conflict between rule 79 and token ADD_ASSIGN resolved as shift (POSITIVE < ADD_ASSIGN).
    Conflict between rule 79 and token SUB_ASSIGN resolved as shift (POSITIVE < SUB_ASSIGN).
    Conflict between rule 79 and token MUL_ASSIGN resolved as shift (POSITIVE < MUL_ASSIGN).
    Conflict between rule 79 and token DIV_ASSIGN resolved as shift (POSITIVE < DIV_ASSIGN).
    Conflict between rule 79 and token MOD_ASSIGN resolved as shift (POSITIVE < MOD_ASSIGN).
    Conflict between rule 79 and token AND_ASSIGN resolved as shift (POSITIVE < AND_ASSIGN).
    Conflict between rule 79 and token OR_ASSIGN resolved as shift (POSITIVE < OR_ASSIGN).
    Conflict between rule 79 and token LSHIFT_ASSIGN resolved as shift (POSITIVE < LSHIFT_ASSIGN).
    Conflict between rule 79 and token RSHIFT_ASSIGN resolved as shift (POSITIVE < RSHIFT_ASSIGN).
    Conflict between rule 79 and token EXC_OR_ASSIGN resolved as shift (POSITIVE < EXC_OR_ASSIGN).
    Conflict between rule 79 and token EXC_OR resolved as reduce (EXC_OR < POSITIVE).


state 50

   80 expression: SUB expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   81           | expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token ADD resolved as reduce (ADD < NEGATIVE).
    Conflict between rule 80 and token SUB resolved as reduce (SUB < NEGATIVE).
    Conflict between rule 80 and token MUL resolved as reduce (MUL < NEGATIVE).
    Conflict between rule 80 and token DIV resolved as reduce (DIV < NEGATIVE).
    Conflict between rule 80 and token MOD resolved as reduce (MOD < NEGATIVE).
    Conflict between rule 80 and token LSHIFT resolved as reduce (LSHIFT < NEGATIVE).
    Conflict between rule 80 and token RSHIFT resolved as reduce (RSHIFT < NEGATIVE).
    Conflict between rule 80 and token EQUAL resolved as reduce (EQUAL < NEGATIVE).
    Conflict between rule 80 and token NOTEQUAL resolved as reduce (NOTEQUAL < NEGATIVE).
    Conflict between rule 80 and token GT resolved as reduce (GT < NEGATIVE).
    Conflict between rule 80 and token GE resolved as reduce (GE < NEGATIVE).
    Conflict between rule 80 and token LT resolved as reduce (LT < NEGATIVE).
    Conflict between rule 80 and token LE resolved as reduce (LE < NEGATIVE).
    Conflict between rule 80 and token BIT_AND resolved as reduce (BIT_AND < NEGATIVE).
    Conflict between rule 80 and token LOGIC_AND resolved as reduce (LOGIC_AND < NEGATIVE).
    Conflict between rule 80 and token BIT_OR resolved as reduce (BIT_OR < NEGATIVE).
    Conflict between rule 80 and token LOGIC_OR resolved as reduce (LOGIC_OR < NEGATIVE).
    Conflict between rule 80 and token ASSIGN resolved as shift (NEGATIVE < ASSIGN).
    Conflict between rule 80 and token ADD_ASSIGN resolved as shift (NEGATIVE < ADD_ASSIGN).
    Conflict between rule 80 and token SUB_ASSIGN resolved as shift (NEGATIVE < SUB_ASSIGN).
    Conflict between rule 80 and token MUL_ASSIGN resolved as shift (NEGATIVE < MUL_ASSIGN).
    Conflict between rule 80 and token DIV_ASSIGN resolved as shift (NEGATIVE < DIV_ASSIGN).
    Conflict between rule 80 and token MOD_ASSIGN resolved as shift (NEGATIVE < MOD_ASSIGN).
    Conflict between rule 80 and token AND_ASSIGN resolved as shift (NEGATIVE < AND_ASSIGN).
    Conflict between rule 80 and token OR_ASSIGN resolved as shift (NEGATIVE < OR_ASSIGN).
    Conflict between rule 80 and token LSHIFT_ASSIGN resolved as shift (NEGATIVE < LSHIFT_ASSIGN).
    Conflict between rule 80 and token RSHIFT_ASSIGN resolved as shift (NEGATIVE < RSHIFT_ASSIGN).
    Conflict between rule 80 and token EXC_OR_ASSIGN resolved as shift (NEGATIVE < EXC_OR_ASSIGN).
    Conflict between rule 80 and token EXC_OR resolved as reduce (EXC_OR < NEGATIVE).


state 51

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  111           | NOT expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    $default  reduce using rule 111 (expression)

    Conflict between rule 111 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 111 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 111 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 111 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 111 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 111 and token LSHIFT resolved as reduce (LSHIFT < NOT).
    Conflict between rule 111 and token RSHIFT resolved as reduce (RSHIFT < NOT).
    Conflict between rule 111 and token EQUAL resolved as reduce (EQUAL < NOT).
    Conflict between rule 111 and token NOTEQUAL resolved as reduce (NOTEQUAL < NOT).
    Conflict between rule 111 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 111 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 111 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 111 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 111 and token BIT_AND resolved as reduce (BIT_AND < NOT).
    Conflict between rule 111 and token LOGIC_AND resolved as reduce (LOGIC_AND < NOT).
    Conflict between rule 111 and token BIT_OR resolved as reduce (BIT_OR < NOT).
    Conflict between rule 111 and token LOGIC_OR resolved as reduce (LOGIC_OR < NOT).
    Conflict between rule 111 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 111 and token ADD_ASSIGN resolved as reduce (ADD_ASSIGN < NOT).
    Conflict between rule 111 and token SUB_ASSIGN resolved as reduce (SUB_ASSIGN < NOT).
    Conflict between rule 111 and token MUL_ASSIGN resolved as reduce (MUL_ASSIGN < NOT).
    Conflict between rule 111 and token DIV_ASSIGN resolved as reduce (DIV_ASSIGN < NOT).
    Conflict between rule 111 and token MOD_ASSIGN resolved as reduce (MOD_ASSIGN < NOT).
    Conflict between rule 111 and token AND_ASSIGN resolved as reduce (AND_ASSIGN < NOT).
    Conflict between rule 111 and token OR_ASSIGN resolved as reduce (OR_ASSIGN < NOT).
    Conflict between rule 111 and token LSHIFT_ASSIGN resolved as reduce (LSHIFT_ASSIGN < NOT).
    Conflict between rule 111 and token RSHIFT_ASSIGN resolved as reduce (RSHIFT_ASSIGN < NOT).
    Conflict between rule 111 and token EXC_OR_ASSIGN resolved as reduce (EXC_OR_ASSIGN < NOT).
    Conflict between rule 111 and token EXC_OR resolved as reduce (EXC_OR < NOT).


state 52

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  110           | CHILDA expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    $default  reduce using rule 110 (expression)

    Conflict between rule 110 and token ADD resolved as reduce (ADD < CHILDA).
    Conflict between rule 110 and token SUB resolved as reduce (SUB < CHILDA).
    Conflict between rule 110 and token MUL resolved as reduce (MUL < CHILDA).
    Conflict between rule 110 and token DIV resolved as reduce (DIV < CHILDA).
    Conflict between rule 110 and token MOD resolved as reduce (MOD < CHILDA).
    Conflict between rule 110 and token LSHIFT resolved as reduce (LSHIFT < CHILDA).
    Conflict between rule 110 and token RSHIFT resolved as reduce (RSHIFT < CHILDA).
    Conflict between rule 110 and token EQUAL resolved as reduce (EQUAL < CHILDA).
    Conflict between rule 110 and token NOTEQUAL resolved as reduce (NOTEQUAL < CHILDA).
    Conflict between rule 110 and token GT resolved as reduce (GT < CHILDA).
    Conflict between rule 110 and token GE resolved as reduce (GE < CHILDA).
    Conflict between rule 110 and token LT resolved as reduce (LT < CHILDA).
    Conflict between rule 110 and token LE resolved as reduce (LE < CHILDA).
    Conflict between rule 110 and token BIT_AND resolved as reduce (BIT_AND < CHILDA).
    Conflict between rule 110 and token LOGIC_AND resolved as reduce (LOGIC_AND < CHILDA).
    Conflict between rule 110 and token BIT_OR resolved as reduce (BIT_OR < CHILDA).
    Conflict between rule 110 and token LOGIC_OR resolved as reduce (LOGIC_OR < CHILDA).
    Conflict between rule 110 and token ASSIGN resolved as reduce (ASSIGN < CHILDA).
    Conflict between rule 110 and token ADD_ASSIGN resolved as reduce (ADD_ASSIGN < CHILDA).
    Conflict between rule 110 and token SUB_ASSIGN resolved as reduce (SUB_ASSIGN < CHILDA).
    Conflict between rule 110 and token MUL_ASSIGN resolved as reduce (MUL_ASSIGN < CHILDA).
    Conflict between rule 110 and token DIV_ASSIGN resolved as reduce (DIV_ASSIGN < CHILDA).
    Conflict between rule 110 and token MOD_ASSIGN resolved as reduce (MOD_ASSIGN < CHILDA).
    Conflict between rule 110 and token AND_ASSIGN resolved as reduce (AND_ASSIGN < CHILDA).
    Conflict between rule 110 and token OR_ASSIGN resolved as reduce (OR_ASSIGN < CHILDA).
    Conflict between rule 110 and token LSHIFT_ASSIGN resolved as reduce (LSHIFT_ASSIGN < CHILDA).
    Conflict between rule 110 and token RSHIFT_ASSIGN resolved as reduce (RSHIFT_ASSIGN < CHILDA).
    Conflict between rule 110 and token EXC_OR_ASSIGN resolved as reduce (EXC_OR_ASSIGN < CHILDA).
    Conflict between rule 110 and token EXC_OR resolved as reduce (EXC_OR < CHILDA).


state 53

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  112           | LRB expression . RRB

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    RRB            shift, and go to state 103


state 54

   19 import: IMPORT STRING_LITERAL .

    $default  reduce using rule 19 (import)


state 55

  135 inferenced_type_init_stmt: VAR IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 104


state 56

   54 function_define: DEF IDENT . LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 105


state 57

   17 namespace_path: IDENT .

    $default  reduce using rule 17 (namespace_path)


state 58

    7 namespace_decl: NAMESPACE namespace_path . namespace_body
    8 namespace_body: . LCB namespace_member_decl_optional RCB
   18 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 106
    LCB  shift, and go to state 107

    namespace_body  go to state 108


state 59

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  146 return_stmt: RETURN expression . stmt_term
  156 stmt_term: . SEMI
  157          | .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    SEMI           shift, and go to state 62

    ADD       [reduce using rule 157 (stmt_term)]
    SUB       [reduce using rule 157 (stmt_term)]
    $default  reduce using rule 157 (stmt_term)

    stmt_term  go to state 109


state 60

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  136 if_stmt: IF LRB . expression RRB scope
  137        | IF LRB . expression RRB scope ELSE scope
  138        | IF LRB . expression RRB scope elif_list
  139        | IF LRB . expression RRB scope elif_list ELSE scope

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 110
    primary     go to state 33


state 61

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  143 while_stmt: WHILE LRB . expression RRB scope_optional

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 111
    primary     go to state 33


state 62

  156 stmt_term: SEMI .

    $default  reduce using rule 156 (stmt_term)


state 63

  144 break_stmt: BREAK stmt_term .

    $default  reduce using rule 144 (break_stmt)


state 64

  145 continue_stmt: CONTINUE stmt_term .

    $default  reduce using rule 145 (continue_stmt)


state 65

   77 typename_T: . IDENT typename_group
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  120 stmt_list: . stmt
  121          | . stmt_list stmt
  122 stmt: . expression stmt_term
  123     | . variable_decl_stmt
  124     | . variable_init_stmt
  125     | . inferenced_type_init_stmt
  126     | . if_stmt
  127     | . while_stmt
  128     | . break_stmt
  129     | . continue_stmt
  130     | . return_stmt
  131     | . throw_stmt
  132     | . try_stmt
  133 variable_decl_stmt: . typename_T IDENT SEMI
  134 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  135 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  136 if_stmt: . IF LRB expression RRB scope
  137        | . IF LRB expression RRB scope ELSE scope
  138        | . IF LRB expression RRB scope elif_list
  139        | . IF LRB expression RRB scope elif_list ELSE scope
  143 while_stmt: . WHILE LRB expression RRB scope_optional
  144 break_stmt: . BREAK stmt_term
  145 continue_stmt: . CONTINUE stmt_term
  146 return_stmt: . RETURN expression stmt_term
  147 throw_stmt: . THROW expression stmt_term
  148 try_stmt: . TRY scope catch_stmt_list
  152 scope: LCB . stmt_list RCB
  153      | LCB . RCB

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    RCB             shift, and go to state 112
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16
    RETURN          shift, and go to state 19
    IF              shift, and go to state 20
    WHILE           shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    TRY             shift, and go to state 24
    THROW           shift, and go to state 25

    typename_T                 go to state 31
    expression                 go to state 32
    primary                    go to state 33
    stmt_list                  go to state 113
    stmt                       go to state 35
    variable_decl_stmt         go to state 36
    variable_init_stmt         go to state 37
    inferenced_type_init_stmt  go to state 38
    if_stmt                    go to state 39
    while_stmt                 go to state 40
    break_stmt                 go to state 41
    continue_stmt              go to state 42
    return_stmt                go to state 43
    throw_stmt                 go to state 44
    try_stmt                   go to state 45


state 66

  148 try_stmt: TRY scope . catch_stmt_list
  149 catch_stmt_list: . catch_stmt
  150                | . catch_stmt_list catch_stmt
  151 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 114

    catch_stmt_list  go to state 115
    catch_stmt       go to state 116


state 67

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  147 throw_stmt: THROW expression . stmt_term
  156 stmt_term: . SEMI
  157          | .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    SEMI           shift, and go to state 62

    ADD       [reduce using rule 157 (stmt_term)]
    SUB       [reduce using rule 157 (stmt_term)]
    $default  reduce using rule 157 (stmt_term)

    stmt_term  go to state 117


state 68

    0 $accept: compilation_unit $end .

    $default  accept


state 69

  133 variable_decl_stmt: typename_T IDENT . SEMI
  134 variable_init_stmt: typename_T IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 118
    SEMI    shift, and go to state 119


state 70

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   81           | expression ADD . expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 120
    primary     go to state 33


state 71

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   82           | expression SUB . expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 121
    primary     go to state 33


state 72

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   83           | expression MUL . expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 122
    primary     go to state 33


state 73

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   84           | expression DIV . expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 123
    primary     go to state 33


state 74

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   85           | expression MOD . expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 124
    primary     go to state 33


state 75

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  108           | expression LSHIFT . expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 125
    primary     go to state 33


state 76

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  109           | expression RSHIFT . expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 126
    primary     go to state 33


state 77

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   87           | expression EQUAL . expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 127
    primary     go to state 33


state 78

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   88           | expression NOTEQUAL . expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 128
    primary     go to state 33


state 79

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  104           | expression GT . expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 129
    primary     go to state 33


state 80

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  105           | expression GE . expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 130
    primary     go to state 33


state 81

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  106           | expression LT . expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 131
    primary     go to state 33


state 82

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  107           | expression LE . expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 132
    primary     go to state 33


state 83

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   89           | expression BIT_AND . expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 133
    primary     go to state 33


state 84

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   92           | expression LOGIC_AND . expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 134
    primary     go to state 33


state 85

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   86           | expression BIT_OR . expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 135
    primary     go to state 33


state 86

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   91           | expression LOGIC_OR . expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 136
    primary     go to state 33


state 87

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   93           | expression ASSIGN . expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 137
    primary     go to state 33


state 88

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   94           | expression ADD_ASSIGN . expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 138
    primary     go to state 33


state 89

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   95           | expression SUB_ASSIGN . expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 139
    primary     go to state 33


state 90

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   96           | expression MUL_ASSIGN . expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 140
    primary     go to state 33


state 91

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   97           | expression DIV_ASSIGN . expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 141
    primary     go to state 33


state 92

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   98           | expression MOD_ASSIGN . expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 142
    primary     go to state 33


state 93

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
   99           | expression AND_ASSIGN . expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 143
    primary     go to state 33


state 94

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  100           | expression OR_ASSIGN . expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 144
    primary     go to state 33


state 95

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  102           | expression LSHIFT_ASSIGN . expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 145
    primary     go to state 33


state 96

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  103           | expression RSHIFT_ASSIGN . expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 146
    primary     go to state 33


state 97

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  101           | expression EXC_OR_ASSIGN . expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 147
    primary     go to state 33


state 98

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   90           | expression EXC_OR . expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 148
    primary     go to state 33


state 99

  122 stmt: expression stmt_term .

    $default  reduce using rule 122 (stmt)


state 100

  121 stmt_list: stmt_list stmt .

    $default  reduce using rule 121 (stmt_list)


state 101

   74 typename_group: '<' typename_list . '>'
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 149
    '>'    shift, and go to state 150


state 102

   75 typename_list: typename_T .

    $default  reduce using rule 75 (typename_list)


state 103

  112 expression: LRB expression RRB .

    $default  reduce using rule 112 (expression)


state 104

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  135 inferenced_type_init_stmt: VAR IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 151
    primary     go to state 33


state 105

   54 function_define: DEF IDENT LRB . parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT LRB . RRB ARROW typename_T scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 152

    parameter_list  go to state 153
    typename_T      go to state 154


state 106

   18 namespace_path: namespace_path DOT . IDENT

    IDENT  shift, and go to state 155


state 107

    8 namespace_body: LCB . namespace_member_decl_optional RCB
    9 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   10                      | . class_decl
   11                      | . interface_decl
   12                      | . enum_decl
   13 namespace_member_decl_list: . namespace_member_decl
   14                           | . namespace_member_decl_list namespace_member_decl
   15 namespace_member_decl_optional: .  [RCB]
   16                               | . namespace_member_decl_list
   30 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   32 enum_decl: . ENUM IDENT LCB ident_list RCB
   33          | . ENUM IDENT LCB ident_list COMMA RCB
   34 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 156
    CLASS      shift, and go to state 157
    ENUM       shift, and go to state 158
    NAMESPACE  shift, and go to state 159

    $default  reduce using rule 15 (namespace_member_decl_optional)

    namespace_member_decl           go to state 160
    namespace_member_decl_list      go to state 161
    namespace_member_decl_optional  go to state 162
    class_decl                      go to state 163
    enum_decl                       go to state 164
    interface_decl                  go to state 165


state 108

    7 namespace_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 7 (namespace_decl)


state 109

  146 return_stmt: RETURN expression stmt_term .

    $default  reduce using rule 146 (return_stmt)


state 110

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  136 if_stmt: IF LRB expression . RRB scope
  137        | IF LRB expression . RRB scope ELSE scope
  138        | IF LRB expression . RRB scope elif_list
  139        | IF LRB expression . RRB scope elif_list ELSE scope

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    RRB            shift, and go to state 166


state 111

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  143 while_stmt: WHILE LRB expression . RRB scope_optional

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    RRB            shift, and go to state 167


state 112

  153 scope: LCB RCB .

    $default  reduce using rule 153 (scope)


state 113

   77 typename_T: . IDENT typename_group
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  121 stmt_list: stmt_list . stmt
  122 stmt: . expression stmt_term
  123     | . variable_decl_stmt
  124     | . variable_init_stmt
  125     | . inferenced_type_init_stmt
  126     | . if_stmt
  127     | . while_stmt
  128     | . break_stmt
  129     | . continue_stmt
  130     | . return_stmt
  131     | . throw_stmt
  132     | . try_stmt
  133 variable_decl_stmt: . typename_T IDENT SEMI
  134 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  135 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  136 if_stmt: . IF LRB expression RRB scope
  137        | . IF LRB expression RRB scope ELSE scope
  138        | . IF LRB expression RRB scope elif_list
  139        | . IF LRB expression RRB scope elif_list ELSE scope
  143 while_stmt: . WHILE LRB expression RRB scope_optional
  144 break_stmt: . BREAK stmt_term
  145 continue_stmt: . CONTINUE stmt_term
  146 return_stmt: . RETURN expression stmt_term
  147 throw_stmt: . THROW expression stmt_term
  148 try_stmt: . TRY scope catch_stmt_list
  152 scope: LCB stmt_list . RCB

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    RCB             shift, and go to state 168
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16
    RETURN          shift, and go to state 19
    IF              shift, and go to state 20
    WHILE           shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    TRY             shift, and go to state 24
    THROW           shift, and go to state 25

    typename_T                 go to state 31
    expression                 go to state 32
    primary                    go to state 33
    stmt                       go to state 100
    variable_decl_stmt         go to state 36
    variable_init_stmt         go to state 37
    inferenced_type_init_stmt  go to state 38
    if_stmt                    go to state 39
    while_stmt                 go to state 40
    break_stmt                 go to state 41
    continue_stmt              go to state 42
    return_stmt                go to state 43
    throw_stmt                 go to state 44
    try_stmt                   go to state 45


state 114

  151 catch_stmt: CATCH . LRB typename_T IDENT RRB scope

    LRB  shift, and go to state 169


state 115

  148 try_stmt: TRY scope catch_stmt_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  150 catch_stmt_list: catch_stmt_list . catch_stmt
  151 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 114

    $default  reduce using rule 148 (try_stmt)

    catch_stmt  go to state 170


state 116

  149 catch_stmt_list: catch_stmt .

    $default  reduce using rule 149 (catch_stmt_list)


state 117

  147 throw_stmt: THROW expression stmt_term .

    $default  reduce using rule 147 (throw_stmt)


state 118

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  134 variable_init_stmt: typename_T IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 171
    primary     go to state 33


state 119

  133 variable_decl_stmt: typename_T IDENT SEMI .

    $default  reduce using rule 133 (variable_decl_stmt)


state 120

   81 expression: expression . ADD expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   81           | expression ADD expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 81 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 81 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 81 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 81 and token MOD resolved as shift (ADD < MOD).
    Conflict between rule 81 and token LSHIFT resolved as reduce (LSHIFT < ADD).
    Conflict between rule 81 and token RSHIFT resolved as reduce (RSHIFT < ADD).
    Conflict between rule 81 and token EQUAL resolved as reduce (EQUAL < ADD).
    Conflict between rule 81 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD).
    Conflict between rule 81 and token GT resolved as reduce (GT < ADD).
    Conflict between rule 81 and token GE resolved as reduce (GE < ADD).
    Conflict between rule 81 and token LT resolved as reduce (LT < ADD).
    Conflict between rule 81 and token LE resolved as reduce (LE < ADD).
    Conflict between rule 81 and token BIT_AND resolved as reduce (BIT_AND < ADD).
    Conflict between rule 81 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD).
    Conflict between rule 81 and token BIT_OR resolved as reduce (BIT_OR < ADD).
    Conflict between rule 81 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD).
    Conflict between rule 81 and token ASSIGN resolved as shift (ADD < ASSIGN).
    Conflict between rule 81 and token ADD_ASSIGN resolved as shift (ADD < ADD_ASSIGN).
    Conflict between rule 81 and token SUB_ASSIGN resolved as shift (ADD < SUB_ASSIGN).
    Conflict between rule 81 and token MUL_ASSIGN resolved as shift (ADD < MUL_ASSIGN).
    Conflict between rule 81 and token DIV_ASSIGN resolved as shift (ADD < DIV_ASSIGN).
    Conflict between rule 81 and token MOD_ASSIGN resolved as shift (ADD < MOD_ASSIGN).
    Conflict between rule 81 and token AND_ASSIGN resolved as shift (ADD < AND_ASSIGN).
    Conflict between rule 81 and token OR_ASSIGN resolved as shift (ADD < OR_ASSIGN).
    Conflict between rule 81 and token LSHIFT_ASSIGN resolved as shift (ADD < LSHIFT_ASSIGN).
    Conflict between rule 81 and token RSHIFT_ASSIGN resolved as shift (ADD < RSHIFT_ASSIGN).
    Conflict between rule 81 and token EXC_OR_ASSIGN resolved as shift (ADD < EXC_OR_ASSIGN).
    Conflict between rule 81 and token EXC_OR resolved as reduce (EXC_OR < ADD).


state 121

   81 expression: expression . ADD expression
   82           | expression . SUB expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   82           | expression SUB expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 82 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 82 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 82 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 82 and token MOD resolved as shift (SUB < MOD).
    Conflict between rule 82 and token LSHIFT resolved as reduce (LSHIFT < SUB).
    Conflict between rule 82 and token RSHIFT resolved as reduce (RSHIFT < SUB).
    Conflict between rule 82 and token EQUAL resolved as reduce (EQUAL < SUB).
    Conflict between rule 82 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB).
    Conflict between rule 82 and token GT resolved as reduce (GT < SUB).
    Conflict between rule 82 and token GE resolved as reduce (GE < SUB).
    Conflict between rule 82 and token LT resolved as reduce (LT < SUB).
    Conflict between rule 82 and token LE resolved as reduce (LE < SUB).
    Conflict between rule 82 and token BIT_AND resolved as reduce (BIT_AND < SUB).
    Conflict between rule 82 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB).
    Conflict between rule 82 and token BIT_OR resolved as reduce (BIT_OR < SUB).
    Conflict between rule 82 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB).
    Conflict between rule 82 and token ASSIGN resolved as shift (SUB < ASSIGN).
    Conflict between rule 82 and token ADD_ASSIGN resolved as shift (SUB < ADD_ASSIGN).
    Conflict between rule 82 and token SUB_ASSIGN resolved as shift (SUB < SUB_ASSIGN).
    Conflict between rule 82 and token MUL_ASSIGN resolved as shift (SUB < MUL_ASSIGN).
    Conflict between rule 82 and token DIV_ASSIGN resolved as shift (SUB < DIV_ASSIGN).
    Conflict between rule 82 and token MOD_ASSIGN resolved as shift (SUB < MOD_ASSIGN).
    Conflict between rule 82 and token AND_ASSIGN resolved as shift (SUB < AND_ASSIGN).
    Conflict between rule 82 and token OR_ASSIGN resolved as shift (SUB < OR_ASSIGN).
    Conflict between rule 82 and token LSHIFT_ASSIGN resolved as shift (SUB < LSHIFT_ASSIGN).
    Conflict between rule 82 and token RSHIFT_ASSIGN resolved as shift (SUB < RSHIFT_ASSIGN).
    Conflict between rule 82 and token EXC_OR_ASSIGN resolved as shift (SUB < EXC_OR_ASSIGN).
    Conflict between rule 82 and token EXC_OR resolved as reduce (EXC_OR < SUB).


state 122

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   83           | expression MUL expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 83 (expression)

    Conflict between rule 83 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 83 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 83 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 83 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 83 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 83 and token LSHIFT resolved as reduce (LSHIFT < MUL).
    Conflict between rule 83 and token RSHIFT resolved as reduce (RSHIFT < MUL).
    Conflict between rule 83 and token EQUAL resolved as reduce (EQUAL < MUL).
    Conflict between rule 83 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL).
    Conflict between rule 83 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 83 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 83 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 83 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 83 and token BIT_AND resolved as reduce (BIT_AND < MUL).
    Conflict between rule 83 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL).
    Conflict between rule 83 and token BIT_OR resolved as reduce (BIT_OR < MUL).
    Conflict between rule 83 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL).
    Conflict between rule 83 and token ASSIGN resolved as shift (MUL < ASSIGN).
    Conflict between rule 83 and token ADD_ASSIGN resolved as shift (MUL < ADD_ASSIGN).
    Conflict between rule 83 and token SUB_ASSIGN resolved as shift (MUL < SUB_ASSIGN).
    Conflict between rule 83 and token MUL_ASSIGN resolved as shift (MUL < MUL_ASSIGN).
    Conflict between rule 83 and token DIV_ASSIGN resolved as shift (MUL < DIV_ASSIGN).
    Conflict between rule 83 and token MOD_ASSIGN resolved as shift (MUL < MOD_ASSIGN).
    Conflict between rule 83 and token AND_ASSIGN resolved as shift (MUL < AND_ASSIGN).
    Conflict between rule 83 and token OR_ASSIGN resolved as shift (MUL < OR_ASSIGN).
    Conflict between rule 83 and token LSHIFT_ASSIGN resolved as shift (MUL < LSHIFT_ASSIGN).
    Conflict between rule 83 and token RSHIFT_ASSIGN resolved as shift (MUL < RSHIFT_ASSIGN).
    Conflict between rule 83 and token EXC_OR_ASSIGN resolved as shift (MUL < EXC_OR_ASSIGN).
    Conflict between rule 83 and token EXC_OR resolved as reduce (EXC_OR < MUL).


state 123

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   84           | expression DIV expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 84 (expression)

    Conflict between rule 84 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 84 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 84 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 84 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 84 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 84 and token LSHIFT resolved as reduce (LSHIFT < DIV).
    Conflict between rule 84 and token RSHIFT resolved as reduce (RSHIFT < DIV).
    Conflict between rule 84 and token EQUAL resolved as reduce (EQUAL < DIV).
    Conflict between rule 84 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV).
    Conflict between rule 84 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 84 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 84 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 84 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 84 and token BIT_AND resolved as reduce (BIT_AND < DIV).
    Conflict between rule 84 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV).
    Conflict between rule 84 and token BIT_OR resolved as reduce (BIT_OR < DIV).
    Conflict between rule 84 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV).
    Conflict between rule 84 and token ASSIGN resolved as shift (DIV < ASSIGN).
    Conflict between rule 84 and token ADD_ASSIGN resolved as shift (DIV < ADD_ASSIGN).
    Conflict between rule 84 and token SUB_ASSIGN resolved as shift (DIV < SUB_ASSIGN).
    Conflict between rule 84 and token MUL_ASSIGN resolved as shift (DIV < MUL_ASSIGN).
    Conflict between rule 84 and token DIV_ASSIGN resolved as shift (DIV < DIV_ASSIGN).
    Conflict between rule 84 and token MOD_ASSIGN resolved as shift (DIV < MOD_ASSIGN).
    Conflict between rule 84 and token AND_ASSIGN resolved as shift (DIV < AND_ASSIGN).
    Conflict between rule 84 and token OR_ASSIGN resolved as shift (DIV < OR_ASSIGN).
    Conflict between rule 84 and token LSHIFT_ASSIGN resolved as shift (DIV < LSHIFT_ASSIGN).
    Conflict between rule 84 and token RSHIFT_ASSIGN resolved as shift (DIV < RSHIFT_ASSIGN).
    Conflict between rule 84 and token EXC_OR_ASSIGN resolved as shift (DIV < EXC_OR_ASSIGN).
    Conflict between rule 84 and token EXC_OR resolved as reduce (EXC_OR < DIV).


state 124

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   85           | expression MOD expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 85 (expression)

    Conflict between rule 85 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 85 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 85 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 85 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 85 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 85 and token LSHIFT resolved as reduce (LSHIFT < MOD).
    Conflict between rule 85 and token RSHIFT resolved as reduce (RSHIFT < MOD).
    Conflict between rule 85 and token EQUAL resolved as reduce (EQUAL < MOD).
    Conflict between rule 85 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD).
    Conflict between rule 85 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 85 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 85 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 85 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 85 and token BIT_AND resolved as reduce (BIT_AND < MOD).
    Conflict between rule 85 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD).
    Conflict between rule 85 and token BIT_OR resolved as reduce (BIT_OR < MOD).
    Conflict between rule 85 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD).
    Conflict between rule 85 and token ASSIGN resolved as shift (MOD < ASSIGN).
    Conflict between rule 85 and token ADD_ASSIGN resolved as shift (MOD < ADD_ASSIGN).
    Conflict between rule 85 and token SUB_ASSIGN resolved as shift (MOD < SUB_ASSIGN).
    Conflict between rule 85 and token MUL_ASSIGN resolved as shift (MOD < MUL_ASSIGN).
    Conflict between rule 85 and token DIV_ASSIGN resolved as shift (MOD < DIV_ASSIGN).
    Conflict between rule 85 and token MOD_ASSIGN resolved as shift (MOD < MOD_ASSIGN).
    Conflict between rule 85 and token AND_ASSIGN resolved as shift (MOD < AND_ASSIGN).
    Conflict between rule 85 and token OR_ASSIGN resolved as shift (MOD < OR_ASSIGN).
    Conflict between rule 85 and token LSHIFT_ASSIGN resolved as shift (MOD < LSHIFT_ASSIGN).
    Conflict between rule 85 and token RSHIFT_ASSIGN resolved as shift (MOD < RSHIFT_ASSIGN).
    Conflict between rule 85 and token EXC_OR_ASSIGN resolved as shift (MOD < EXC_OR_ASSIGN).
    Conflict between rule 85 and token EXC_OR resolved as reduce (EXC_OR < MOD).


state 125

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  108           | expression LSHIFT expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 108 (expression)

    Conflict between rule 108 and token ADD resolved as shift (LSHIFT < ADD).
    Conflict between rule 108 and token SUB resolved as shift (LSHIFT < SUB).
    Conflict between rule 108 and token MUL resolved as shift (LSHIFT < MUL).
    Conflict between rule 108 and token DIV resolved as shift (LSHIFT < DIV).
    Conflict between rule 108 and token MOD resolved as shift (LSHIFT < MOD).
    Conflict between rule 108 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 108 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 108 and token EQUAL resolved as reduce (EQUAL < LSHIFT).
    Conflict between rule 108 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT).
    Conflict between rule 108 and token GT resolved as reduce (GT < LSHIFT).
    Conflict between rule 108 and token GE resolved as reduce (GE < LSHIFT).
    Conflict between rule 108 and token LT resolved as reduce (LT < LSHIFT).
    Conflict between rule 108 and token LE resolved as reduce (LE < LSHIFT).
    Conflict between rule 108 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT).
    Conflict between rule 108 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT).
    Conflict between rule 108 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT).
    Conflict between rule 108 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT).
    Conflict between rule 108 and token ASSIGN resolved as shift (LSHIFT < ASSIGN).
    Conflict between rule 108 and token ADD_ASSIGN resolved as shift (LSHIFT < ADD_ASSIGN).
    Conflict between rule 108 and token SUB_ASSIGN resolved as shift (LSHIFT < SUB_ASSIGN).
    Conflict between rule 108 and token MUL_ASSIGN resolved as shift (LSHIFT < MUL_ASSIGN).
    Conflict between rule 108 and token DIV_ASSIGN resolved as shift (LSHIFT < DIV_ASSIGN).
    Conflict between rule 108 and token MOD_ASSIGN resolved as shift (LSHIFT < MOD_ASSIGN).
    Conflict between rule 108 and token AND_ASSIGN resolved as shift (LSHIFT < AND_ASSIGN).
    Conflict between rule 108 and token OR_ASSIGN resolved as shift (LSHIFT < OR_ASSIGN).
    Conflict between rule 108 and token LSHIFT_ASSIGN resolved as shift (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 108 and token RSHIFT_ASSIGN resolved as shift (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 108 and token EXC_OR_ASSIGN resolved as shift (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 108 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT).


state 126

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  109           | expression RSHIFT expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 109 (expression)

    Conflict between rule 109 and token ADD resolved as shift (RSHIFT < ADD).
    Conflict between rule 109 and token SUB resolved as shift (RSHIFT < SUB).
    Conflict between rule 109 and token MUL resolved as shift (RSHIFT < MUL).
    Conflict between rule 109 and token DIV resolved as shift (RSHIFT < DIV).
    Conflict between rule 109 and token MOD resolved as shift (RSHIFT < MOD).
    Conflict between rule 109 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 109 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 109 and token EQUAL resolved as reduce (EQUAL < RSHIFT).
    Conflict between rule 109 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT).
    Conflict between rule 109 and token GT resolved as reduce (GT < RSHIFT).
    Conflict between rule 109 and token GE resolved as reduce (GE < RSHIFT).
    Conflict between rule 109 and token LT resolved as reduce (LT < RSHIFT).
    Conflict between rule 109 and token LE resolved as reduce (LE < RSHIFT).
    Conflict between rule 109 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT).
    Conflict between rule 109 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT).
    Conflict between rule 109 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT).
    Conflict between rule 109 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT).
    Conflict between rule 109 and token ASSIGN resolved as shift (RSHIFT < ASSIGN).
    Conflict between rule 109 and token ADD_ASSIGN resolved as shift (RSHIFT < ADD_ASSIGN).
    Conflict between rule 109 and token SUB_ASSIGN resolved as shift (RSHIFT < SUB_ASSIGN).
    Conflict between rule 109 and token MUL_ASSIGN resolved as shift (RSHIFT < MUL_ASSIGN).
    Conflict between rule 109 and token DIV_ASSIGN resolved as shift (RSHIFT < DIV_ASSIGN).
    Conflict between rule 109 and token MOD_ASSIGN resolved as shift (RSHIFT < MOD_ASSIGN).
    Conflict between rule 109 and token AND_ASSIGN resolved as shift (RSHIFT < AND_ASSIGN).
    Conflict between rule 109 and token OR_ASSIGN resolved as shift (RSHIFT < OR_ASSIGN).
    Conflict between rule 109 and token LSHIFT_ASSIGN resolved as shift (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 109 and token RSHIFT_ASSIGN resolved as shift (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 109 and token EXC_OR_ASSIGN resolved as shift (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 109 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT).


state 127

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   87           | expression EQUAL expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 87 (expression)

    Conflict between rule 87 and token ADD resolved as shift (EQUAL < ADD).
    Conflict between rule 87 and token SUB resolved as shift (EQUAL < SUB).
    Conflict between rule 87 and token MUL resolved as shift (EQUAL < MUL).
    Conflict between rule 87 and token DIV resolved as shift (EQUAL < DIV).
    Conflict between rule 87 and token MOD resolved as shift (EQUAL < MOD).
    Conflict between rule 87 and token LSHIFT resolved as shift (EQUAL < LSHIFT).
    Conflict between rule 87 and token RSHIFT resolved as shift (EQUAL < RSHIFT).
    Conflict between rule 87 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 87 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 87 and token GT resolved as shift (EQUAL < GT).
    Conflict between rule 87 and token GE resolved as shift (EQUAL < GE).
    Conflict between rule 87 and token LT resolved as shift (EQUAL < LT).
    Conflict between rule 87 and token LE resolved as shift (EQUAL < LE).
    Conflict between rule 87 and token BIT_AND resolved as shift (EQUAL < BIT_AND).
    Conflict between rule 87 and token LOGIC_AND resolved as shift (EQUAL < LOGIC_AND).
    Conflict between rule 87 and token BIT_OR resolved as shift (EQUAL < BIT_OR).
    Conflict between rule 87 and token LOGIC_OR resolved as shift (EQUAL < LOGIC_OR).
    Conflict between rule 87 and token ASSIGN resolved as shift (EQUAL < ASSIGN).
    Conflict between rule 87 and token ADD_ASSIGN resolved as shift (EQUAL < ADD_ASSIGN).
    Conflict between rule 87 and token SUB_ASSIGN resolved as shift (EQUAL < SUB_ASSIGN).
    Conflict between rule 87 and token MUL_ASSIGN resolved as shift (EQUAL < MUL_ASSIGN).
    Conflict between rule 87 and token DIV_ASSIGN resolved as shift (EQUAL < DIV_ASSIGN).
    Conflict between rule 87 and token MOD_ASSIGN resolved as shift (EQUAL < MOD_ASSIGN).
    Conflict between rule 87 and token AND_ASSIGN resolved as shift (EQUAL < AND_ASSIGN).
    Conflict between rule 87 and token OR_ASSIGN resolved as shift (EQUAL < OR_ASSIGN).
    Conflict between rule 87 and token LSHIFT_ASSIGN resolved as shift (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 87 and token RSHIFT_ASSIGN resolved as shift (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 87 and token EXC_OR_ASSIGN resolved as shift (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 87 and token EXC_OR resolved as shift (EQUAL < EXC_OR).


state 128

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   88           | expression NOTEQUAL expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 88 (expression)

    Conflict between rule 88 and token ADD resolved as shift (NOTEQUAL < ADD).
    Conflict between rule 88 and token SUB resolved as shift (NOTEQUAL < SUB).
    Conflict between rule 88 and token MUL resolved as shift (NOTEQUAL < MUL).
    Conflict between rule 88 and token DIV resolved as shift (NOTEQUAL < DIV).
    Conflict between rule 88 and token MOD resolved as shift (NOTEQUAL < MOD).
    Conflict between rule 88 and token LSHIFT resolved as shift (NOTEQUAL < LSHIFT).
    Conflict between rule 88 and token RSHIFT resolved as shift (NOTEQUAL < RSHIFT).
    Conflict between rule 88 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 88 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 88 and token GT resolved as shift (NOTEQUAL < GT).
    Conflict between rule 88 and token GE resolved as shift (NOTEQUAL < GE).
    Conflict between rule 88 and token LT resolved as shift (NOTEQUAL < LT).
    Conflict between rule 88 and token LE resolved as shift (NOTEQUAL < LE).
    Conflict between rule 88 and token BIT_AND resolved as shift (NOTEQUAL < BIT_AND).
    Conflict between rule 88 and token LOGIC_AND resolved as shift (NOTEQUAL < LOGIC_AND).
    Conflict between rule 88 and token BIT_OR resolved as shift (NOTEQUAL < BIT_OR).
    Conflict between rule 88 and token LOGIC_OR resolved as shift (NOTEQUAL < LOGIC_OR).
    Conflict between rule 88 and token ASSIGN resolved as shift (NOTEQUAL < ASSIGN).
    Conflict between rule 88 and token ADD_ASSIGN resolved as shift (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 88 and token SUB_ASSIGN resolved as shift (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 88 and token MUL_ASSIGN resolved as shift (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 88 and token DIV_ASSIGN resolved as shift (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 88 and token MOD_ASSIGN resolved as shift (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 88 and token AND_ASSIGN resolved as shift (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 88 and token OR_ASSIGN resolved as shift (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 88 and token LSHIFT_ASSIGN resolved as shift (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 88 and token RSHIFT_ASSIGN resolved as shift (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 88 and token EXC_OR_ASSIGN resolved as shift (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 88 and token EXC_OR resolved as shift (NOTEQUAL < EXC_OR).


state 129

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  104           | expression GT expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 104 (expression)

    Conflict between rule 104 and token ADD resolved as shift (GT < ADD).
    Conflict between rule 104 and token SUB resolved as shift (GT < SUB).
    Conflict between rule 104 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 104 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 104 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 104 and token LSHIFT resolved as shift (GT < LSHIFT).
    Conflict between rule 104 and token RSHIFT resolved as shift (GT < RSHIFT).
    Conflict between rule 104 and token EQUAL resolved as reduce (EQUAL < GT).
    Conflict between rule 104 and token NOTEQUAL resolved as reduce (NOTEQUAL < GT).
    Conflict between rule 104 and token GT resolved as reduce (%left GT).
    Conflict between rule 104 and token GE resolved as reduce (%left GE).
    Conflict between rule 104 and token LT resolved as reduce (%left LT).
    Conflict between rule 104 and token LE resolved as reduce (%left LE).
    Conflict between rule 104 and token BIT_AND resolved as shift (GT < BIT_AND).
    Conflict between rule 104 and token LOGIC_AND resolved as shift (GT < LOGIC_AND).
    Conflict between rule 104 and token BIT_OR resolved as shift (GT < BIT_OR).
    Conflict between rule 104 and token LOGIC_OR resolved as shift (GT < LOGIC_OR).
    Conflict between rule 104 and token ASSIGN resolved as shift (GT < ASSIGN).
    Conflict between rule 104 and token ADD_ASSIGN resolved as shift (GT < ADD_ASSIGN).
    Conflict between rule 104 and token SUB_ASSIGN resolved as shift (GT < SUB_ASSIGN).
    Conflict between rule 104 and token MUL_ASSIGN resolved as shift (GT < MUL_ASSIGN).
    Conflict between rule 104 and token DIV_ASSIGN resolved as shift (GT < DIV_ASSIGN).
    Conflict between rule 104 and token MOD_ASSIGN resolved as shift (GT < MOD_ASSIGN).
    Conflict between rule 104 and token AND_ASSIGN resolved as shift (GT < AND_ASSIGN).
    Conflict between rule 104 and token OR_ASSIGN resolved as shift (GT < OR_ASSIGN).
    Conflict between rule 104 and token LSHIFT_ASSIGN resolved as shift (GT < LSHIFT_ASSIGN).
    Conflict between rule 104 and token RSHIFT_ASSIGN resolved as shift (GT < RSHIFT_ASSIGN).
    Conflict between rule 104 and token EXC_OR_ASSIGN resolved as shift (GT < EXC_OR_ASSIGN).
    Conflict between rule 104 and token EXC_OR resolved as shift (GT < EXC_OR).


state 130

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  105           | expression GE expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 105 (expression)

    Conflict between rule 105 and token ADD resolved as shift (GE < ADD).
    Conflict between rule 105 and token SUB resolved as shift (GE < SUB).
    Conflict between rule 105 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 105 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 105 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 105 and token LSHIFT resolved as shift (GE < LSHIFT).
    Conflict between rule 105 and token RSHIFT resolved as shift (GE < RSHIFT).
    Conflict between rule 105 and token EQUAL resolved as reduce (EQUAL < GE).
    Conflict between rule 105 and token NOTEQUAL resolved as reduce (NOTEQUAL < GE).
    Conflict between rule 105 and token GT resolved as reduce (%left GT).
    Conflict between rule 105 and token GE resolved as reduce (%left GE).
    Conflict between rule 105 and token LT resolved as reduce (%left LT).
    Conflict between rule 105 and token LE resolved as reduce (%left LE).
    Conflict between rule 105 and token BIT_AND resolved as shift (GE < BIT_AND).
    Conflict between rule 105 and token LOGIC_AND resolved as shift (GE < LOGIC_AND).
    Conflict between rule 105 and token BIT_OR resolved as shift (GE < BIT_OR).
    Conflict between rule 105 and token LOGIC_OR resolved as shift (GE < LOGIC_OR).
    Conflict between rule 105 and token ASSIGN resolved as shift (GE < ASSIGN).
    Conflict between rule 105 and token ADD_ASSIGN resolved as shift (GE < ADD_ASSIGN).
    Conflict between rule 105 and token SUB_ASSIGN resolved as shift (GE < SUB_ASSIGN).
    Conflict between rule 105 and token MUL_ASSIGN resolved as shift (GE < MUL_ASSIGN).
    Conflict between rule 105 and token DIV_ASSIGN resolved as shift (GE < DIV_ASSIGN).
    Conflict between rule 105 and token MOD_ASSIGN resolved as shift (GE < MOD_ASSIGN).
    Conflict between rule 105 and token AND_ASSIGN resolved as shift (GE < AND_ASSIGN).
    Conflict between rule 105 and token OR_ASSIGN resolved as shift (GE < OR_ASSIGN).
    Conflict between rule 105 and token LSHIFT_ASSIGN resolved as shift (GE < LSHIFT_ASSIGN).
    Conflict between rule 105 and token RSHIFT_ASSIGN resolved as shift (GE < RSHIFT_ASSIGN).
    Conflict between rule 105 and token EXC_OR_ASSIGN resolved as shift (GE < EXC_OR_ASSIGN).
    Conflict between rule 105 and token EXC_OR resolved as shift (GE < EXC_OR).


state 131

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  106           | expression LT expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 106 (expression)

    Conflict between rule 106 and token ADD resolved as shift (LT < ADD).
    Conflict between rule 106 and token SUB resolved as shift (LT < SUB).
    Conflict between rule 106 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 106 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 106 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 106 and token LSHIFT resolved as shift (LT < LSHIFT).
    Conflict between rule 106 and token RSHIFT resolved as shift (LT < RSHIFT).
    Conflict between rule 106 and token EQUAL resolved as reduce (EQUAL < LT).
    Conflict between rule 106 and token NOTEQUAL resolved as reduce (NOTEQUAL < LT).
    Conflict between rule 106 and token GT resolved as reduce (%left GT).
    Conflict between rule 106 and token GE resolved as reduce (%left GE).
    Conflict between rule 106 and token LT resolved as reduce (%left LT).
    Conflict between rule 106 and token LE resolved as reduce (%left LE).
    Conflict between rule 106 and token BIT_AND resolved as shift (LT < BIT_AND).
    Conflict between rule 106 and token LOGIC_AND resolved as shift (LT < LOGIC_AND).
    Conflict between rule 106 and token BIT_OR resolved as shift (LT < BIT_OR).
    Conflict between rule 106 and token LOGIC_OR resolved as shift (LT < LOGIC_OR).
    Conflict between rule 106 and token ASSIGN resolved as shift (LT < ASSIGN).
    Conflict between rule 106 and token ADD_ASSIGN resolved as shift (LT < ADD_ASSIGN).
    Conflict between rule 106 and token SUB_ASSIGN resolved as shift (LT < SUB_ASSIGN).
    Conflict between rule 106 and token MUL_ASSIGN resolved as shift (LT < MUL_ASSIGN).
    Conflict between rule 106 and token DIV_ASSIGN resolved as shift (LT < DIV_ASSIGN).
    Conflict between rule 106 and token MOD_ASSIGN resolved as shift (LT < MOD_ASSIGN).
    Conflict between rule 106 and token AND_ASSIGN resolved as shift (LT < AND_ASSIGN).
    Conflict between rule 106 and token OR_ASSIGN resolved as shift (LT < OR_ASSIGN).
    Conflict between rule 106 and token LSHIFT_ASSIGN resolved as shift (LT < LSHIFT_ASSIGN).
    Conflict between rule 106 and token RSHIFT_ASSIGN resolved as shift (LT < RSHIFT_ASSIGN).
    Conflict between rule 106 and token EXC_OR_ASSIGN resolved as shift (LT < EXC_OR_ASSIGN).
    Conflict between rule 106 and token EXC_OR resolved as shift (LT < EXC_OR).


state 132

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  107           | expression LE expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 107 (expression)

    Conflict between rule 107 and token ADD resolved as shift (LE < ADD).
    Conflict between rule 107 and token SUB resolved as shift (LE < SUB).
    Conflict between rule 107 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 107 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 107 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 107 and token LSHIFT resolved as shift (LE < LSHIFT).
    Conflict between rule 107 and token RSHIFT resolved as shift (LE < RSHIFT).
    Conflict between rule 107 and token EQUAL resolved as reduce (EQUAL < LE).
    Conflict between rule 107 and token NOTEQUAL resolved as reduce (NOTEQUAL < LE).
    Conflict between rule 107 and token GT resolved as reduce (%left GT).
    Conflict between rule 107 and token GE resolved as reduce (%left GE).
    Conflict between rule 107 and token LT resolved as reduce (%left LT).
    Conflict between rule 107 and token LE resolved as reduce (%left LE).
    Conflict between rule 107 and token BIT_AND resolved as shift (LE < BIT_AND).
    Conflict between rule 107 and token LOGIC_AND resolved as shift (LE < LOGIC_AND).
    Conflict between rule 107 and token BIT_OR resolved as shift (LE < BIT_OR).
    Conflict between rule 107 and token LOGIC_OR resolved as shift (LE < LOGIC_OR).
    Conflict between rule 107 and token ASSIGN resolved as shift (LE < ASSIGN).
    Conflict between rule 107 and token ADD_ASSIGN resolved as shift (LE < ADD_ASSIGN).
    Conflict between rule 107 and token SUB_ASSIGN resolved as shift (LE < SUB_ASSIGN).
    Conflict between rule 107 and token MUL_ASSIGN resolved as shift (LE < MUL_ASSIGN).
    Conflict between rule 107 and token DIV_ASSIGN resolved as shift (LE < DIV_ASSIGN).
    Conflict between rule 107 and token MOD_ASSIGN resolved as shift (LE < MOD_ASSIGN).
    Conflict between rule 107 and token AND_ASSIGN resolved as shift (LE < AND_ASSIGN).
    Conflict between rule 107 and token OR_ASSIGN resolved as shift (LE < OR_ASSIGN).
    Conflict between rule 107 and token LSHIFT_ASSIGN resolved as shift (LE < LSHIFT_ASSIGN).
    Conflict between rule 107 and token RSHIFT_ASSIGN resolved as shift (LE < RSHIFT_ASSIGN).
    Conflict between rule 107 and token EXC_OR_ASSIGN resolved as shift (LE < EXC_OR_ASSIGN).
    Conflict between rule 107 and token EXC_OR resolved as shift (LE < EXC_OR).


state 133

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, LOGIC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   89           | expression BIT_AND expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, LOGIC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    BIT_OR         shift, and go to state 85
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 89 (expression)

    Conflict between rule 89 and token ADD resolved as shift (BIT_AND < ADD).
    Conflict between rule 89 and token SUB resolved as shift (BIT_AND < SUB).
    Conflict between rule 89 and token MUL resolved as shift (BIT_AND < MUL).
    Conflict between rule 89 and token DIV resolved as shift (BIT_AND < DIV).
    Conflict between rule 89 and token MOD resolved as shift (BIT_AND < MOD).
    Conflict between rule 89 and token LSHIFT resolved as shift (BIT_AND < LSHIFT).
    Conflict between rule 89 and token RSHIFT resolved as shift (BIT_AND < RSHIFT).
    Conflict between rule 89 and token EQUAL resolved as reduce (EQUAL < BIT_AND).
    Conflict between rule 89 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_AND).
    Conflict between rule 89 and token GT resolved as reduce (GT < BIT_AND).
    Conflict between rule 89 and token GE resolved as reduce (GE < BIT_AND).
    Conflict between rule 89 and token LT resolved as reduce (LT < BIT_AND).
    Conflict between rule 89 and token LE resolved as reduce (LE < BIT_AND).
    Conflict between rule 89 and token BIT_AND resolved as reduce (%left BIT_AND).
    Conflict between rule 89 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_AND).
    Conflict between rule 89 and token BIT_OR resolved as shift (BIT_AND < BIT_OR).
    Conflict between rule 89 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_AND).
    Conflict between rule 89 and token ASSIGN resolved as shift (BIT_AND < ASSIGN).
    Conflict between rule 89 and token ADD_ASSIGN resolved as shift (BIT_AND < ADD_ASSIGN).
    Conflict between rule 89 and token SUB_ASSIGN resolved as shift (BIT_AND < SUB_ASSIGN).
    Conflict between rule 89 and token MUL_ASSIGN resolved as shift (BIT_AND < MUL_ASSIGN).
    Conflict between rule 89 and token DIV_ASSIGN resolved as shift (BIT_AND < DIV_ASSIGN).
    Conflict between rule 89 and token MOD_ASSIGN resolved as shift (BIT_AND < MOD_ASSIGN).
    Conflict between rule 89 and token AND_ASSIGN resolved as shift (BIT_AND < AND_ASSIGN).
    Conflict between rule 89 and token OR_ASSIGN resolved as shift (BIT_AND < OR_ASSIGN).
    Conflict between rule 89 and token LSHIFT_ASSIGN resolved as shift (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 89 and token RSHIFT_ASSIGN resolved as shift (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 89 and token EXC_OR_ASSIGN resolved as shift (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 89 and token EXC_OR resolved as shift (BIT_AND < EXC_OR).


state 134

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   92           | expression LOGIC_AND expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    BIT_AND        shift, and go to state 83
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 92 (expression)

    Conflict between rule 92 and token ADD resolved as shift (LOGIC_AND < ADD).
    Conflict between rule 92 and token SUB resolved as shift (LOGIC_AND < SUB).
    Conflict between rule 92 and token MUL resolved as shift (LOGIC_AND < MUL).
    Conflict between rule 92 and token DIV resolved as shift (LOGIC_AND < DIV).
    Conflict between rule 92 and token MOD resolved as shift (LOGIC_AND < MOD).
    Conflict between rule 92 and token LSHIFT resolved as shift (LOGIC_AND < LSHIFT).
    Conflict between rule 92 and token RSHIFT resolved as shift (LOGIC_AND < RSHIFT).
    Conflict between rule 92 and token EQUAL resolved as reduce (EQUAL < LOGIC_AND).
    Conflict between rule 92 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_AND).
    Conflict between rule 92 and token GT resolved as reduce (GT < LOGIC_AND).
    Conflict between rule 92 and token GE resolved as reduce (GE < LOGIC_AND).
    Conflict between rule 92 and token LT resolved as reduce (LT < LOGIC_AND).
    Conflict between rule 92 and token LE resolved as reduce (LE < LOGIC_AND).
    Conflict between rule 92 and token BIT_AND resolved as shift (LOGIC_AND < BIT_AND).
    Conflict between rule 92 and token LOGIC_AND resolved as reduce (%left LOGIC_AND).
    Conflict between rule 92 and token BIT_OR resolved as shift (LOGIC_AND < BIT_OR).
    Conflict between rule 92 and token LOGIC_OR resolved as shift (LOGIC_AND < LOGIC_OR).
    Conflict between rule 92 and token ASSIGN resolved as shift (LOGIC_AND < ASSIGN).
    Conflict between rule 92 and token ADD_ASSIGN resolved as shift (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 92 and token SUB_ASSIGN resolved as shift (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 92 and token MUL_ASSIGN resolved as shift (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 92 and token DIV_ASSIGN resolved as shift (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 92 and token MOD_ASSIGN resolved as shift (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 92 and token AND_ASSIGN resolved as shift (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 92 and token OR_ASSIGN resolved as shift (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 92 and token LSHIFT_ASSIGN resolved as shift (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 92 and token RSHIFT_ASSIGN resolved as shift (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 92 and token EXC_OR_ASSIGN resolved as shift (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 92 and token EXC_OR resolved as shift (LOGIC_AND < EXC_OR).


state 135

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   86           | expression BIT_OR expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 86 (expression)

    Conflict between rule 86 and token ADD resolved as shift (BIT_OR < ADD).
    Conflict between rule 86 and token SUB resolved as shift (BIT_OR < SUB).
    Conflict between rule 86 and token MUL resolved as shift (BIT_OR < MUL).
    Conflict between rule 86 and token DIV resolved as shift (BIT_OR < DIV).
    Conflict between rule 86 and token MOD resolved as shift (BIT_OR < MOD).
    Conflict between rule 86 and token LSHIFT resolved as shift (BIT_OR < LSHIFT).
    Conflict between rule 86 and token RSHIFT resolved as shift (BIT_OR < RSHIFT).
    Conflict between rule 86 and token EQUAL resolved as reduce (EQUAL < BIT_OR).
    Conflict between rule 86 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_OR).
    Conflict between rule 86 and token GT resolved as reduce (GT < BIT_OR).
    Conflict between rule 86 and token GE resolved as reduce (GE < BIT_OR).
    Conflict between rule 86 and token LT resolved as reduce (LT < BIT_OR).
    Conflict between rule 86 and token LE resolved as reduce (LE < BIT_OR).
    Conflict between rule 86 and token BIT_AND resolved as reduce (BIT_AND < BIT_OR).
    Conflict between rule 86 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_OR).
    Conflict between rule 86 and token BIT_OR resolved as reduce (%left BIT_OR).
    Conflict between rule 86 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_OR).
    Conflict between rule 86 and token ASSIGN resolved as shift (BIT_OR < ASSIGN).
    Conflict between rule 86 and token ADD_ASSIGN resolved as shift (BIT_OR < ADD_ASSIGN).
    Conflict between rule 86 and token SUB_ASSIGN resolved as shift (BIT_OR < SUB_ASSIGN).
    Conflict between rule 86 and token MUL_ASSIGN resolved as shift (BIT_OR < MUL_ASSIGN).
    Conflict between rule 86 and token DIV_ASSIGN resolved as shift (BIT_OR < DIV_ASSIGN).
    Conflict between rule 86 and token MOD_ASSIGN resolved as shift (BIT_OR < MOD_ASSIGN).
    Conflict between rule 86 and token AND_ASSIGN resolved as shift (BIT_OR < AND_ASSIGN).
    Conflict between rule 86 and token OR_ASSIGN resolved as shift (BIT_OR < OR_ASSIGN).
    Conflict between rule 86 and token LSHIFT_ASSIGN resolved as shift (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 86 and token RSHIFT_ASSIGN resolved as shift (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 86 and token EXC_OR_ASSIGN resolved as shift (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 86 and token EXC_OR resolved as shift (BIT_OR < EXC_OR).


state 136

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LOGIC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   91           | expression LOGIC_OR expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LOGIC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    BIT_AND        shift, and go to state 83
    BIT_OR         shift, and go to state 85
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 91 (expression)

    Conflict between rule 91 and token ADD resolved as shift (LOGIC_OR < ADD).
    Conflict between rule 91 and token SUB resolved as shift (LOGIC_OR < SUB).
    Conflict between rule 91 and token MUL resolved as shift (LOGIC_OR < MUL).
    Conflict between rule 91 and token DIV resolved as shift (LOGIC_OR < DIV).
    Conflict between rule 91 and token MOD resolved as shift (LOGIC_OR < MOD).
    Conflict between rule 91 and token LSHIFT resolved as shift (LOGIC_OR < LSHIFT).
    Conflict between rule 91 and token RSHIFT resolved as shift (LOGIC_OR < RSHIFT).
    Conflict between rule 91 and token EQUAL resolved as reduce (EQUAL < LOGIC_OR).
    Conflict between rule 91 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_OR).
    Conflict between rule 91 and token GT resolved as reduce (GT < LOGIC_OR).
    Conflict between rule 91 and token GE resolved as reduce (GE < LOGIC_OR).
    Conflict between rule 91 and token LT resolved as reduce (LT < LOGIC_OR).
    Conflict between rule 91 and token LE resolved as reduce (LE < LOGIC_OR).
    Conflict between rule 91 and token BIT_AND resolved as shift (LOGIC_OR < BIT_AND).
    Conflict between rule 91 and token LOGIC_AND resolved as reduce (LOGIC_AND < LOGIC_OR).
    Conflict between rule 91 and token BIT_OR resolved as shift (LOGIC_OR < BIT_OR).
    Conflict between rule 91 and token LOGIC_OR resolved as reduce (%left LOGIC_OR).
    Conflict between rule 91 and token ASSIGN resolved as shift (LOGIC_OR < ASSIGN).
    Conflict between rule 91 and token ADD_ASSIGN resolved as shift (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 91 and token SUB_ASSIGN resolved as shift (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 91 and token MUL_ASSIGN resolved as shift (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 91 and token DIV_ASSIGN resolved as shift (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 91 and token MOD_ASSIGN resolved as shift (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 91 and token AND_ASSIGN resolved as shift (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 91 and token OR_ASSIGN resolved as shift (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 91 and token LSHIFT_ASSIGN resolved as shift (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 91 and token RSHIFT_ASSIGN resolved as shift (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 91 and token EXC_OR_ASSIGN resolved as shift (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 91 and token EXC_OR resolved as shift (LOGIC_OR < EXC_OR).


state 137

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   93           | expression ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 93 (expression)

    Conflict between rule 93 and token ADD resolved as reduce (ADD < ASSIGN).
    Conflict between rule 93 and token SUB resolved as reduce (SUB < ASSIGN).
    Conflict between rule 93 and token MUL resolved as reduce (MUL < ASSIGN).
    Conflict between rule 93 and token DIV resolved as reduce (DIV < ASSIGN).
    Conflict between rule 93 and token MOD resolved as reduce (MOD < ASSIGN).
    Conflict between rule 93 and token LSHIFT resolved as reduce (LSHIFT < ASSIGN).
    Conflict between rule 93 and token RSHIFT resolved as reduce (RSHIFT < ASSIGN).
    Conflict between rule 93 and token EQUAL resolved as reduce (EQUAL < ASSIGN).
    Conflict between rule 93 and token NOTEQUAL resolved as reduce (NOTEQUAL < ASSIGN).
    Conflict between rule 93 and token GT resolved as reduce (GT < ASSIGN).
    Conflict between rule 93 and token GE resolved as reduce (GE < ASSIGN).
    Conflict between rule 93 and token LT resolved as reduce (LT < ASSIGN).
    Conflict between rule 93 and token LE resolved as reduce (LE < ASSIGN).
    Conflict between rule 93 and token BIT_AND resolved as reduce (BIT_AND < ASSIGN).
    Conflict between rule 93 and token LOGIC_AND resolved as reduce (LOGIC_AND < ASSIGN).
    Conflict between rule 93 and token BIT_OR resolved as reduce (BIT_OR < ASSIGN).
    Conflict between rule 93 and token LOGIC_OR resolved as reduce (LOGIC_OR < ASSIGN).
    Conflict between rule 93 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 93 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 93 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 93 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 93 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 93 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 93 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 93 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 93 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 93 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 93 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 93 and token EXC_OR resolved as reduce (EXC_OR < ASSIGN).


state 138

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   94           | expression ADD_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 94 (expression)

    Conflict between rule 94 and token ADD resolved as reduce (ADD < ADD_ASSIGN).
    Conflict between rule 94 and token SUB resolved as reduce (SUB < ADD_ASSIGN).
    Conflict between rule 94 and token MUL resolved as reduce (MUL < ADD_ASSIGN).
    Conflict between rule 94 and token DIV resolved as reduce (DIV < ADD_ASSIGN).
    Conflict between rule 94 and token MOD resolved as reduce (MOD < ADD_ASSIGN).
    Conflict between rule 94 and token LSHIFT resolved as reduce (LSHIFT < ADD_ASSIGN).
    Conflict between rule 94 and token RSHIFT resolved as reduce (RSHIFT < ADD_ASSIGN).
    Conflict between rule 94 and token EQUAL resolved as reduce (EQUAL < ADD_ASSIGN).
    Conflict between rule 94 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 94 and token GT resolved as reduce (GT < ADD_ASSIGN).
    Conflict between rule 94 and token GE resolved as reduce (GE < ADD_ASSIGN).
    Conflict between rule 94 and token LT resolved as reduce (LT < ADD_ASSIGN).
    Conflict between rule 94 and token LE resolved as reduce (LE < ADD_ASSIGN).
    Conflict between rule 94 and token BIT_AND resolved as reduce (BIT_AND < ADD_ASSIGN).
    Conflict between rule 94 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 94 and token BIT_OR resolved as reduce (BIT_OR < ADD_ASSIGN).
    Conflict between rule 94 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 94 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 94 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 94 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 94 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 94 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 94 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 94 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 94 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 94 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 94 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 94 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 94 and token EXC_OR resolved as reduce (EXC_OR < ADD_ASSIGN).


state 139

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   95           | expression SUB_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 95 (expression)

    Conflict between rule 95 and token ADD resolved as reduce (ADD < SUB_ASSIGN).
    Conflict between rule 95 and token SUB resolved as reduce (SUB < SUB_ASSIGN).
    Conflict between rule 95 and token MUL resolved as reduce (MUL < SUB_ASSIGN).
    Conflict between rule 95 and token DIV resolved as reduce (DIV < SUB_ASSIGN).
    Conflict between rule 95 and token MOD resolved as reduce (MOD < SUB_ASSIGN).
    Conflict between rule 95 and token LSHIFT resolved as reduce (LSHIFT < SUB_ASSIGN).
    Conflict between rule 95 and token RSHIFT resolved as reduce (RSHIFT < SUB_ASSIGN).
    Conflict between rule 95 and token EQUAL resolved as reduce (EQUAL < SUB_ASSIGN).
    Conflict between rule 95 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 95 and token GT resolved as reduce (GT < SUB_ASSIGN).
    Conflict between rule 95 and token GE resolved as reduce (GE < SUB_ASSIGN).
    Conflict between rule 95 and token LT resolved as reduce (LT < SUB_ASSIGN).
    Conflict between rule 95 and token LE resolved as reduce (LE < SUB_ASSIGN).
    Conflict between rule 95 and token BIT_AND resolved as reduce (BIT_AND < SUB_ASSIGN).
    Conflict between rule 95 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 95 and token BIT_OR resolved as reduce (BIT_OR < SUB_ASSIGN).
    Conflict between rule 95 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 95 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 95 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 95 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 95 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 95 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 95 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 95 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 95 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 95 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 95 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 95 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 95 and token EXC_OR resolved as reduce (EXC_OR < SUB_ASSIGN).


state 140

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   96           | expression MUL_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 96 (expression)

    Conflict between rule 96 and token ADD resolved as reduce (ADD < MUL_ASSIGN).
    Conflict between rule 96 and token SUB resolved as reduce (SUB < MUL_ASSIGN).
    Conflict between rule 96 and token MUL resolved as reduce (MUL < MUL_ASSIGN).
    Conflict between rule 96 and token DIV resolved as reduce (DIV < MUL_ASSIGN).
    Conflict between rule 96 and token MOD resolved as reduce (MOD < MUL_ASSIGN).
    Conflict between rule 96 and token LSHIFT resolved as reduce (LSHIFT < MUL_ASSIGN).
    Conflict between rule 96 and token RSHIFT resolved as reduce (RSHIFT < MUL_ASSIGN).
    Conflict between rule 96 and token EQUAL resolved as reduce (EQUAL < MUL_ASSIGN).
    Conflict between rule 96 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 96 and token GT resolved as reduce (GT < MUL_ASSIGN).
    Conflict between rule 96 and token GE resolved as reduce (GE < MUL_ASSIGN).
    Conflict between rule 96 and token LT resolved as reduce (LT < MUL_ASSIGN).
    Conflict between rule 96 and token LE resolved as reduce (LE < MUL_ASSIGN).
    Conflict between rule 96 and token BIT_AND resolved as reduce (BIT_AND < MUL_ASSIGN).
    Conflict between rule 96 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 96 and token BIT_OR resolved as reduce (BIT_OR < MUL_ASSIGN).
    Conflict between rule 96 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 96 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 96 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 96 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 96 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 96 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 96 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 96 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 96 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 96 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 96 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 96 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 96 and token EXC_OR resolved as reduce (EXC_OR < MUL_ASSIGN).


state 141

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   97           | expression DIV_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 97 (expression)

    Conflict between rule 97 and token ADD resolved as reduce (ADD < DIV_ASSIGN).
    Conflict between rule 97 and token SUB resolved as reduce (SUB < DIV_ASSIGN).
    Conflict between rule 97 and token MUL resolved as reduce (MUL < DIV_ASSIGN).
    Conflict between rule 97 and token DIV resolved as reduce (DIV < DIV_ASSIGN).
    Conflict between rule 97 and token MOD resolved as reduce (MOD < DIV_ASSIGN).
    Conflict between rule 97 and token LSHIFT resolved as reduce (LSHIFT < DIV_ASSIGN).
    Conflict between rule 97 and token RSHIFT resolved as reduce (RSHIFT < DIV_ASSIGN).
    Conflict between rule 97 and token EQUAL resolved as reduce (EQUAL < DIV_ASSIGN).
    Conflict between rule 97 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 97 and token GT resolved as reduce (GT < DIV_ASSIGN).
    Conflict between rule 97 and token GE resolved as reduce (GE < DIV_ASSIGN).
    Conflict between rule 97 and token LT resolved as reduce (LT < DIV_ASSIGN).
    Conflict between rule 97 and token LE resolved as reduce (LE < DIV_ASSIGN).
    Conflict between rule 97 and token BIT_AND resolved as reduce (BIT_AND < DIV_ASSIGN).
    Conflict between rule 97 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 97 and token BIT_OR resolved as reduce (BIT_OR < DIV_ASSIGN).
    Conflict between rule 97 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 97 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 97 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 97 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 97 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 97 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 97 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 97 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 97 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 97 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 97 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 97 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 97 and token EXC_OR resolved as reduce (EXC_OR < DIV_ASSIGN).


state 142

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   98           | expression MOD_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 98 (expression)

    Conflict between rule 98 and token ADD resolved as reduce (ADD < MOD_ASSIGN).
    Conflict between rule 98 and token SUB resolved as reduce (SUB < MOD_ASSIGN).
    Conflict between rule 98 and token MUL resolved as reduce (MUL < MOD_ASSIGN).
    Conflict between rule 98 and token DIV resolved as reduce (DIV < MOD_ASSIGN).
    Conflict between rule 98 and token MOD resolved as reduce (MOD < MOD_ASSIGN).
    Conflict between rule 98 and token LSHIFT resolved as reduce (LSHIFT < MOD_ASSIGN).
    Conflict between rule 98 and token RSHIFT resolved as reduce (RSHIFT < MOD_ASSIGN).
    Conflict between rule 98 and token EQUAL resolved as reduce (EQUAL < MOD_ASSIGN).
    Conflict between rule 98 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 98 and token GT resolved as reduce (GT < MOD_ASSIGN).
    Conflict between rule 98 and token GE resolved as reduce (GE < MOD_ASSIGN).
    Conflict between rule 98 and token LT resolved as reduce (LT < MOD_ASSIGN).
    Conflict between rule 98 and token LE resolved as reduce (LE < MOD_ASSIGN).
    Conflict between rule 98 and token BIT_AND resolved as reduce (BIT_AND < MOD_ASSIGN).
    Conflict between rule 98 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 98 and token BIT_OR resolved as reduce (BIT_OR < MOD_ASSIGN).
    Conflict between rule 98 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 98 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 98 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 98 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 98 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 98 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 98 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 98 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 98 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 98 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 98 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 98 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 98 and token EXC_OR resolved as reduce (EXC_OR < MOD_ASSIGN).


state 143

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   99           | expression AND_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 99 (expression)

    Conflict between rule 99 and token ADD resolved as reduce (ADD < AND_ASSIGN).
    Conflict between rule 99 and token SUB resolved as reduce (SUB < AND_ASSIGN).
    Conflict between rule 99 and token MUL resolved as reduce (MUL < AND_ASSIGN).
    Conflict between rule 99 and token DIV resolved as reduce (DIV < AND_ASSIGN).
    Conflict between rule 99 and token MOD resolved as reduce (MOD < AND_ASSIGN).
    Conflict between rule 99 and token LSHIFT resolved as reduce (LSHIFT < AND_ASSIGN).
    Conflict between rule 99 and token RSHIFT resolved as reduce (RSHIFT < AND_ASSIGN).
    Conflict between rule 99 and token EQUAL resolved as reduce (EQUAL < AND_ASSIGN).
    Conflict between rule 99 and token NOTEQUAL resolved as reduce (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 99 and token GT resolved as reduce (GT < AND_ASSIGN).
    Conflict between rule 99 and token GE resolved as reduce (GE < AND_ASSIGN).
    Conflict between rule 99 and token LT resolved as reduce (LT < AND_ASSIGN).
    Conflict between rule 99 and token LE resolved as reduce (LE < AND_ASSIGN).
    Conflict between rule 99 and token BIT_AND resolved as reduce (BIT_AND < AND_ASSIGN).
    Conflict between rule 99 and token LOGIC_AND resolved as reduce (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 99 and token BIT_OR resolved as reduce (BIT_OR < AND_ASSIGN).
    Conflict between rule 99 and token LOGIC_OR resolved as reduce (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 99 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 99 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 99 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 99 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 99 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 99 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 99 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 99 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 99 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 99 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 99 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 99 and token EXC_OR resolved as reduce (EXC_OR < AND_ASSIGN).


state 144

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  100           | expression OR_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 100 (expression)

    Conflict between rule 100 and token ADD resolved as reduce (ADD < OR_ASSIGN).
    Conflict between rule 100 and token SUB resolved as reduce (SUB < OR_ASSIGN).
    Conflict between rule 100 and token MUL resolved as reduce (MUL < OR_ASSIGN).
    Conflict between rule 100 and token DIV resolved as reduce (DIV < OR_ASSIGN).
    Conflict between rule 100 and token MOD resolved as reduce (MOD < OR_ASSIGN).
    Conflict between rule 100 and token LSHIFT resolved as reduce (LSHIFT < OR_ASSIGN).
    Conflict between rule 100 and token RSHIFT resolved as reduce (RSHIFT < OR_ASSIGN).
    Conflict between rule 100 and token EQUAL resolved as reduce (EQUAL < OR_ASSIGN).
    Conflict between rule 100 and token NOTEQUAL resolved as reduce (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 100 and token GT resolved as reduce (GT < OR_ASSIGN).
    Conflict between rule 100 and token GE resolved as reduce (GE < OR_ASSIGN).
    Conflict between rule 100 and token LT resolved as reduce (LT < OR_ASSIGN).
    Conflict between rule 100 and token LE resolved as reduce (LE < OR_ASSIGN).
    Conflict between rule 100 and token BIT_AND resolved as reduce (BIT_AND < OR_ASSIGN).
    Conflict between rule 100 and token LOGIC_AND resolved as reduce (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 100 and token BIT_OR resolved as reduce (BIT_OR < OR_ASSIGN).
    Conflict between rule 100 and token LOGIC_OR resolved as reduce (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 100 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 100 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 100 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 100 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 100 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 100 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 100 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 100 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 100 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 100 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 100 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 100 and token EXC_OR resolved as reduce (EXC_OR < OR_ASSIGN).


state 145

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  102           | expression LSHIFT_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 102 (expression)

    Conflict between rule 102 and token ADD resolved as reduce (ADD < LSHIFT_ASSIGN).
    Conflict between rule 102 and token SUB resolved as reduce (SUB < LSHIFT_ASSIGN).
    Conflict between rule 102 and token MUL resolved as reduce (MUL < LSHIFT_ASSIGN).
    Conflict between rule 102 and token DIV resolved as reduce (DIV < LSHIFT_ASSIGN).
    Conflict between rule 102 and token MOD resolved as reduce (MOD < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LSHIFT resolved as reduce (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 102 and token RSHIFT resolved as reduce (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 102 and token EQUAL resolved as reduce (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 102 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 102 and token GT resolved as reduce (GT < LSHIFT_ASSIGN).
    Conflict between rule 102 and token GE resolved as reduce (GE < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LT resolved as reduce (LT < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LE resolved as reduce (LE < LSHIFT_ASSIGN).
    Conflict between rule 102 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 102 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 102 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 102 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 102 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 102 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 102 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 102 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 102 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 102 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 102 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 102 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 102 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 102 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT_ASSIGN).


state 146

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  103           | expression RSHIFT_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 103 (expression)

    Conflict between rule 103 and token ADD resolved as reduce (ADD < RSHIFT_ASSIGN).
    Conflict between rule 103 and token SUB resolved as reduce (SUB < RSHIFT_ASSIGN).
    Conflict between rule 103 and token MUL resolved as reduce (MUL < RSHIFT_ASSIGN).
    Conflict between rule 103 and token DIV resolved as reduce (DIV < RSHIFT_ASSIGN).
    Conflict between rule 103 and token MOD resolved as reduce (MOD < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LSHIFT resolved as reduce (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 103 and token RSHIFT resolved as reduce (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 103 and token EQUAL resolved as reduce (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 103 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 103 and token GT resolved as reduce (GT < RSHIFT_ASSIGN).
    Conflict between rule 103 and token GE resolved as reduce (GE < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LT resolved as reduce (LT < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LE resolved as reduce (LE < RSHIFT_ASSIGN).
    Conflict between rule 103 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 103 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 103 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 103 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 103 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 103 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 103 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 103 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 103 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 103 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 103 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 103 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 103 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 103 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT_ASSIGN).


state 147

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  101           | expression EXC_OR_ASSIGN expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, ADD, SUB, MUL, DIV, MOD, NOT, LSHIFT, RSHIFT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 101 (expression)

    Conflict between rule 101 and token ADD resolved as reduce (ADD < EXC_OR_ASSIGN).
    Conflict between rule 101 and token SUB resolved as reduce (SUB < EXC_OR_ASSIGN).
    Conflict between rule 101 and token MUL resolved as reduce (MUL < EXC_OR_ASSIGN).
    Conflict between rule 101 and token DIV resolved as reduce (DIV < EXC_OR_ASSIGN).
    Conflict between rule 101 and token MOD resolved as reduce (MOD < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LSHIFT resolved as reduce (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 101 and token RSHIFT resolved as reduce (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 101 and token EQUAL resolved as reduce (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 101 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 101 and token GT resolved as reduce (GT < EXC_OR_ASSIGN).
    Conflict between rule 101 and token GE resolved as reduce (GE < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LT resolved as reduce (LT < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LE resolved as reduce (LE < EXC_OR_ASSIGN).
    Conflict between rule 101 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 101 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 101 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 101 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 101 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 101 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 101 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 101 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 101 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 101 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 101 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 101 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 101 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 101 and token EXC_OR resolved as reduce (EXC_OR < EXC_OR_ASSIGN).


state 148

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   90           | expression EXC_OR expression .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, COMMA, NOT, CHILDA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RCB, LRB, RRB, SEMI, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97

    $default  reduce using rule 90 (expression)

    Conflict between rule 90 and token ADD resolved as shift (EXC_OR < ADD).
    Conflict between rule 90 and token SUB resolved as shift (EXC_OR < SUB).
    Conflict between rule 90 and token MUL resolved as shift (EXC_OR < MUL).
    Conflict between rule 90 and token DIV resolved as shift (EXC_OR < DIV).
    Conflict between rule 90 and token MOD resolved as shift (EXC_OR < MOD).
    Conflict between rule 90 and token LSHIFT resolved as shift (EXC_OR < LSHIFT).
    Conflict between rule 90 and token RSHIFT resolved as shift (EXC_OR < RSHIFT).
    Conflict between rule 90 and token EQUAL resolved as reduce (EQUAL < EXC_OR).
    Conflict between rule 90 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR).
    Conflict between rule 90 and token GT resolved as reduce (GT < EXC_OR).
    Conflict between rule 90 and token GE resolved as reduce (GE < EXC_OR).
    Conflict between rule 90 and token LT resolved as reduce (LT < EXC_OR).
    Conflict between rule 90 and token LE resolved as reduce (LE < EXC_OR).
    Conflict between rule 90 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR).
    Conflict between rule 90 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR).
    Conflict between rule 90 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR).
    Conflict between rule 90 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR).
    Conflict between rule 90 and token ASSIGN resolved as shift (EXC_OR < ASSIGN).
    Conflict between rule 90 and token ADD_ASSIGN resolved as shift (EXC_OR < ADD_ASSIGN).
    Conflict between rule 90 and token SUB_ASSIGN resolved as shift (EXC_OR < SUB_ASSIGN).
    Conflict between rule 90 and token MUL_ASSIGN resolved as shift (EXC_OR < MUL_ASSIGN).
    Conflict between rule 90 and token DIV_ASSIGN resolved as shift (EXC_OR < DIV_ASSIGN).
    Conflict between rule 90 and token MOD_ASSIGN resolved as shift (EXC_OR < MOD_ASSIGN).
    Conflict between rule 90 and token AND_ASSIGN resolved as shift (EXC_OR < AND_ASSIGN).
    Conflict between rule 90 and token OR_ASSIGN resolved as shift (EXC_OR < OR_ASSIGN).
    Conflict between rule 90 and token LSHIFT_ASSIGN resolved as shift (EXC_OR < LSHIFT_ASSIGN).
    Conflict between rule 90 and token RSHIFT_ASSIGN resolved as shift (EXC_OR < RSHIFT_ASSIGN).
    Conflict between rule 90 and token EXC_OR_ASSIGN resolved as shift (EXC_OR < EXC_OR_ASSIGN).
    Conflict between rule 90 and token EXC_OR resolved as reduce (%left EXC_OR).


state 149

   76 typename_list: typename_list COMMA . typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 172


state 150

   74 typename_group: '<' typename_list '>' .

    $default  reduce using rule 74 (typename_group)


state 151

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  135 inferenced_type_init_stmt: VAR IDENT ASSIGN expression . stmt_term
  156 stmt_term: . SEMI
  157          | .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    SEMI           shift, and go to state 62

    ADD       [reduce using rule 157 (stmt_term)]
    SUB       [reduce using rule 157 (stmt_term)]
    $default  reduce using rule 157 (stmt_term)

    stmt_term  go to state 173


state 152

   55 function_define: DEF IDENT LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 174


state 153

   54 function_define: DEF IDENT LRB parameter_list . RRB ARROW typename_T scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 175
    RRB    shift, and go to state 176


state 154

   69 parameter_list: typename_T . IDENT

    IDENT  shift, and go to state 177


state 155

   18 namespace_path: namespace_path DOT IDENT .

    $default  reduce using rule 18 (namespace_path)


state 156

   20 parameterized_typename: . IDENT type_parameter_group
   34 interface_decl: INTERFACE . parameterized_typename LCB access_member_tree_opt RCB
   35               | INTERFACE . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 178

    parameterized_typename  go to state 179


state 157

   20 parameterized_typename: . IDENT type_parameter_group
   30 class_decl: CLASS . parameterized_typename LCB access_member_tree_opt RCB
   31           | CLASS . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 178

    parameterized_typename  go to state 180


state 158

   32 enum_decl: ENUM . IDENT LCB ident_list RCB
   33          | ENUM . IDENT LCB ident_list COMMA RCB

    IDENT  shift, and go to state 181


state 159

    9 namespace_member_decl: NAMESPACE . namespace_path namespace_body
   17 namespace_path: . IDENT
   18               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 57

    namespace_path  go to state 182


state 160

   13 namespace_member_decl_list: namespace_member_decl .

    $default  reduce using rule 13 (namespace_member_decl_list)


state 161

    9 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   10                      | . class_decl
   11                      | . interface_decl
   12                      | . enum_decl
   14 namespace_member_decl_list: namespace_member_decl_list . namespace_member_decl
   16 namespace_member_decl_optional: namespace_member_decl_list .  [RCB]
   30 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   32 enum_decl: . ENUM IDENT LCB ident_list RCB
   33          | . ENUM IDENT LCB ident_list COMMA RCB
   34 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 156
    CLASS      shift, and go to state 157
    ENUM       shift, and go to state 158
    NAMESPACE  shift, and go to state 159

    $default  reduce using rule 16 (namespace_member_decl_optional)

    namespace_member_decl  go to state 183
    class_decl             go to state 163
    enum_decl              go to state 164
    interface_decl         go to state 165


state 162

    8 namespace_body: LCB namespace_member_decl_optional . RCB

    RCB  shift, and go to state 184


state 163

   10 namespace_member_decl: class_decl .

    $default  reduce using rule 10 (namespace_member_decl)


state 164

   12 namespace_member_decl: enum_decl .

    $default  reduce using rule 12 (namespace_member_decl)


state 165

   11 namespace_member_decl: interface_decl .

    $default  reduce using rule 11 (namespace_member_decl)


state 166

  136 if_stmt: IF LRB expression RRB . scope
  137        | IF LRB expression RRB . scope ELSE scope
  138        | IF LRB expression RRB . scope elif_list
  139        | IF LRB expression RRB . scope elif_list ELSE scope
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB

    LCB  shift, and go to state 65

    scope  go to state 185


state 167

  143 while_stmt: WHILE LRB expression RRB . scope_optional
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB
  154 scope_optional: . SEMI
  155               | . scope

    LCB   shift, and go to state 65
    SEMI  shift, and go to state 186

    scope           go to state 187
    scope_optional  go to state 188


state 168

  152 scope: LCB stmt_list RCB .

    $default  reduce using rule 152 (scope)


state 169

   77 typename_T: . IDENT typename_group
  151 catch_stmt: CATCH LRB . typename_T IDENT RRB scope

    IDENT  shift, and go to state 6

    typename_T  go to state 189


state 170

  150 catch_stmt_list: catch_stmt_list catch_stmt .

    $default  reduce using rule 150 (catch_stmt_list)


state 171

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  134 variable_init_stmt: typename_T IDENT ASSIGN expression . stmt_term
  156 stmt_term: . SEMI
  157          | .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    SEMI           shift, and go to state 62

    ADD       [reduce using rule 157 (stmt_term)]
    SUB       [reduce using rule 157 (stmt_term)]
    $default  reduce using rule 157 (stmt_term)

    stmt_term  go to state 190


state 172

   76 typename_list: typename_list COMMA typename_T .

    $default  reduce using rule 76 (typename_list)


state 173

  135 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 135 (inferenced_type_init_stmt)


state 174

   55 function_define: DEF IDENT LRB RRB ARROW . typename_T scope_optional
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 191


state 175

   70 parameter_list: parameter_list COMMA . typename_T IDENT
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 192


state 176

   54 function_define: DEF IDENT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 193


state 177

   69 parameter_list: typename_T IDENT .

    $default  reduce using rule 69 (parameter_list)


state 178

   20 parameterized_typename: IDENT . type_parameter_group
   21 type_parameter_group: .  [COLON, LCB]
   22                     | . LT type_parameter_list GT

    LT  shift, and go to state 194

    $default  reduce using rule 21 (type_parameter_group)

    type_parameter_group  go to state 195


state 179

   34 interface_decl: INTERFACE parameterized_typename . LCB access_member_tree_opt RCB
   35               | INTERFACE parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 196
    LCB    shift, and go to state 197


state 180

   30 class_decl: CLASS parameterized_typename . LCB access_member_tree_opt RCB
   31           | CLASS parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 198
    LCB    shift, and go to state 199


state 181

   32 enum_decl: ENUM IDENT . LCB ident_list RCB
   33          | ENUM IDENT . LCB ident_list COMMA RCB

    LCB  shift, and go to state 200


state 182

    8 namespace_body: . LCB namespace_member_decl_optional RCB
    9 namespace_member_decl: NAMESPACE namespace_path . namespace_body
   18 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 106
    LCB  shift, and go to state 107

    namespace_body  go to state 201


state 183

   14 namespace_member_decl_list: namespace_member_decl_list namespace_member_decl .

    $default  reduce using rule 14 (namespace_member_decl_list)


state 184

    8 namespace_body: LCB namespace_member_decl_optional RCB .

    $default  reduce using rule 8 (namespace_body)


state 185

  136 if_stmt: IF LRB expression RRB scope .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  137        | IF LRB expression RRB scope . ELSE scope
  138        | IF LRB expression RRB scope . elif_list
  139        | IF LRB expression RRB scope . elif_list ELSE scope
  140 elif_list: . elif
  141          | . elif_list elif
  142 elif: . ELIF LRB expression RRB scope

    ELIF  shift, and go to state 202
    ELSE  shift, and go to state 203

    $default  reduce using rule 136 (if_stmt)

    elif_list  go to state 204
    elif       go to state 205


state 186

  154 scope_optional: SEMI .

    $default  reduce using rule 154 (scope_optional)


state 187

  155 scope_optional: scope .

    $default  reduce using rule 155 (scope_optional)


state 188

  143 while_stmt: WHILE LRB expression RRB scope_optional .

    $default  reduce using rule 143 (while_stmt)


state 189

  151 catch_stmt: CATCH LRB typename_T . IDENT RRB scope

    IDENT  shift, and go to state 206


state 190

  134 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 134 (variable_init_stmt)


state 191

   55 function_define: DEF IDENT LRB RRB ARROW typename_T . scope_optional
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB
  154 scope_optional: . SEMI
  155               | . scope

    LCB   shift, and go to state 65
    SEMI  shift, and go to state 186

    scope           go to state 187
    scope_optional  go to state 207


state 192

   70 parameter_list: parameter_list COMMA typename_T . IDENT

    IDENT  shift, and go to state 208


state 193

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW . typename_T scope_optional
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 209


state 194

   22 type_parameter_group: LT . type_parameter_list GT
   23 type_parameter_list: . type_parameter
   24                    | . type_parameter_list COMMA type_parameter
   25 type_parameter: . IDENT type_parameter_rule_list
   26               | . IN IDENT type_parameter_rule_list
   27               | . OUT IDENT type_parameter_rule_list

    IDENT  shift, and go to state 210
    IN     shift, and go to state 211
    OUT    shift, and go to state 212

    type_parameter_list  go to state 213
    type_parameter       go to state 214


state 195

   20 parameterized_typename: IDENT type_parameter_group .

    $default  reduce using rule 20 (parameterized_typename)


state 196

   35 interface_decl: INTERFACE parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_list  go to state 215
    typename_T     go to state 102


state 197

   34 interface_decl: INTERFACE parameterized_typename LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 216
    PRIVATE    shift, and go to state 217
    PROTECTED  shift, and go to state 218

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 219
    access_member_tree      go to state 220
    access_member_list      go to state 221
    access_level_T          go to state 222


state 198

   31 class_decl: CLASS parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_list  go to state 223
    typename_T     go to state 102


state 199

   30 class_decl: CLASS parameterized_typename LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 216
    PRIVATE    shift, and go to state 217
    PROTECTED  shift, and go to state 218

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 224
    access_member_tree      go to state 220
    access_member_list      go to state 221
    access_level_T          go to state 222


state 200

   32 enum_decl: ENUM IDENT LCB . ident_list RCB
   33          | ENUM IDENT LCB . ident_list COMMA RCB
   67 ident_list: . IDENT
   68           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 225

    ident_list  go to state 226


state 201

    9 namespace_member_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 9 (namespace_member_decl)


state 202

  142 elif: ELIF . LRB expression RRB scope

    LRB  shift, and go to state 227


state 203

  137 if_stmt: IF LRB expression RRB scope ELSE . scope
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB

    LCB  shift, and go to state 65

    scope  go to state 228


state 204

  138 if_stmt: IF LRB expression RRB scope elif_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  139        | IF LRB expression RRB scope elif_list . ELSE scope
  141 elif_list: elif_list . elif
  142 elif: . ELIF LRB expression RRB scope

    ELIF  shift, and go to state 202
    ELSE  shift, and go to state 229

    $default  reduce using rule 138 (if_stmt)

    elif  go to state 230


state 205

  140 elif_list: elif .

    $default  reduce using rule 140 (elif_list)


state 206

  151 catch_stmt: CATCH LRB typename_T IDENT . RRB scope

    RRB  shift, and go to state 231


state 207

   55 function_define: DEF IDENT LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 55 (function_define)


state 208

   70 parameter_list: parameter_list COMMA typename_T IDENT .

    $default  reduce using rule 70 (parameter_list)


state 209

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T . scope_optional
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB
  154 scope_optional: . SEMI
  155               | . scope

    LCB   shift, and go to state 65
    SEMI  shift, and go to state 186

    scope           go to state 187
    scope_optional  go to state 232


state 210

   25 type_parameter: IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 233

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 234


state 211

   26 type_parameter: IN . IDENT type_parameter_rule_list

    IDENT  shift, and go to state 235


state 212

   27 type_parameter: OUT . IDENT type_parameter_rule_list

    IDENT  shift, and go to state 236


state 213

   22 type_parameter_group: LT type_parameter_list . GT
   24 type_parameter_list: type_parameter_list . COMMA type_parameter

    COMMA  shift, and go to state 237
    GT     shift, and go to state 238


state 214

   23 type_parameter_list: type_parameter .

    $default  reduce using rule 23 (type_parameter_list)


state 215

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 149
    LCB    shift, and go to state 239


state 216

   64 access_level_T: PUBLIC .

    $default  reduce using rule 64 (access_level_T)


state 217

   65 access_level_T: PRIVATE .

    $default  reduce using rule 65 (access_level_T)


state 218

   66 access_level_T: PROTECTED .

    $default  reduce using rule 66 (access_level_T)


state 219

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 240


state 220

   37 access_member_tree_opt: access_member_tree .  [RCB]
   39 access_member_tree: access_member_tree . access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 216
    PRIVATE    shift, and go to state 217
    PROTECTED  shift, and go to state 218

    $default  reduce using rule 37 (access_member_tree_opt)

    access_member_list  go to state 241
    access_level_T      go to state 222


state 221

   38 access_member_tree: access_member_list .

    $default  reduce using rule 38 (access_member_tree)


state 222

   40 access_member_list: access_level_T . COLON member_define_list

    COLON  shift, and go to state 242


state 223

   31 class_decl: CLASS parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 149
    LCB    shift, and go to state 243


state 224

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 244


state 225

   67 ident_list: IDENT .

    $default  reduce using rule 67 (ident_list)


state 226

   32 enum_decl: ENUM IDENT LCB ident_list . RCB
   33          | ENUM IDENT LCB ident_list . COMMA RCB
   68 ident_list: ident_list . COMMA IDENT

    COMMA  shift, and go to state 245
    RCB    shift, and go to state 246


state 227

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK
  142 elif: ELIF LRB . expression RRB scope

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 247
    primary     go to state 33


state 228

  137 if_stmt: IF LRB expression RRB scope ELSE scope .

    $default  reduce using rule 137 (if_stmt)


state 229

  139 if_stmt: IF LRB expression RRB scope elif_list ELSE . scope
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB

    LCB  shift, and go to state 65

    scope  go to state 248


state 230

  141 elif_list: elif_list elif .

    $default  reduce using rule 141 (elif_list)


state 231

  151 catch_stmt: CATCH LRB typename_T IDENT RRB . scope
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB

    LCB  shift, and go to state 65

    scope  go to state 249


state 232

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 54 (function_define)


state 233

   29 type_parameter_rule_list: LRB . typename_list RRB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_list  go to state 250
    typename_T     go to state 102


state 234

   25 type_parameter: IDENT type_parameter_rule_list .

    $default  reduce using rule 25 (type_parameter)


state 235

   26 type_parameter: IN IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 233

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 251


state 236

   27 type_parameter: OUT IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 233

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 252


state 237

   24 type_parameter_list: type_parameter_list COMMA . type_parameter
   25 type_parameter: . IDENT type_parameter_rule_list
   26               | . IN IDENT type_parameter_rule_list
   27               | . OUT IDENT type_parameter_rule_list

    IDENT  shift, and go to state 210
    IN     shift, and go to state 211
    OUT    shift, and go to state 212

    type_parameter  go to state 253


state 238

   22 type_parameter_group: LT type_parameter_list GT .

    $default  reduce using rule 22 (type_parameter_group)


state 239

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 216
    PRIVATE    shift, and go to state 217
    PROTECTED  shift, and go to state 218

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 254
    access_member_tree      go to state 220
    access_member_list      go to state 221
    access_level_T          go to state 222


state 240

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 34 (interface_decl)


state 241

   39 access_member_tree: access_member_tree access_member_list .

    $default  reduce using rule 39 (access_member_tree)


state 242

   40 access_member_list: access_level_T COLON . member_define_list
   41 member_define_list: . member_define
   42                   | . member_define_list member_define
   43 member_define: . constructor_define
   44              | . method_define
   45              | . field_define
   46 constructor_define: . CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | . CTOR NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: . modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | . modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: . modifier_type_T typename_T IDENT SEMI
   59 modifier_type_T: .  [IDENT, DEF]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 255
    NATIVE  shift, and go to state 256
    CTOR    shift, and go to state 257

    $default  reduce using rule 59 (modifier_type_T)

    member_define_list  go to state 258
    member_define       go to state 259
    constructor_define  go to state 260
    method_define       go to state 261
    field_define        go to state 262
    modifier_type_T     go to state 263


state 243

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 216
    PRIVATE    shift, and go to state 217
    PROTECTED  shift, and go to state 218

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 264
    access_member_tree      go to state 220
    access_member_list      go to state 221
    access_level_T          go to state 222


state 244

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 30 (class_decl)


state 245

   33 enum_decl: ENUM IDENT LCB ident_list COMMA . RCB
   68 ident_list: ident_list COMMA . IDENT

    IDENT  shift, and go to state 265
    RCB    shift, and go to state 266


state 246

   32 enum_decl: ENUM IDENT LCB ident_list RCB .

    $default  reduce using rule 32 (enum_decl)


state 247

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  142 elif: ELIF LRB expression . RRB scope

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98
    RRB            shift, and go to state 267


state 248

  139 if_stmt: IF LRB expression RRB scope elif_list ELSE scope .

    $default  reduce using rule 139 (if_stmt)


state 249

  151 catch_stmt: CATCH LRB typename_T IDENT RRB scope .

    $default  reduce using rule 151 (catch_stmt)


state 250

   29 type_parameter_rule_list: LRB typename_list . RRB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 149
    RRB    shift, and go to state 268


state 251

   26 type_parameter: IN IDENT type_parameter_rule_list .

    $default  reduce using rule 26 (type_parameter)


state 252

   27 type_parameter: OUT IDENT type_parameter_rule_list .

    $default  reduce using rule 27 (type_parameter)


state 253

   24 type_parameter_list: type_parameter_list COMMA type_parameter .

    $default  reduce using rule 24 (type_parameter_list)


state 254

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 269


state 255

   60 modifier_type_T: STATIC . NATIVE
   62                | STATIC .  [IDENT, DEF]

    NATIVE  shift, and go to state 270

    $default  reduce using rule 62 (modifier_type_T)


state 256

   61 modifier_type_T: NATIVE . STATIC
   63                | NATIVE .  [IDENT, DEF]

    STATIC  shift, and go to state 271

    $default  reduce using rule 63 (modifier_type_T)


state 257

   46 constructor_define: CTOR . NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR . NEW LRB RRB constructor_chain_optional scope_optional

    NEW  shift, and go to state 272


state 258

   40 access_member_list: access_level_T COLON member_define_list .  [RCB, PUBLIC, PRIVATE, PROTECTED]
   42 member_define_list: member_define_list . member_define
   43 member_define: . constructor_define
   44              | . method_define
   45              | . field_define
   46 constructor_define: . CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | . CTOR NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: . modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | . modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: . modifier_type_T typename_T IDENT SEMI
   59 modifier_type_T: .  [IDENT, DEF]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 255
    NATIVE  shift, and go to state 256
    CTOR    shift, and go to state 257

    IDENT     reduce using rule 59 (modifier_type_T)
    DEF       reduce using rule 59 (modifier_type_T)
    $default  reduce using rule 40 (access_member_list)

    member_define       go to state 273
    constructor_define  go to state 260
    method_define       go to state 261
    field_define        go to state 262
    modifier_type_T     go to state 263


state 259

   41 member_define_list: member_define .

    $default  reduce using rule 41 (member_define_list)


state 260

   43 member_define: constructor_define .

    $default  reduce using rule 43 (member_define)


state 261

   44 member_define: method_define .

    $default  reduce using rule 44 (member_define)


state 262

   45 member_define: field_define .

    $default  reduce using rule 45 (member_define)


state 263

   56 method_define: modifier_type_T . DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T . DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: modifier_type_T . typename_T IDENT SEMI
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6
    DEF    shift, and go to state 274

    typename_T  go to state 275


state 264

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 276


state 265

   68 ident_list: ident_list COMMA IDENT .

    $default  reduce using rule 68 (ident_list)


state 266

   33 enum_decl: ENUM IDENT LCB ident_list COMMA RCB .

    $default  reduce using rule 33 (enum_decl)


state 267

  142 elif: ELIF LRB expression RRB . scope
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB

    LCB  shift, and go to state 65

    scope  go to state 277


state 268

   29 type_parameter_rule_list: LRB typename_list RRB .

    $default  reduce using rule 29 (type_parameter_rule_list)


state 269

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 35 (interface_decl)


state 270

   60 modifier_type_T: STATIC NATIVE .

    $default  reduce using rule 60 (modifier_type_T)


state 271

   61 modifier_type_T: NATIVE STATIC .

    $default  reduce using rule 61 (modifier_type_T)


state 272

   46 constructor_define: CTOR NEW . LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW . LRB RRB constructor_chain_optional scope_optional

    LRB  shift, and go to state 278


state 273

   42 member_define_list: member_define_list member_define .

    $default  reduce using rule 42 (member_define_list)


state 274

   56 method_define: modifier_type_T DEF . IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF . IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 279


state 275

   58 field_define: modifier_type_T typename_T . IDENT SEMI

    IDENT  shift, and go to state 280


state 276

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 31 (class_decl)


state 277

  142 elif: ELIF LRB expression RRB scope .

    $default  reduce using rule 142 (elif)


state 278

   46 constructor_define: CTOR NEW LRB . parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW LRB . RRB constructor_chain_optional scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 281

    parameter_list  go to state 282
    typename_T      go to state 154


state 279

   21 type_parameter_group: .  [LRB]
   22                     | . LT type_parameter_list GT
   56 method_define: modifier_type_T DEF IDENT . type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT . type_parameter_group LRB RRB ARROW typename_T scope_optional

    LT  shift, and go to state 194

    $default  reduce using rule 21 (type_parameter_group)

    type_parameter_group  go to state 283


state 280

   58 field_define: modifier_type_T typename_T IDENT . SEMI

    SEMI  shift, and go to state 284


state 281

   47 constructor_define: CTOR NEW LRB RRB . constructor_chain_optional scope_optional
   48 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   49                  | . COLON constructor_chain_type_T LRB RRB
   52 constructor_chain_optional: .  [LCB, SEMI]
   53                           | . constructor_chain

    COLON  shift, and go to state 285

    $default  reduce using rule 52 (constructor_chain_optional)

    constructor_chain           go to state 286
    constructor_chain_optional  go to state 287


state 282

   46 constructor_define: CTOR NEW LRB parameter_list . RRB constructor_chain_optional scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 175
    RRB    shift, and go to state 288


state 283

   56 method_define: modifier_type_T DEF IDENT type_parameter_group . LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 289


state 284

   58 field_define: modifier_type_T typename_T IDENT SEMI .

    $default  reduce using rule 58 (field_define)


state 285

   48 constructor_chain: COLON . constructor_chain_type_T LRB argument_list RRB
   49                  | COLON . constructor_chain_type_T LRB RRB
   50 constructor_chain_type_T: . SUPER
   51                         | . THIS

    THIS   shift, and go to state 290
    SUPER  shift, and go to state 291

    constructor_chain_type_T  go to state 292


state 286

   53 constructor_chain_optional: constructor_chain .

    $default  reduce using rule 53 (constructor_chain_optional)


state 287

   47 constructor_define: CTOR NEW LRB RRB constructor_chain_optional . scope_optional
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB
  154 scope_optional: . SEMI
  155               | . scope

    LCB   shift, and go to state 65
    SEMI  shift, and go to state 186

    scope           go to state 187
    scope_optional  go to state 293


state 288

   46 constructor_define: CTOR NEW LRB parameter_list RRB . constructor_chain_optional scope_optional
   48 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   49                  | . COLON constructor_chain_type_T LRB RRB
   52 constructor_chain_optional: .  [LCB, SEMI]
   53                           | . constructor_chain

    COLON  shift, and go to state 285

    $default  reduce using rule 52 (constructor_chain_optional)

    constructor_chain           go to state 286
    constructor_chain_optional  go to state 294


state 289

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB . parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group LRB . RRB ARROW typename_T scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 295

    parameter_list  go to state 296
    typename_T      go to state 154


state 290

   51 constructor_chain_type_T: THIS .

    $default  reduce using rule 51 (constructor_chain_type_T)


state 291

   50 constructor_chain_type_T: SUPER .

    $default  reduce using rule 50 (constructor_chain_type_T)


state 292

   48 constructor_chain: COLON constructor_chain_type_T . LRB argument_list RRB
   49                  | COLON constructor_chain_type_T . LRB RRB

    LRB  shift, and go to state 297


state 293

   47 constructor_define: CTOR NEW LRB RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 47 (constructor_define)


state 294

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional . scope_optional
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB
  154 scope_optional: . SEMI
  155               | . scope

    LCB   shift, and go to state 65
    SEMI  shift, and go to state 186

    scope           go to state 187
    scope_optional  go to state 298


state 295

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 299


state 296

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list . RRB ARROW typename_T scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 175
    RRB    shift, and go to state 300


state 297

   48 constructor_chain: COLON constructor_chain_type_T LRB . argument_list RRB
   49                  | COLON constructor_chain_type_T LRB . RRB
   71 argument_list: . expression
   72              | . argument_list COMMA expression
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    RRB             shift, and go to state 301
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    argument_list  go to state 302
    expression     go to state 303
    primary        go to state 33


state 298

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 46 (constructor_define)


state 299

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW . typename_T scope_optional
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 304


state 300

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 305


state 301

   49 constructor_chain: COLON constructor_chain_type_T LRB RRB .

    $default  reduce using rule 49 (constructor_chain)


state 302

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list . RRB
   72 argument_list: argument_list . COMMA expression

    COMMA  shift, and go to state 306
    RRB    shift, and go to state 307


state 303

   71 argument_list: expression .  [COMMA, RRB]
   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 71 (argument_list)


state 304

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T . scope_optional
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB
  154 scope_optional: . SEMI
  155               | . scope

    LCB   shift, and go to state 65
    SEMI  shift, and go to state 186

    scope           go to state 187
    scope_optional  go to state 308


state 305

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW . typename_T scope_optional
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 309


state 306

   72 argument_list: argument_list COMMA . expression
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . LRB expression RRB
  113 primary: . INT
  114        | . DOUBLE
  115        | . CHAR_LITERAL
  116        | . STRING_LITERAL
  117        | . TRUE_TOK
  118        | . FALSE_TOK
  119        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression  go to state 310
    primary     go to state 33


state 307

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB .

    $default  reduce using rule 48 (constructor_chain)


state 308

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 57 (method_define)


state 309

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T . scope_optional
  152 scope: . LCB stmt_list RCB
  153      | . LCB RCB
  154 scope_optional: . SEMI
  155               | . scope

    LCB   shift, and go to state 65
    SEMI  shift, and go to state 186

    scope           go to state 187
    scope_optional  go to state 311


state 310

   72 argument_list: argument_list COMMA expression .  [COMMA, RRB]
   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MOD            shift, and go to state 74
    LSHIFT         shift, and go to state 75
    RSHIFT         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOTEQUAL       shift, and go to state 78
    GT             shift, and go to state 79
    GE             shift, and go to state 80
    LT             shift, and go to state 81
    LE             shift, and go to state 82
    BIT_AND        shift, and go to state 83
    LOGIC_AND      shift, and go to state 84
    BIT_OR         shift, and go to state 85
    LOGIC_OR       shift, and go to state 86
    ASSIGN         shift, and go to state 87
    ADD_ASSIGN     shift, and go to state 88
    SUB_ASSIGN     shift, and go to state 89
    MUL_ASSIGN     shift, and go to state 90
    DIV_ASSIGN     shift, and go to state 91
    MOD_ASSIGN     shift, and go to state 92
    AND_ASSIGN     shift, and go to state 93
    OR_ASSIGN      shift, and go to state 94
    LSHIFT_ASSIGN  shift, and go to state 95
    RSHIFT_ASSIGN  shift, and go to state 96
    EXC_OR_ASSIGN  shift, and go to state 97
    EXC_OR         shift, and go to state 98

    $default  reduce using rule 72 (argument_list)


state 311

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 56 (method_define)
