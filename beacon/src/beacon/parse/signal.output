Terminals which are not used

   LINE
   INC
   DEC
   LSB
   RSB
   QUOTE
   POST_DEC
   POST_INC
   FUNCCALL
   '<'
   PRE_DEC
   PRE_INC
   FORM_TYPE


State 35 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: program
    2                 | error '\n'

    3 program: stmt_list
    4        | import
    5        | namespace_decl
    6        | function_define

    7 namespace_decl: NAMESPACE namespace_path namespace_body

    8 namespace_body: LCB namespace_member_decl_optional RCB

    9 namespace_member_decl: NAMESPACE namespace_path namespace_body
   10                      | class_decl
   11                      | interface_decl
   12                      | enum_decl

   13 namespace_member_decl_list: namespace_member_decl
   14                           | namespace_member_decl_list namespace_member_decl

   15 namespace_member_decl_optional: /* empty */
   16                               | namespace_member_decl_list

   17 namespace_path: IDENT
   18               | namespace_path DOT IDENT

   19 import: IMPORT STRING_LITERAL

   20 parameterized_typename: IDENT type_parameter_group

   21 type_parameter_group: /* empty */
   22                     | LT type_parameter_list GT

   23 type_parameter_list: type_parameter
   24                    | type_parameter_list COMMA type_parameter

   25 type_parameter: IDENT type_parameter_rule_list
   26               | IN IDENT type_parameter_rule_list
   27               | OUT IDENT type_parameter_rule_list

   28 type_parameter_rule_list: /* empty */
   29                         | LRB typename_list RRB

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   32 enum_decl: ENUM IDENT LCB ident_list RCB
   33          | ENUM IDENT LCB ident_list COMMA RCB

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   36 access_member_tree_opt: /* empty */
   37                       | access_member_tree

   38 access_member_tree: access_member_list
   39                   | access_member_tree access_member_list

   40 access_member_list: access_level_T COLON member_define_list

   41 member_define_list: member_define
   42                   | member_define_list member_define

   43 member_define: constructor_define
   44              | method_define
   45              | field_define

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW LRB RRB constructor_chain_optional scope_optional

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB
   49                  | COLON constructor_chain_type_T LRB RRB

   50 constructor_chain_type_T: SUPER
   51                         | THIS

   52 constructor_chain_optional: /* empty */
   53                           | constructor_chain

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT LRB RRB ARROW typename_T scope_optional

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

   58 field_define: modifier_type_T typename_T IDENT SEMI

   59 modifier_type_T: /* empty */
   60                | STATIC NATIVE
   61                | NATIVE STATIC
   62                | STATIC
   63                | NATIVE

   64 access_level_T: PUBLIC
   65               | PRIVATE
   66               | PROTECTED

   67 ident_list: IDENT
   68           | ident_list COMMA IDENT

   69 parameter_list: typename_T IDENT
   70               | parameter_list COMMA typename_T IDENT

   71 argument_list: expression
   72              | argument_list COMMA expression

   73 typename_group: /* empty */
   74               | LT typename_list GT

   75 typename_list: typename_T
   76              | typename_list COMMA typename_T

   77 typename_T: fqcn_part typename_group

   78 fqcn_part: IDENT
   79          | fqcn_part COLO_COLO IDENT

   80 expression: LRB expression RRB
   81           | expression_nobrace

   82 expression_nobrace: primary
   83                   | ADD expression
   84                   | SUB expression
   85                   | expression ADD expression
   86                   | expression SUB expression
   87                   | expression MUL expression
   88                   | expression DIV expression
   89                   | expression MOD expression
   90                   | expression BIT_OR expression
   91                   | expression EQUAL expression
   92                   | expression NOTEQUAL expression
   93                   | expression BIT_AND expression
   94                   | expression EXC_OR expression
   95                   | expression LOGIC_OR expression
   96                   | expression LOGIC_AND expression
   97                   | expression ASSIGN expression
   98                   | expression ADD_ASSIGN expression
   99                   | expression SUB_ASSIGN expression
  100                   | expression MUL_ASSIGN expression
  101                   | expression DIV_ASSIGN expression
  102                   | expression MOD_ASSIGN expression
  103                   | expression AND_ASSIGN expression
  104                   | expression OR_ASSIGN expression
  105                   | expression EXC_OR_ASSIGN expression
  106                   | expression LSHIFT_ASSIGN expression
  107                   | expression RSHIFT_ASSIGN expression
  108                   | expression GT expression
  109                   | expression GE expression
  110                   | expression LT expression
  111                   | expression LE expression
  112                   | expression LSHIFT expression
  113                   | expression RSHIFT expression
  114                   | expression DOT IDENT typename_group
  115                   | expression AS typename_T
  116                   | CHILDA expression
  117                   | NOT expression
  118                   | expression_nobrace LRB argument_list RRB
  119                   | expression_nobrace LRB RRB
  120                   | NEW typename_T LRB argument_list RRB
  121                   | NEW typename_T LRB RRB

  122 primary: INT
  123        | DOUBLE
  124        | CHAR_LITERAL
  125        | STRING_LITERAL
  126        | TRUE_TOK
  127        | FALSE_TOK
  128        | NULL_TOK
  129        | fqcn_part typename_group
  130        | THIS
  131        | SUPER

  132 stmt_list: stmt
  133          | stmt_list stmt

  134 stmt: expression stmt_term
  135     | variable_decl_stmt
  136     | variable_init_stmt
  137     | inferenced_type_init_stmt
  138     | if_stmt
  139     | while_stmt
  140     | break_stmt
  141     | continue_stmt
  142     | return_stmt
  143     | throw_stmt
  144     | try_stmt

  145 variable_decl_stmt: typename_T IDENT SEMI

  146 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term

  147 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term

  148 if_stmt: IF LRB expression RRB scope
  149        | IF LRB expression RRB scope ELSE scope
  150        | IF LRB expression RRB scope elif_list
  151        | IF LRB expression RRB scope elif_list ELSE scope

  152 elif_list: elif
  153          | elif_list elif

  154 elif: ELIF LRB expression RRB scope

  155 while_stmt: WHILE LRB expression RRB scope_optional

  156 break_stmt: BREAK stmt_term

  157 continue_stmt: CONTINUE stmt_term

  158 return_stmt: RETURN expression stmt_term

  159 throw_stmt: THROW expression stmt_term

  160 try_stmt: TRY scope catch_stmt_list

  161 catch_stmt_list: catch_stmt
  162                | catch_stmt_list catch_stmt

  163 catch_stmt: CATCH LRB typename_T IDENT RRB scope

  164 scope: LCB stmt_list RCB
  165      | LCB RCB

  166 scope_optional: SEMI
  167               | scope

  168 stmt_term: SEMI
  169          | '\n'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 169
'<' (60)
error (256) 2
CHAR_LITERAL (258) 124
STRING_LITERAL (259) 19 125
INT (260) 122
DOUBLE (261) 123
IDENT (262) 17 18 20 25 26 27 32 33 54 55 56 57 58 67 68 69 70 78 79
    114 145 146 147 163
DOT (263) 18 114
COMMA (264) 24 33 68 70 72 76
COLON (265) 31 35 40 48 49
COLO_COLO (266) 79
LINE (267)
ADD (268) 83 85
SUB (269) 84 86
MUL (270) 87
DIV (271) 88
MOD (272) 89
NOT (273) 117
LSHIFT (274) 112
RSHIFT (275) 113
CHILDA (276) 116
EQUAL (277) 91
NOTEQUAL (278) 92
GT (279) 22 74 108
GE (280) 109
LT (281) 22 74 110
LE (282) 111
BIT_AND (283) 93
LOGIC_AND (284) 96
BIT_OR (285) 90
LOGIC_OR (286) 95
ASSIGN (287) 97 146 147
ADD_ASSIGN (288) 98
SUB_ASSIGN (289) 99
MUL_ASSIGN (290) 100
DIV_ASSIGN (291) 101
MOD_ASSIGN (292) 102
AND_ASSIGN (293) 103
OR_ASSIGN (294) 104
LSHIFT_ASSIGN (295) 106
RSHIFT_ASSIGN (296) 107
EXC_OR_ASSIGN (297) 105
INC (298)
DEC (299)
EXC_OR (300) 94
LCB (301) 8 30 31 32 33 34 35 164 165
RCB (302) 8 30 31 32 33 34 35 164 165
LRB (303) 29 46 47 48 49 54 55 56 57 80 118 119 120 121 148 149 150
    151 154 155 163
RRB (304) 29 46 47 48 49 54 55 56 57 80 118 119 120 121 148 149 150
    151 154 155 163
LSB (305)
RSB (306)
SEMI (307) 58 145 166 168
IMPORT (308) 19
VAR (309) 147
THIS (310) 51 130
SUPER (311) 50 131
TRUE_TOK (312) 126
FALSE_TOK (313) 127
NULL_TOK (314) 128
AS (315) 115
INTERFACE (316) 34 35
CLASS (317) 30 31
ENUM (318) 32 33
PUBLIC (319) 64
PRIVATE (320) 65
PROTECTED (321) 66
STATIC (322) 60 61 62
NATIVE (323) 60 61 63
NEW (324) 46 47 120 121
IN (325) 26
OUT (326) 27
CTOR (327) 46 47
DEF (328) 54 55 56 57
ARROW (329) 54 55 56 57
NAMESPACE (330) 7 9
RETURN (331) 158
IF (332) 148 149 150 151
ELIF (333) 154
ELSE (334) 149 151
WHILE (335) 155
BREAK (336) 156
CONTINUE (337) 157
TRY (338) 160
CATCH (339) 163
THROW (340) 159
QUOTE (341)
POST_DEC (342)
POST_INC (343)
FUNCCALL (344)
POSITIVE (345)
NEGATIVE (346)
PRE_DEC (347)
PRE_INC (348)
FORM_TYPE (349)


Nonterminals, with rules where they appear

$accept (97)
    on left: 0
compilation_unit (98)
    on left: 1 2, on right: 0
program (99)
    on left: 3 4 5 6, on right: 1
namespace_decl (100)
    on left: 7, on right: 5
namespace_body (101)
    on left: 8, on right: 7 9
namespace_member_decl (102)
    on left: 9 10 11 12, on right: 13 14
namespace_member_decl_list (103)
    on left: 13 14, on right: 14 16
namespace_member_decl_optional (104)
    on left: 15 16, on right: 8
namespace_path (105)
    on left: 17 18, on right: 7 9 18
import (106)
    on left: 19, on right: 4
parameterized_typename (107)
    on left: 20, on right: 30 31 34 35
type_parameter_group (108)
    on left: 21 22, on right: 20 56 57
type_parameter_list (109)
    on left: 23 24, on right: 22 24
type_parameter (110)
    on left: 25 26 27, on right: 23 24
type_parameter_rule_list (111)
    on left: 28 29, on right: 25 26 27
class_decl (112)
    on left: 30 31, on right: 10
enum_decl (113)
    on left: 32 33, on right: 12
interface_decl (114)
    on left: 34 35, on right: 11
access_member_tree_opt (115)
    on left: 36 37, on right: 30 31 34 35
access_member_tree (116)
    on left: 38 39, on right: 37 39
access_member_list (117)
    on left: 40, on right: 38 39
member_define_list (118)
    on left: 41 42, on right: 40 42
member_define (119)
    on left: 43 44 45, on right: 41 42
constructor_define (120)
    on left: 46 47, on right: 43
constructor_chain (121)
    on left: 48 49, on right: 53
constructor_chain_type_T (122)
    on left: 50 51, on right: 48 49
constructor_chain_optional (123)
    on left: 52 53, on right: 46 47
function_define (124)
    on left: 54 55, on right: 6
method_define (125)
    on left: 56 57, on right: 44
field_define (126)
    on left: 58, on right: 45
modifier_type_T (127)
    on left: 59 60 61 62 63, on right: 56 57 58
access_level_T (128)
    on left: 64 65 66, on right: 40
ident_list (129)
    on left: 67 68, on right: 32 33 68
parameter_list (130)
    on left: 69 70, on right: 46 54 56 70
argument_list (131)
    on left: 71 72, on right: 48 72 118 120
typename_group (132)
    on left: 73 74, on right: 77 114 129
typename_list (133)
    on left: 75 76, on right: 29 31 35 74 76
typename_T (134)
    on left: 77, on right: 54 55 56 57 58 69 70 75 76 115 120 121 145
    146 163
fqcn_part (135)
    on left: 78 79, on right: 77 79 129
expression (136)
    on left: 80 81, on right: 71 72 80 83 84 85 86 87 88 89 90 91 92
    93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
    111 112 113 114 115 116 117 134 146 147 148 149 150 151 154 155
    158 159
expression_nobrace (137)
    on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
    100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
    116 117 118 119 120 121, on right: 81 118 119
primary (138)
    on left: 122 123 124 125 126 127 128 129 130 131,
    on right: 82
stmt_list (139)
    on left: 132 133, on right: 3 133 164
stmt (140)
    on left: 134 135 136 137 138 139 140 141 142 143 144,
    on right: 132 133
variable_decl_stmt (141)
    on left: 145, on right: 135
variable_init_stmt (142)
    on left: 146, on right: 136
inferenced_type_init_stmt (143)
    on left: 147, on right: 137
if_stmt (144)
    on left: 148 149 150 151, on right: 138
elif_list (145)
    on left: 152 153, on right: 150 151 153
elif (146)
    on left: 154, on right: 152 153
while_stmt (147)
    on left: 155, on right: 139
break_stmt (148)
    on left: 156, on right: 140
continue_stmt (149)
    on left: 157, on right: 141
return_stmt (150)
    on left: 158, on right: 142
throw_stmt (151)
    on left: 159, on right: 143
try_stmt (152)
    on left: 160, on right: 144
catch_stmt_list (153)
    on left: 161 162, on right: 160 162
catch_stmt (154)
    on left: 163, on right: 161 162
scope (155)
    on left: 164 165, on right: 148 149 150 151 154 160 163 167
scope_optional (156)
    on left: 166 167, on right: 46 47 54 55 56 57 155
stmt_term (157)
    on left: 168 169, on right: 134 146 147 156 157 158 159


state 0

    0 $accept: . compilation_unit $end
    1 compilation_unit: . program
    2                 | . error '\n'
    3 program: . stmt_list
    4        | . import
    5        | . namespace_decl
    6        | . function_define
    7 namespace_decl: . NAMESPACE namespace_path namespace_body
   19 import: . IMPORT STRING_LITERAL
   54 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  132 stmt_list: . stmt
  133          | . stmt_list stmt
  134 stmt: . expression stmt_term
  135     | . variable_decl_stmt
  136     | . variable_init_stmt
  137     | . inferenced_type_init_stmt
  138     | . if_stmt
  139     | . while_stmt
  140     | . break_stmt
  141     | . continue_stmt
  142     | . return_stmt
  143     | . throw_stmt
  144     | . try_stmt
  145 variable_decl_stmt: . typename_T IDENT SEMI
  146 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  147 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  148 if_stmt: . IF LRB expression RRB scope
  149        | . IF LRB expression RRB scope ELSE scope
  150        | . IF LRB expression RRB scope elif_list
  151        | . IF LRB expression RRB scope elif_list ELSE scope
  155 while_stmt: . WHILE LRB expression RRB scope_optional
  156 break_stmt: . BREAK stmt_term
  157 continue_stmt: . CONTINUE stmt_term
  158 return_stmt: . RETURN expression stmt_term
  159 throw_stmt: . THROW expression stmt_term
  160 try_stmt: . TRY scope catch_stmt_list

    error           shift, and go to state 1
    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    IMPORT          shift, and go to state 12
    VAR             shift, and go to state 13
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19
    DEF             shift, and go to state 20
    NAMESPACE       shift, and go to state 21
    RETURN          shift, and go to state 22
    IF              shift, and go to state 23
    WHILE           shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    TRY             shift, and go to state 27
    THROW           shift, and go to state 28

    compilation_unit           go to state 29
    program                    go to state 30
    namespace_decl             go to state 31
    import                     go to state 32
    function_define            go to state 33
    typename_T                 go to state 34
    fqcn_part                  go to state 35
    expression                 go to state 36
    expression_nobrace         go to state 37
    primary                    go to state 38
    stmt_list                  go to state 39
    stmt                       go to state 40
    variable_decl_stmt         go to state 41
    variable_init_stmt         go to state 42
    inferenced_type_init_stmt  go to state 43
    if_stmt                    go to state 44
    while_stmt                 go to state 45
    break_stmt                 go to state 46
    continue_stmt              go to state 47
    return_stmt                go to state 48
    throw_stmt                 go to state 49
    try_stmt                   go to state 50


state 1

    2 compilation_unit: error . '\n'

    '\n'  shift, and go to state 51


state 2

  124 primary: CHAR_LITERAL .

    $default  reduce using rule 124 (primary)


state 3

  125 primary: STRING_LITERAL .

    $default  reduce using rule 125 (primary)


state 4

  122 primary: INT .

    $default  reduce using rule 122 (primary)


state 5

  123 primary: DOUBLE .

    $default  reduce using rule 123 (primary)


state 6

   78 fqcn_part: IDENT .

    $default  reduce using rule 78 (fqcn_part)


state 7

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   83                   | ADD . expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 53
    expression_nobrace  go to state 37
    primary             go to state 38


state 8

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   84                   | SUB . expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 54
    expression_nobrace  go to state 37
    primary             go to state 38


state 9

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  117                   | NOT . expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 55
    expression_nobrace  go to state 37
    primary             go to state 38


state 10

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  116                   | CHILDA . expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 56
    expression_nobrace  go to state 37
    primary             go to state 38


state 11

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   80           | LRB . expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 57
    expression_nobrace  go to state 37
    primary             go to state 38


state 12

   19 import: IMPORT . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 58


state 13

  147 inferenced_type_init_stmt: VAR . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 59


state 14

  130 primary: THIS .

    $default  reduce using rule 130 (primary)


state 15

  131 primary: SUPER .

    $default  reduce using rule 131 (primary)


state 16

  126 primary: TRUE_TOK .

    $default  reduce using rule 126 (primary)


state 17

  127 primary: FALSE_TOK .

    $default  reduce using rule 127 (primary)


state 18

  128 primary: NULL_TOK .

    $default  reduce using rule 128 (primary)


state 19

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
  120 expression_nobrace: NEW . typename_T LRB argument_list RRB
  121                   | NEW . typename_T LRB RRB

    IDENT  shift, and go to state 6

    typename_T  go to state 60
    fqcn_part   go to state 61


state 20

   54 function_define: DEF . IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF . IDENT LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 62


state 21

    7 namespace_decl: NAMESPACE . namespace_path namespace_body
   17 namespace_path: . IDENT
   18               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 63

    namespace_path  go to state 64


state 22

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  158 return_stmt: RETURN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 65
    expression_nobrace  go to state 37
    primary             go to state 38


state 23

  148 if_stmt: IF . LRB expression RRB scope
  149        | IF . LRB expression RRB scope ELSE scope
  150        | IF . LRB expression RRB scope elif_list
  151        | IF . LRB expression RRB scope elif_list ELSE scope

    LRB  shift, and go to state 66


state 24

  155 while_stmt: WHILE . LRB expression RRB scope_optional

    LRB  shift, and go to state 67


state 25

  156 break_stmt: BREAK . stmt_term
  168 stmt_term: . SEMI
  169          | . '\n'

    SEMI  shift, and go to state 68
    '\n'  shift, and go to state 69

    stmt_term  go to state 70


state 26

  157 continue_stmt: CONTINUE . stmt_term
  168 stmt_term: . SEMI
  169          | . '\n'

    SEMI  shift, and go to state 68
    '\n'  shift, and go to state 69

    stmt_term  go to state 71


state 27

  160 try_stmt: TRY . scope catch_stmt_list
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB

    LCB  shift, and go to state 72

    scope  go to state 73


state 28

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  159 throw_stmt: THROW . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 74
    expression_nobrace  go to state 37
    primary             go to state 38


state 29

    0 $accept: compilation_unit . $end

    $end  shift, and go to state 75


state 30

    1 compilation_unit: program .

    $default  reduce using rule 1 (compilation_unit)


state 31

    5 program: namespace_decl .

    $default  reduce using rule 5 (program)


state 32

    4 program: import .

    $default  reduce using rule 4 (program)


state 33

    6 program: function_define .

    $default  reduce using rule 6 (program)


state 34

  145 variable_decl_stmt: typename_T . IDENT SEMI
  146 variable_init_stmt: typename_T . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 76


state 35

   73 typename_group: .  [IDENT, DOT, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, SEMI, AS, '\n']
   74               | . LT typename_list GT
   77 typename_T: fqcn_part . typename_group
   79 fqcn_part: fqcn_part . COLO_COLO IDENT
  129 primary: fqcn_part . typename_group

    COLO_COLO  shift, and go to state 77
    LT         shift, and go to state 78

    LT        [reduce using rule 73 (typename_group)]
    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 79


state 36

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  134 stmt: expression . stmt_term
  168 stmt_term: . SEMI
  169          | . '\n'

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    SEMI           shift, and go to state 68
    AS             shift, and go to state 110
    '\n'           shift, and go to state 69

    stmt_term  go to state 111


state 37

   81 expression: expression_nobrace .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  118 expression_nobrace: expression_nobrace . LRB argument_list RRB
  119                   | expression_nobrace . LRB RRB

    LRB  shift, and go to state 112

    LRB       [reduce using rule 81 (expression)]
    $default  reduce using rule 81 (expression)


state 38

   82 expression_nobrace: primary .

    $default  reduce using rule 82 (expression_nobrace)


state 39

    3 program: stmt_list .  [$end]
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  133 stmt_list: stmt_list . stmt
  134 stmt: . expression stmt_term
  135     | . variable_decl_stmt
  136     | . variable_init_stmt
  137     | . inferenced_type_init_stmt
  138     | . if_stmt
  139     | . while_stmt
  140     | . break_stmt
  141     | . continue_stmt
  142     | . return_stmt
  143     | . throw_stmt
  144     | . try_stmt
  145 variable_decl_stmt: . typename_T IDENT SEMI
  146 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  147 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  148 if_stmt: . IF LRB expression RRB scope
  149        | . IF LRB expression RRB scope ELSE scope
  150        | . IF LRB expression RRB scope elif_list
  151        | . IF LRB expression RRB scope elif_list ELSE scope
  155 while_stmt: . WHILE LRB expression RRB scope_optional
  156 break_stmt: . BREAK stmt_term
  157 continue_stmt: . CONTINUE stmt_term
  158 return_stmt: . RETURN expression stmt_term
  159 throw_stmt: . THROW expression stmt_term
  160 try_stmt: . TRY scope catch_stmt_list

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19
    RETURN          shift, and go to state 22
    IF              shift, and go to state 23
    WHILE           shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    TRY             shift, and go to state 27
    THROW           shift, and go to state 28

    $default  reduce using rule 3 (program)

    typename_T                 go to state 34
    fqcn_part                  go to state 35
    expression                 go to state 36
    expression_nobrace         go to state 37
    primary                    go to state 38
    stmt                       go to state 113
    variable_decl_stmt         go to state 41
    variable_init_stmt         go to state 42
    inferenced_type_init_stmt  go to state 43
    if_stmt                    go to state 44
    while_stmt                 go to state 45
    break_stmt                 go to state 46
    continue_stmt              go to state 47
    return_stmt                go to state 48
    throw_stmt                 go to state 49
    try_stmt                   go to state 50


state 40

  132 stmt_list: stmt .

    $default  reduce using rule 132 (stmt_list)


state 41

  135 stmt: variable_decl_stmt .

    $default  reduce using rule 135 (stmt)


state 42

  136 stmt: variable_init_stmt .

    $default  reduce using rule 136 (stmt)


state 43

  137 stmt: inferenced_type_init_stmt .

    $default  reduce using rule 137 (stmt)


state 44

  138 stmt: if_stmt .

    $default  reduce using rule 138 (stmt)


state 45

  139 stmt: while_stmt .

    $default  reduce using rule 139 (stmt)


state 46

  140 stmt: break_stmt .

    $default  reduce using rule 140 (stmt)


state 47

  141 stmt: continue_stmt .

    $default  reduce using rule 141 (stmt)


state 48

  142 stmt: return_stmt .

    $default  reduce using rule 142 (stmt)


state 49

  143 stmt: throw_stmt .

    $default  reduce using rule 143 (stmt)


state 50

  144 stmt: try_stmt .

    $default  reduce using rule 144 (stmt)


state 51

    2 compilation_unit: error '\n' .

    $default  reduce using rule 2 (compilation_unit)


state 52

   73 typename_group: .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, RRB, SEMI, AS, '\n']
   74               | . LT typename_list GT
   79 fqcn_part: fqcn_part . COLO_COLO IDENT
  129 primary: fqcn_part . typename_group

    COLO_COLO  shift, and go to state 77
    LT         shift, and go to state 78

    LT        [reduce using rule 73 (typename_group)]
    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 114


state 53

   83 expression_nobrace: ADD expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   85                   | expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 83 (expression_nobrace)

    Conflict between rule 83 and token DOT resolved as reduce (DOT < POSITIVE).
    Conflict between rule 83 and token ADD resolved as reduce (ADD < POSITIVE).
    Conflict between rule 83 and token SUB resolved as reduce (SUB < POSITIVE).
    Conflict between rule 83 and token MUL resolved as reduce (MUL < POSITIVE).
    Conflict between rule 83 and token DIV resolved as reduce (DIV < POSITIVE).
    Conflict between rule 83 and token MOD resolved as reduce (MOD < POSITIVE).
    Conflict between rule 83 and token LSHIFT resolved as reduce (LSHIFT < POSITIVE).
    Conflict between rule 83 and token RSHIFT resolved as reduce (RSHIFT < POSITIVE).
    Conflict between rule 83 and token EQUAL resolved as reduce (EQUAL < POSITIVE).
    Conflict between rule 83 and token NOTEQUAL resolved as reduce (NOTEQUAL < POSITIVE).
    Conflict between rule 83 and token GT resolved as reduce (GT < POSITIVE).
    Conflict between rule 83 and token GE resolved as reduce (GE < POSITIVE).
    Conflict between rule 83 and token LT resolved as reduce (LT < POSITIVE).
    Conflict between rule 83 and token LE resolved as reduce (LE < POSITIVE).
    Conflict between rule 83 and token BIT_AND resolved as reduce (BIT_AND < POSITIVE).
    Conflict between rule 83 and token LOGIC_AND resolved as reduce (LOGIC_AND < POSITIVE).
    Conflict between rule 83 and token BIT_OR resolved as reduce (BIT_OR < POSITIVE).
    Conflict between rule 83 and token LOGIC_OR resolved as reduce (LOGIC_OR < POSITIVE).
    Conflict between rule 83 and token ASSIGN resolved as shift (POSITIVE < ASSIGN).
    Conflict between rule 83 and token ADD_ASSIGN resolved as shift (POSITIVE < ADD_ASSIGN).
    Conflict between rule 83 and token SUB_ASSIGN resolved as shift (POSITIVE < SUB_ASSIGN).
    Conflict between rule 83 and token MUL_ASSIGN resolved as shift (POSITIVE < MUL_ASSIGN).
    Conflict between rule 83 and token DIV_ASSIGN resolved as shift (POSITIVE < DIV_ASSIGN).
    Conflict between rule 83 and token MOD_ASSIGN resolved as shift (POSITIVE < MOD_ASSIGN).
    Conflict between rule 83 and token AND_ASSIGN resolved as shift (POSITIVE < AND_ASSIGN).
    Conflict between rule 83 and token OR_ASSIGN resolved as shift (POSITIVE < OR_ASSIGN).
    Conflict between rule 83 and token LSHIFT_ASSIGN resolved as shift (POSITIVE < LSHIFT_ASSIGN).
    Conflict between rule 83 and token RSHIFT_ASSIGN resolved as shift (POSITIVE < RSHIFT_ASSIGN).
    Conflict between rule 83 and token EXC_OR_ASSIGN resolved as shift (POSITIVE < EXC_OR_ASSIGN).
    Conflict between rule 83 and token EXC_OR resolved as reduce (EXC_OR < POSITIVE).
    Conflict between rule 83 and token AS resolved as shift (POSITIVE < AS).


state 54

   84 expression_nobrace: SUB expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   85                   | expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 84 (expression_nobrace)

    Conflict between rule 84 and token DOT resolved as reduce (DOT < NEGATIVE).
    Conflict between rule 84 and token ADD resolved as reduce (ADD < NEGATIVE).
    Conflict between rule 84 and token SUB resolved as reduce (SUB < NEGATIVE).
    Conflict between rule 84 and token MUL resolved as reduce (MUL < NEGATIVE).
    Conflict between rule 84 and token DIV resolved as reduce (DIV < NEGATIVE).
    Conflict between rule 84 and token MOD resolved as reduce (MOD < NEGATIVE).
    Conflict between rule 84 and token LSHIFT resolved as reduce (LSHIFT < NEGATIVE).
    Conflict between rule 84 and token RSHIFT resolved as reduce (RSHIFT < NEGATIVE).
    Conflict between rule 84 and token EQUAL resolved as reduce (EQUAL < NEGATIVE).
    Conflict between rule 84 and token NOTEQUAL resolved as reduce (NOTEQUAL < NEGATIVE).
    Conflict between rule 84 and token GT resolved as reduce (GT < NEGATIVE).
    Conflict between rule 84 and token GE resolved as reduce (GE < NEGATIVE).
    Conflict between rule 84 and token LT resolved as reduce (LT < NEGATIVE).
    Conflict between rule 84 and token LE resolved as reduce (LE < NEGATIVE).
    Conflict between rule 84 and token BIT_AND resolved as reduce (BIT_AND < NEGATIVE).
    Conflict between rule 84 and token LOGIC_AND resolved as reduce (LOGIC_AND < NEGATIVE).
    Conflict between rule 84 and token BIT_OR resolved as reduce (BIT_OR < NEGATIVE).
    Conflict between rule 84 and token LOGIC_OR resolved as reduce (LOGIC_OR < NEGATIVE).
    Conflict between rule 84 and token ASSIGN resolved as shift (NEGATIVE < ASSIGN).
    Conflict between rule 84 and token ADD_ASSIGN resolved as shift (NEGATIVE < ADD_ASSIGN).
    Conflict between rule 84 and token SUB_ASSIGN resolved as shift (NEGATIVE < SUB_ASSIGN).
    Conflict between rule 84 and token MUL_ASSIGN resolved as shift (NEGATIVE < MUL_ASSIGN).
    Conflict between rule 84 and token DIV_ASSIGN resolved as shift (NEGATIVE < DIV_ASSIGN).
    Conflict between rule 84 and token MOD_ASSIGN resolved as shift (NEGATIVE < MOD_ASSIGN).
    Conflict between rule 84 and token AND_ASSIGN resolved as shift (NEGATIVE < AND_ASSIGN).
    Conflict between rule 84 and token OR_ASSIGN resolved as shift (NEGATIVE < OR_ASSIGN).
    Conflict between rule 84 and token LSHIFT_ASSIGN resolved as shift (NEGATIVE < LSHIFT_ASSIGN).
    Conflict between rule 84 and token RSHIFT_ASSIGN resolved as shift (NEGATIVE < RSHIFT_ASSIGN).
    Conflict between rule 84 and token EXC_OR_ASSIGN resolved as shift (NEGATIVE < EXC_OR_ASSIGN).
    Conflict between rule 84 and token EXC_OR resolved as reduce (EXC_OR < NEGATIVE).
    Conflict between rule 84 and token AS resolved as shift (NEGATIVE < AS).


state 55

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  117                   | NOT expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 117 (expression_nobrace)

    Conflict between rule 117 and token DOT resolved as reduce (DOT < NOT).
    Conflict between rule 117 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 117 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 117 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 117 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 117 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 117 and token LSHIFT resolved as reduce (LSHIFT < NOT).
    Conflict between rule 117 and token RSHIFT resolved as reduce (RSHIFT < NOT).
    Conflict between rule 117 and token EQUAL resolved as reduce (EQUAL < NOT).
    Conflict between rule 117 and token NOTEQUAL resolved as reduce (NOTEQUAL < NOT).
    Conflict between rule 117 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 117 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 117 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 117 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 117 and token BIT_AND resolved as reduce (BIT_AND < NOT).
    Conflict between rule 117 and token LOGIC_AND resolved as reduce (LOGIC_AND < NOT).
    Conflict between rule 117 and token BIT_OR resolved as reduce (BIT_OR < NOT).
    Conflict between rule 117 and token LOGIC_OR resolved as reduce (LOGIC_OR < NOT).
    Conflict between rule 117 and token ASSIGN resolved as shift (NOT < ASSIGN).
    Conflict between rule 117 and token ADD_ASSIGN resolved as shift (NOT < ADD_ASSIGN).
    Conflict between rule 117 and token SUB_ASSIGN resolved as shift (NOT < SUB_ASSIGN).
    Conflict between rule 117 and token MUL_ASSIGN resolved as shift (NOT < MUL_ASSIGN).
    Conflict between rule 117 and token DIV_ASSIGN resolved as shift (NOT < DIV_ASSIGN).
    Conflict between rule 117 and token MOD_ASSIGN resolved as shift (NOT < MOD_ASSIGN).
    Conflict between rule 117 and token AND_ASSIGN resolved as shift (NOT < AND_ASSIGN).
    Conflict between rule 117 and token OR_ASSIGN resolved as shift (NOT < OR_ASSIGN).
    Conflict between rule 117 and token LSHIFT_ASSIGN resolved as shift (NOT < LSHIFT_ASSIGN).
    Conflict between rule 117 and token RSHIFT_ASSIGN resolved as shift (NOT < RSHIFT_ASSIGN).
    Conflict between rule 117 and token EXC_OR_ASSIGN resolved as shift (NOT < EXC_OR_ASSIGN).
    Conflict between rule 117 and token EXC_OR resolved as reduce (EXC_OR < NOT).
    Conflict between rule 117 and token AS resolved as shift (NOT < AS).


state 56

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  116                   | CHILDA expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 116 (expression_nobrace)

    Conflict between rule 116 and token DOT resolved as reduce (DOT < CHILDA).
    Conflict between rule 116 and token ADD resolved as reduce (ADD < CHILDA).
    Conflict between rule 116 and token SUB resolved as reduce (SUB < CHILDA).
    Conflict between rule 116 and token MUL resolved as reduce (MUL < CHILDA).
    Conflict between rule 116 and token DIV resolved as reduce (DIV < CHILDA).
    Conflict between rule 116 and token MOD resolved as reduce (MOD < CHILDA).
    Conflict between rule 116 and token LSHIFT resolved as reduce (LSHIFT < CHILDA).
    Conflict between rule 116 and token RSHIFT resolved as reduce (RSHIFT < CHILDA).
    Conflict between rule 116 and token EQUAL resolved as reduce (EQUAL < CHILDA).
    Conflict between rule 116 and token NOTEQUAL resolved as reduce (NOTEQUAL < CHILDA).
    Conflict between rule 116 and token GT resolved as reduce (GT < CHILDA).
    Conflict between rule 116 and token GE resolved as reduce (GE < CHILDA).
    Conflict between rule 116 and token LT resolved as reduce (LT < CHILDA).
    Conflict between rule 116 and token LE resolved as reduce (LE < CHILDA).
    Conflict between rule 116 and token BIT_AND resolved as reduce (BIT_AND < CHILDA).
    Conflict between rule 116 and token LOGIC_AND resolved as reduce (LOGIC_AND < CHILDA).
    Conflict between rule 116 and token BIT_OR resolved as reduce (BIT_OR < CHILDA).
    Conflict between rule 116 and token LOGIC_OR resolved as reduce (LOGIC_OR < CHILDA).
    Conflict between rule 116 and token ASSIGN resolved as shift (CHILDA < ASSIGN).
    Conflict between rule 116 and token ADD_ASSIGN resolved as shift (CHILDA < ADD_ASSIGN).
    Conflict between rule 116 and token SUB_ASSIGN resolved as shift (CHILDA < SUB_ASSIGN).
    Conflict between rule 116 and token MUL_ASSIGN resolved as shift (CHILDA < MUL_ASSIGN).
    Conflict between rule 116 and token DIV_ASSIGN resolved as shift (CHILDA < DIV_ASSIGN).
    Conflict between rule 116 and token MOD_ASSIGN resolved as shift (CHILDA < MOD_ASSIGN).
    Conflict between rule 116 and token AND_ASSIGN resolved as shift (CHILDA < AND_ASSIGN).
    Conflict between rule 116 and token OR_ASSIGN resolved as shift (CHILDA < OR_ASSIGN).
    Conflict between rule 116 and token LSHIFT_ASSIGN resolved as shift (CHILDA < LSHIFT_ASSIGN).
    Conflict between rule 116 and token RSHIFT_ASSIGN resolved as shift (CHILDA < RSHIFT_ASSIGN).
    Conflict between rule 116 and token EXC_OR_ASSIGN resolved as shift (CHILDA < EXC_OR_ASSIGN).
    Conflict between rule 116 and token EXC_OR resolved as reduce (EXC_OR < CHILDA).
    Conflict between rule 116 and token AS resolved as shift (CHILDA < AS).


state 57

   80 expression: LRB expression . RRB
   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    RRB            shift, and go to state 115
    AS             shift, and go to state 110


state 58

   19 import: IMPORT STRING_LITERAL .

    $default  reduce using rule 19 (import)


state 59

  147 inferenced_type_init_stmt: VAR IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 116


state 60

  120 expression_nobrace: NEW typename_T . LRB argument_list RRB
  121                   | NEW typename_T . LRB RRB

    LRB  shift, and go to state 117


state 61

   73 typename_group: .  [IDENT, DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LCB, LRB, RRB, SEMI, AS, '\n']
   74               | . LT typename_list GT
   77 typename_T: fqcn_part . typename_group
   79 fqcn_part: fqcn_part . COLO_COLO IDENT

    COLO_COLO  shift, and go to state 77
    LT         shift, and go to state 78

    LT        [reduce using rule 73 (typename_group)]
    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 118


state 62

   54 function_define: DEF IDENT . LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 119


state 63

   17 namespace_path: IDENT .

    $default  reduce using rule 17 (namespace_path)


state 64

    7 namespace_decl: NAMESPACE namespace_path . namespace_body
    8 namespace_body: . LCB namespace_member_decl_optional RCB
   18 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 120
    LCB  shift, and go to state 121

    namespace_body  go to state 122


state 65

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  158 return_stmt: RETURN expression . stmt_term
  168 stmt_term: . SEMI
  169          | . '\n'

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    SEMI           shift, and go to state 68
    AS             shift, and go to state 110
    '\n'           shift, and go to state 69

    stmt_term  go to state 123


state 66

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  148 if_stmt: IF LRB . expression RRB scope
  149        | IF LRB . expression RRB scope ELSE scope
  150        | IF LRB . expression RRB scope elif_list
  151        | IF LRB . expression RRB scope elif_list ELSE scope

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 124
    expression_nobrace  go to state 37
    primary             go to state 38


state 67

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  155 while_stmt: WHILE LRB . expression RRB scope_optional

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 125
    expression_nobrace  go to state 37
    primary             go to state 38


state 68

  168 stmt_term: SEMI .

    $default  reduce using rule 168 (stmt_term)


state 69

  169 stmt_term: '\n' .

    $default  reduce using rule 169 (stmt_term)


state 70

  156 break_stmt: BREAK stmt_term .

    $default  reduce using rule 156 (break_stmt)


state 71

  157 continue_stmt: CONTINUE stmt_term .

    $default  reduce using rule 157 (continue_stmt)


state 72

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  132 stmt_list: . stmt
  133          | . stmt_list stmt
  134 stmt: . expression stmt_term
  135     | . variable_decl_stmt
  136     | . variable_init_stmt
  137     | . inferenced_type_init_stmt
  138     | . if_stmt
  139     | . while_stmt
  140     | . break_stmt
  141     | . continue_stmt
  142     | . return_stmt
  143     | . throw_stmt
  144     | . try_stmt
  145 variable_decl_stmt: . typename_T IDENT SEMI
  146 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  147 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  148 if_stmt: . IF LRB expression RRB scope
  149        | . IF LRB expression RRB scope ELSE scope
  150        | . IF LRB expression RRB scope elif_list
  151        | . IF LRB expression RRB scope elif_list ELSE scope
  155 while_stmt: . WHILE LRB expression RRB scope_optional
  156 break_stmt: . BREAK stmt_term
  157 continue_stmt: . CONTINUE stmt_term
  158 return_stmt: . RETURN expression stmt_term
  159 throw_stmt: . THROW expression stmt_term
  160 try_stmt: . TRY scope catch_stmt_list
  164 scope: LCB . stmt_list RCB
  165      | LCB . RCB

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    RCB             shift, and go to state 126
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19
    RETURN          shift, and go to state 22
    IF              shift, and go to state 23
    WHILE           shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    TRY             shift, and go to state 27
    THROW           shift, and go to state 28

    typename_T                 go to state 34
    fqcn_part                  go to state 35
    expression                 go to state 36
    expression_nobrace         go to state 37
    primary                    go to state 38
    stmt_list                  go to state 127
    stmt                       go to state 40
    variable_decl_stmt         go to state 41
    variable_init_stmt         go to state 42
    inferenced_type_init_stmt  go to state 43
    if_stmt                    go to state 44
    while_stmt                 go to state 45
    break_stmt                 go to state 46
    continue_stmt              go to state 47
    return_stmt                go to state 48
    throw_stmt                 go to state 49
    try_stmt                   go to state 50


state 73

  160 try_stmt: TRY scope . catch_stmt_list
  161 catch_stmt_list: . catch_stmt
  162                | . catch_stmt_list catch_stmt
  163 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 128

    catch_stmt_list  go to state 129
    catch_stmt       go to state 130


state 74

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  159 throw_stmt: THROW expression . stmt_term
  168 stmt_term: . SEMI
  169          | . '\n'

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    SEMI           shift, and go to state 68
    AS             shift, and go to state 110
    '\n'           shift, and go to state 69

    stmt_term  go to state 131


state 75

    0 $accept: compilation_unit $end .

    $default  accept


state 76

  145 variable_decl_stmt: typename_T IDENT . SEMI
  146 variable_init_stmt: typename_T IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 132
    SEMI    shift, and go to state 133


state 77

   79 fqcn_part: fqcn_part COLO_COLO . IDENT

    IDENT  shift, and go to state 134


state 78

   74 typename_group: LT . typename_list GT
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_list  go to state 135
    typename_T     go to state 136
    fqcn_part      go to state 61


state 79

   77 typename_T: fqcn_part typename_group .  [IDENT]
  129 primary: fqcn_part typename_group .  [DOT, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, SEMI, AS, '\n']

    IDENT     reduce using rule 77 (typename_T)
    $default  reduce using rule 129 (primary)


state 80

  114 expression_nobrace: expression DOT . IDENT typename_group

    IDENT  shift, and go to state 137


state 81

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   85                   | expression ADD . expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 138
    expression_nobrace  go to state 37
    primary             go to state 38


state 82

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   86                   | expression SUB . expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 139
    expression_nobrace  go to state 37
    primary             go to state 38


state 83

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   87                   | expression MUL . expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 140
    expression_nobrace  go to state 37
    primary             go to state 38


state 84

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   88                   | expression DIV . expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 141
    expression_nobrace  go to state 37
    primary             go to state 38


state 85

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   89                   | expression MOD . expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 142
    expression_nobrace  go to state 37
    primary             go to state 38


state 86

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  112                   | expression LSHIFT . expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 143
    expression_nobrace  go to state 37
    primary             go to state 38


state 87

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  113                   | expression RSHIFT . expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 144
    expression_nobrace  go to state 37
    primary             go to state 38


state 88

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   91                   | expression EQUAL . expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 145
    expression_nobrace  go to state 37
    primary             go to state 38


state 89

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   92                   | expression NOTEQUAL . expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 146
    expression_nobrace  go to state 37
    primary             go to state 38


state 90

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  108                   | expression GT . expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 147
    expression_nobrace  go to state 37
    primary             go to state 38


state 91

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  109                   | expression GE . expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 148
    expression_nobrace  go to state 37
    primary             go to state 38


state 92

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  110                   | expression LT . expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 149
    expression_nobrace  go to state 37
    primary             go to state 38


state 93

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  111                   | expression LE . expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 150
    expression_nobrace  go to state 37
    primary             go to state 38


state 94

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   93                   | expression BIT_AND . expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 151
    expression_nobrace  go to state 37
    primary             go to state 38


state 95

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   96                   | expression LOGIC_AND . expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 152
    expression_nobrace  go to state 37
    primary             go to state 38


state 96

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   90                   | expression BIT_OR . expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 153
    expression_nobrace  go to state 37
    primary             go to state 38


state 97

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   95                   | expression LOGIC_OR . expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 154
    expression_nobrace  go to state 37
    primary             go to state 38


state 98

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   97                   | expression ASSIGN . expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 155
    expression_nobrace  go to state 37
    primary             go to state 38


state 99

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   98                   | expression ADD_ASSIGN . expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 156
    expression_nobrace  go to state 37
    primary             go to state 38


state 100

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
   99                   | expression SUB_ASSIGN . expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 157
    expression_nobrace  go to state 37
    primary             go to state 38


state 101

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  100                   | expression MUL_ASSIGN . expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 158
    expression_nobrace  go to state 37
    primary             go to state 38


state 102

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  101                   | expression DIV_ASSIGN . expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 159
    expression_nobrace  go to state 37
    primary             go to state 38


state 103

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  102                   | expression MOD_ASSIGN . expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 160
    expression_nobrace  go to state 37
    primary             go to state 38


state 104

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  103                   | expression AND_ASSIGN . expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 161
    expression_nobrace  go to state 37
    primary             go to state 38


state 105

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  104                   | expression OR_ASSIGN . expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 162
    expression_nobrace  go to state 37
    primary             go to state 38


state 106

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  106                   | expression LSHIFT_ASSIGN . expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 163
    expression_nobrace  go to state 37
    primary             go to state 38


state 107

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  107                   | expression RSHIFT_ASSIGN . expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 164
    expression_nobrace  go to state 37
    primary             go to state 38


state 108

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  105                   | expression EXC_OR_ASSIGN . expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 165
    expression_nobrace  go to state 37
    primary             go to state 38


state 109

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   94                   | expression EXC_OR . expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 166
    expression_nobrace  go to state 37
    primary             go to state 38


state 110

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
  115 expression_nobrace: expression AS . typename_T

    IDENT  shift, and go to state 6

    typename_T  go to state 167
    fqcn_part   go to state 61


state 111

  134 stmt: expression stmt_term .

    $default  reduce using rule 134 (stmt)


state 112

   71 argument_list: . expression
   72              | . argument_list COMMA expression
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  118                   | expression_nobrace LRB . argument_list RRB
  119                   | . expression_nobrace LRB RRB
  119                   | expression_nobrace LRB . RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    RRB             shift, and go to state 168
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    argument_list       go to state 169
    fqcn_part           go to state 52
    expression          go to state 170
    expression_nobrace  go to state 37
    primary             go to state 38


state 113

  133 stmt_list: stmt_list stmt .

    $default  reduce using rule 133 (stmt_list)


state 114

  129 primary: fqcn_part typename_group .

    $default  reduce using rule 129 (primary)


state 115

   80 expression: LRB expression RRB .

    $default  reduce using rule 80 (expression)


state 116

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  147 inferenced_type_init_stmt: VAR IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 171
    expression_nobrace  go to state 37
    primary             go to state 38


state 117

   71 argument_list: . expression
   72              | . argument_list COMMA expression
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  120                   | NEW typename_T LRB . argument_list RRB
  121                   | . NEW typename_T LRB RRB
  121                   | NEW typename_T LRB . RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    RRB             shift, and go to state 172
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    argument_list       go to state 173
    fqcn_part           go to state 52
    expression          go to state 170
    expression_nobrace  go to state 37
    primary             go to state 38


state 118

   77 typename_T: fqcn_part typename_group .

    $default  reduce using rule 77 (typename_T)


state 119

   54 function_define: DEF IDENT LRB . parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT LRB . RRB ARROW typename_T scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 174

    parameter_list  go to state 175
    typename_T      go to state 176
    fqcn_part       go to state 61


state 120

   18 namespace_path: namespace_path DOT . IDENT

    IDENT  shift, and go to state 177


state 121

    8 namespace_body: LCB . namespace_member_decl_optional RCB
    9 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   10                      | . class_decl
   11                      | . interface_decl
   12                      | . enum_decl
   13 namespace_member_decl_list: . namespace_member_decl
   14                           | . namespace_member_decl_list namespace_member_decl
   15 namespace_member_decl_optional: .  [RCB]
   16                               | . namespace_member_decl_list
   30 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   32 enum_decl: . ENUM IDENT LCB ident_list RCB
   33          | . ENUM IDENT LCB ident_list COMMA RCB
   34 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 178
    CLASS      shift, and go to state 179
    ENUM       shift, and go to state 180
    NAMESPACE  shift, and go to state 181

    $default  reduce using rule 15 (namespace_member_decl_optional)

    namespace_member_decl           go to state 182
    namespace_member_decl_list      go to state 183
    namespace_member_decl_optional  go to state 184
    class_decl                      go to state 185
    enum_decl                       go to state 186
    interface_decl                  go to state 187


state 122

    7 namespace_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 7 (namespace_decl)


state 123

  158 return_stmt: RETURN expression stmt_term .

    $default  reduce using rule 158 (return_stmt)


state 124

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  148 if_stmt: IF LRB expression . RRB scope
  149        | IF LRB expression . RRB scope ELSE scope
  150        | IF LRB expression . RRB scope elif_list
  151        | IF LRB expression . RRB scope elif_list ELSE scope

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    RRB            shift, and go to state 188
    AS             shift, and go to state 110


state 125

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  155 while_stmt: WHILE LRB expression . RRB scope_optional

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    RRB            shift, and go to state 189
    AS             shift, and go to state 110


state 126

  165 scope: LCB RCB .

    $default  reduce using rule 165 (scope)


state 127

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  133 stmt_list: stmt_list . stmt
  134 stmt: . expression stmt_term
  135     | . variable_decl_stmt
  136     | . variable_init_stmt
  137     | . inferenced_type_init_stmt
  138     | . if_stmt
  139     | . while_stmt
  140     | . break_stmt
  141     | . continue_stmt
  142     | . return_stmt
  143     | . throw_stmt
  144     | . try_stmt
  145 variable_decl_stmt: . typename_T IDENT SEMI
  146 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  147 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  148 if_stmt: . IF LRB expression RRB scope
  149        | . IF LRB expression RRB scope ELSE scope
  150        | . IF LRB expression RRB scope elif_list
  151        | . IF LRB expression RRB scope elif_list ELSE scope
  155 while_stmt: . WHILE LRB expression RRB scope_optional
  156 break_stmt: . BREAK stmt_term
  157 continue_stmt: . CONTINUE stmt_term
  158 return_stmt: . RETURN expression stmt_term
  159 throw_stmt: . THROW expression stmt_term
  160 try_stmt: . TRY scope catch_stmt_list
  164 scope: LCB stmt_list . RCB

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    RCB             shift, and go to state 190
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19
    RETURN          shift, and go to state 22
    IF              shift, and go to state 23
    WHILE           shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    TRY             shift, and go to state 27
    THROW           shift, and go to state 28

    typename_T                 go to state 34
    fqcn_part                  go to state 35
    expression                 go to state 36
    expression_nobrace         go to state 37
    primary                    go to state 38
    stmt                       go to state 113
    variable_decl_stmt         go to state 41
    variable_init_stmt         go to state 42
    inferenced_type_init_stmt  go to state 43
    if_stmt                    go to state 44
    while_stmt                 go to state 45
    break_stmt                 go to state 46
    continue_stmt              go to state 47
    return_stmt                go to state 48
    throw_stmt                 go to state 49
    try_stmt                   go to state 50


state 128

  163 catch_stmt: CATCH . LRB typename_T IDENT RRB scope

    LRB  shift, and go to state 191


state 129

  160 try_stmt: TRY scope catch_stmt_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS, SUPER, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  162 catch_stmt_list: catch_stmt_list . catch_stmt
  163 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 128

    $default  reduce using rule 160 (try_stmt)

    catch_stmt  go to state 192


state 130

  161 catch_stmt_list: catch_stmt .

    $default  reduce using rule 161 (catch_stmt_list)


state 131

  159 throw_stmt: THROW expression stmt_term .

    $default  reduce using rule 159 (throw_stmt)


state 132

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  146 variable_init_stmt: typename_T IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 193
    expression_nobrace  go to state 37
    primary             go to state 38


state 133

  145 variable_decl_stmt: typename_T IDENT SEMI .

    $default  reduce using rule 145 (variable_decl_stmt)


state 134

   79 fqcn_part: fqcn_part COLO_COLO IDENT .

    $default  reduce using rule 79 (fqcn_part)


state 135

   74 typename_group: LT typename_list . GT
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 194
    GT     shift, and go to state 195


state 136

   75 typename_list: typename_T .

    $default  reduce using rule 75 (typename_list)


state 137

   73 typename_group: .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EXC_OR, LRB, RRB, SEMI, AS, '\n']
   74               | . LT typename_list GT
  114 expression_nobrace: expression DOT IDENT . typename_group

    LT  shift, and go to state 78

    LT        [reduce using rule 73 (typename_group)]
    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 196


state 138

   85 expression_nobrace: expression . ADD expression  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   85                   | expression ADD expression .  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 85 (expression_nobrace)

    Conflict between rule 85 and token DOT resolved as shift (ADD < DOT).
    Conflict between rule 85 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 85 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 85 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 85 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 85 and token MOD resolved as shift (ADD < MOD).
    Conflict between rule 85 and token LSHIFT resolved as reduce (LSHIFT < ADD).
    Conflict between rule 85 and token RSHIFT resolved as reduce (RSHIFT < ADD).
    Conflict between rule 85 and token EQUAL resolved as reduce (EQUAL < ADD).
    Conflict between rule 85 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD).
    Conflict between rule 85 and token GT resolved as reduce (GT < ADD).
    Conflict between rule 85 and token GE resolved as reduce (GE < ADD).
    Conflict between rule 85 and token LT resolved as reduce (LT < ADD).
    Conflict between rule 85 and token LE resolved as reduce (LE < ADD).
    Conflict between rule 85 and token BIT_AND resolved as reduce (BIT_AND < ADD).
    Conflict between rule 85 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD).
    Conflict between rule 85 and token BIT_OR resolved as reduce (BIT_OR < ADD).
    Conflict between rule 85 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD).
    Conflict between rule 85 and token ASSIGN resolved as shift (ADD < ASSIGN).
    Conflict between rule 85 and token ADD_ASSIGN resolved as shift (ADD < ADD_ASSIGN).
    Conflict between rule 85 and token SUB_ASSIGN resolved as shift (ADD < SUB_ASSIGN).
    Conflict between rule 85 and token MUL_ASSIGN resolved as shift (ADD < MUL_ASSIGN).
    Conflict between rule 85 and token DIV_ASSIGN resolved as shift (ADD < DIV_ASSIGN).
    Conflict between rule 85 and token MOD_ASSIGN resolved as shift (ADD < MOD_ASSIGN).
    Conflict between rule 85 and token AND_ASSIGN resolved as shift (ADD < AND_ASSIGN).
    Conflict between rule 85 and token OR_ASSIGN resolved as shift (ADD < OR_ASSIGN).
    Conflict between rule 85 and token LSHIFT_ASSIGN resolved as shift (ADD < LSHIFT_ASSIGN).
    Conflict between rule 85 and token RSHIFT_ASSIGN resolved as shift (ADD < RSHIFT_ASSIGN).
    Conflict between rule 85 and token EXC_OR_ASSIGN resolved as shift (ADD < EXC_OR_ASSIGN).
    Conflict between rule 85 and token EXC_OR resolved as reduce (EXC_OR < ADD).
    Conflict between rule 85 and token AS resolved as shift (ADD < AS).


state 139

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   86                   | expression SUB expression .  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 86 (expression_nobrace)

    Conflict between rule 86 and token DOT resolved as shift (SUB < DOT).
    Conflict between rule 86 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 86 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 86 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 86 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 86 and token MOD resolved as shift (SUB < MOD).
    Conflict between rule 86 and token LSHIFT resolved as reduce (LSHIFT < SUB).
    Conflict between rule 86 and token RSHIFT resolved as reduce (RSHIFT < SUB).
    Conflict between rule 86 and token EQUAL resolved as reduce (EQUAL < SUB).
    Conflict between rule 86 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB).
    Conflict between rule 86 and token GT resolved as reduce (GT < SUB).
    Conflict between rule 86 and token GE resolved as reduce (GE < SUB).
    Conflict between rule 86 and token LT resolved as reduce (LT < SUB).
    Conflict between rule 86 and token LE resolved as reduce (LE < SUB).
    Conflict between rule 86 and token BIT_AND resolved as reduce (BIT_AND < SUB).
    Conflict between rule 86 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB).
    Conflict between rule 86 and token BIT_OR resolved as reduce (BIT_OR < SUB).
    Conflict between rule 86 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB).
    Conflict between rule 86 and token ASSIGN resolved as shift (SUB < ASSIGN).
    Conflict between rule 86 and token ADD_ASSIGN resolved as shift (SUB < ADD_ASSIGN).
    Conflict between rule 86 and token SUB_ASSIGN resolved as shift (SUB < SUB_ASSIGN).
    Conflict between rule 86 and token MUL_ASSIGN resolved as shift (SUB < MUL_ASSIGN).
    Conflict between rule 86 and token DIV_ASSIGN resolved as shift (SUB < DIV_ASSIGN).
    Conflict between rule 86 and token MOD_ASSIGN resolved as shift (SUB < MOD_ASSIGN).
    Conflict between rule 86 and token AND_ASSIGN resolved as shift (SUB < AND_ASSIGN).
    Conflict between rule 86 and token OR_ASSIGN resolved as shift (SUB < OR_ASSIGN).
    Conflict between rule 86 and token LSHIFT_ASSIGN resolved as shift (SUB < LSHIFT_ASSIGN).
    Conflict between rule 86 and token RSHIFT_ASSIGN resolved as shift (SUB < RSHIFT_ASSIGN).
    Conflict between rule 86 and token EXC_OR_ASSIGN resolved as shift (SUB < EXC_OR_ASSIGN).
    Conflict between rule 86 and token EXC_OR resolved as reduce (EXC_OR < SUB).
    Conflict between rule 86 and token AS resolved as shift (SUB < AS).


state 140

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   87                   | expression MUL expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 87 (expression_nobrace)

    Conflict between rule 87 and token DOT resolved as shift (MUL < DOT).
    Conflict between rule 87 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 87 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 87 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 87 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 87 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 87 and token LSHIFT resolved as reduce (LSHIFT < MUL).
    Conflict between rule 87 and token RSHIFT resolved as reduce (RSHIFT < MUL).
    Conflict between rule 87 and token EQUAL resolved as reduce (EQUAL < MUL).
    Conflict between rule 87 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL).
    Conflict between rule 87 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 87 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 87 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 87 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 87 and token BIT_AND resolved as reduce (BIT_AND < MUL).
    Conflict between rule 87 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL).
    Conflict between rule 87 and token BIT_OR resolved as reduce (BIT_OR < MUL).
    Conflict between rule 87 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL).
    Conflict between rule 87 and token ASSIGN resolved as shift (MUL < ASSIGN).
    Conflict between rule 87 and token ADD_ASSIGN resolved as shift (MUL < ADD_ASSIGN).
    Conflict between rule 87 and token SUB_ASSIGN resolved as shift (MUL < SUB_ASSIGN).
    Conflict between rule 87 and token MUL_ASSIGN resolved as shift (MUL < MUL_ASSIGN).
    Conflict between rule 87 and token DIV_ASSIGN resolved as shift (MUL < DIV_ASSIGN).
    Conflict between rule 87 and token MOD_ASSIGN resolved as shift (MUL < MOD_ASSIGN).
    Conflict between rule 87 and token AND_ASSIGN resolved as shift (MUL < AND_ASSIGN).
    Conflict between rule 87 and token OR_ASSIGN resolved as shift (MUL < OR_ASSIGN).
    Conflict between rule 87 and token LSHIFT_ASSIGN resolved as shift (MUL < LSHIFT_ASSIGN).
    Conflict between rule 87 and token RSHIFT_ASSIGN resolved as shift (MUL < RSHIFT_ASSIGN).
    Conflict between rule 87 and token EXC_OR_ASSIGN resolved as shift (MUL < EXC_OR_ASSIGN).
    Conflict between rule 87 and token EXC_OR resolved as reduce (EXC_OR < MUL).
    Conflict between rule 87 and token AS resolved as shift (MUL < AS).


state 141

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   88                   | expression DIV expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 88 (expression_nobrace)

    Conflict between rule 88 and token DOT resolved as shift (DIV < DOT).
    Conflict between rule 88 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 88 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 88 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 88 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 88 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 88 and token LSHIFT resolved as reduce (LSHIFT < DIV).
    Conflict between rule 88 and token RSHIFT resolved as reduce (RSHIFT < DIV).
    Conflict between rule 88 and token EQUAL resolved as reduce (EQUAL < DIV).
    Conflict between rule 88 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV).
    Conflict between rule 88 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 88 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 88 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 88 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 88 and token BIT_AND resolved as reduce (BIT_AND < DIV).
    Conflict between rule 88 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV).
    Conflict between rule 88 and token BIT_OR resolved as reduce (BIT_OR < DIV).
    Conflict between rule 88 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV).
    Conflict between rule 88 and token ASSIGN resolved as shift (DIV < ASSIGN).
    Conflict between rule 88 and token ADD_ASSIGN resolved as shift (DIV < ADD_ASSIGN).
    Conflict between rule 88 and token SUB_ASSIGN resolved as shift (DIV < SUB_ASSIGN).
    Conflict between rule 88 and token MUL_ASSIGN resolved as shift (DIV < MUL_ASSIGN).
    Conflict between rule 88 and token DIV_ASSIGN resolved as shift (DIV < DIV_ASSIGN).
    Conflict between rule 88 and token MOD_ASSIGN resolved as shift (DIV < MOD_ASSIGN).
    Conflict between rule 88 and token AND_ASSIGN resolved as shift (DIV < AND_ASSIGN).
    Conflict between rule 88 and token OR_ASSIGN resolved as shift (DIV < OR_ASSIGN).
    Conflict between rule 88 and token LSHIFT_ASSIGN resolved as shift (DIV < LSHIFT_ASSIGN).
    Conflict between rule 88 and token RSHIFT_ASSIGN resolved as shift (DIV < RSHIFT_ASSIGN).
    Conflict between rule 88 and token EXC_OR_ASSIGN resolved as shift (DIV < EXC_OR_ASSIGN).
    Conflict between rule 88 and token EXC_OR resolved as reduce (EXC_OR < DIV).
    Conflict between rule 88 and token AS resolved as shift (DIV < AS).


state 142

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   89                   | expression MOD expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 89 (expression_nobrace)

    Conflict between rule 89 and token DOT resolved as shift (MOD < DOT).
    Conflict between rule 89 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 89 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 89 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 89 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 89 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 89 and token LSHIFT resolved as reduce (LSHIFT < MOD).
    Conflict between rule 89 and token RSHIFT resolved as reduce (RSHIFT < MOD).
    Conflict between rule 89 and token EQUAL resolved as reduce (EQUAL < MOD).
    Conflict between rule 89 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD).
    Conflict between rule 89 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 89 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 89 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 89 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 89 and token BIT_AND resolved as reduce (BIT_AND < MOD).
    Conflict between rule 89 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD).
    Conflict between rule 89 and token BIT_OR resolved as reduce (BIT_OR < MOD).
    Conflict between rule 89 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD).
    Conflict between rule 89 and token ASSIGN resolved as shift (MOD < ASSIGN).
    Conflict between rule 89 and token ADD_ASSIGN resolved as shift (MOD < ADD_ASSIGN).
    Conflict between rule 89 and token SUB_ASSIGN resolved as shift (MOD < SUB_ASSIGN).
    Conflict between rule 89 and token MUL_ASSIGN resolved as shift (MOD < MUL_ASSIGN).
    Conflict between rule 89 and token DIV_ASSIGN resolved as shift (MOD < DIV_ASSIGN).
    Conflict between rule 89 and token MOD_ASSIGN resolved as shift (MOD < MOD_ASSIGN).
    Conflict between rule 89 and token AND_ASSIGN resolved as shift (MOD < AND_ASSIGN).
    Conflict between rule 89 and token OR_ASSIGN resolved as shift (MOD < OR_ASSIGN).
    Conflict between rule 89 and token LSHIFT_ASSIGN resolved as shift (MOD < LSHIFT_ASSIGN).
    Conflict between rule 89 and token RSHIFT_ASSIGN resolved as shift (MOD < RSHIFT_ASSIGN).
    Conflict between rule 89 and token EXC_OR_ASSIGN resolved as shift (MOD < EXC_OR_ASSIGN).
    Conflict between rule 89 and token EXC_OR resolved as reduce (EXC_OR < MOD).
    Conflict between rule 89 and token AS resolved as shift (MOD < AS).


state 143

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
  112                   | expression LSHIFT expression .  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 112 (expression_nobrace)

    Conflict between rule 112 and token DOT resolved as shift (LSHIFT < DOT).
    Conflict between rule 112 and token ADD resolved as shift (LSHIFT < ADD).
    Conflict between rule 112 and token SUB resolved as shift (LSHIFT < SUB).
    Conflict between rule 112 and token MUL resolved as shift (LSHIFT < MUL).
    Conflict between rule 112 and token DIV resolved as shift (LSHIFT < DIV).
    Conflict between rule 112 and token MOD resolved as shift (LSHIFT < MOD).
    Conflict between rule 112 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 112 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 112 and token EQUAL resolved as reduce (EQUAL < LSHIFT).
    Conflict between rule 112 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT).
    Conflict between rule 112 and token GT resolved as reduce (GT < LSHIFT).
    Conflict between rule 112 and token GE resolved as reduce (GE < LSHIFT).
    Conflict between rule 112 and token LT resolved as reduce (LT < LSHIFT).
    Conflict between rule 112 and token LE resolved as reduce (LE < LSHIFT).
    Conflict between rule 112 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT).
    Conflict between rule 112 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT).
    Conflict between rule 112 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT).
    Conflict between rule 112 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT).
    Conflict between rule 112 and token ASSIGN resolved as shift (LSHIFT < ASSIGN).
    Conflict between rule 112 and token ADD_ASSIGN resolved as shift (LSHIFT < ADD_ASSIGN).
    Conflict between rule 112 and token SUB_ASSIGN resolved as shift (LSHIFT < SUB_ASSIGN).
    Conflict between rule 112 and token MUL_ASSIGN resolved as shift (LSHIFT < MUL_ASSIGN).
    Conflict between rule 112 and token DIV_ASSIGN resolved as shift (LSHIFT < DIV_ASSIGN).
    Conflict between rule 112 and token MOD_ASSIGN resolved as shift (LSHIFT < MOD_ASSIGN).
    Conflict between rule 112 and token AND_ASSIGN resolved as shift (LSHIFT < AND_ASSIGN).
    Conflict between rule 112 and token OR_ASSIGN resolved as shift (LSHIFT < OR_ASSIGN).
    Conflict between rule 112 and token LSHIFT_ASSIGN resolved as shift (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 112 and token RSHIFT_ASSIGN resolved as shift (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 112 and token EXC_OR_ASSIGN resolved as shift (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 112 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT).
    Conflict between rule 112 and token AS resolved as shift (LSHIFT < AS).


state 144

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
  113                   | expression RSHIFT expression .  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 113 (expression_nobrace)

    Conflict between rule 113 and token DOT resolved as shift (RSHIFT < DOT).
    Conflict between rule 113 and token ADD resolved as shift (RSHIFT < ADD).
    Conflict between rule 113 and token SUB resolved as shift (RSHIFT < SUB).
    Conflict between rule 113 and token MUL resolved as shift (RSHIFT < MUL).
    Conflict between rule 113 and token DIV resolved as shift (RSHIFT < DIV).
    Conflict between rule 113 and token MOD resolved as shift (RSHIFT < MOD).
    Conflict between rule 113 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 113 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 113 and token EQUAL resolved as reduce (EQUAL < RSHIFT).
    Conflict between rule 113 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT).
    Conflict between rule 113 and token GT resolved as reduce (GT < RSHIFT).
    Conflict between rule 113 and token GE resolved as reduce (GE < RSHIFT).
    Conflict between rule 113 and token LT resolved as reduce (LT < RSHIFT).
    Conflict between rule 113 and token LE resolved as reduce (LE < RSHIFT).
    Conflict between rule 113 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT).
    Conflict between rule 113 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT).
    Conflict between rule 113 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT).
    Conflict between rule 113 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT).
    Conflict between rule 113 and token ASSIGN resolved as shift (RSHIFT < ASSIGN).
    Conflict between rule 113 and token ADD_ASSIGN resolved as shift (RSHIFT < ADD_ASSIGN).
    Conflict between rule 113 and token SUB_ASSIGN resolved as shift (RSHIFT < SUB_ASSIGN).
    Conflict between rule 113 and token MUL_ASSIGN resolved as shift (RSHIFT < MUL_ASSIGN).
    Conflict between rule 113 and token DIV_ASSIGN resolved as shift (RSHIFT < DIV_ASSIGN).
    Conflict between rule 113 and token MOD_ASSIGN resolved as shift (RSHIFT < MOD_ASSIGN).
    Conflict between rule 113 and token AND_ASSIGN resolved as shift (RSHIFT < AND_ASSIGN).
    Conflict between rule 113 and token OR_ASSIGN resolved as shift (RSHIFT < OR_ASSIGN).
    Conflict between rule 113 and token LSHIFT_ASSIGN resolved as shift (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 113 and token RSHIFT_ASSIGN resolved as shift (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 113 and token EXC_OR_ASSIGN resolved as shift (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 113 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT).
    Conflict between rule 113 and token AS resolved as shift (RSHIFT < AS).


state 145

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression  [COMMA, EQUAL, NOTEQUAL, LRB, RRB, SEMI, '\n']
   91                   | expression EQUAL expression .  [COMMA, EQUAL, NOTEQUAL, LRB, RRB, SEMI, '\n']
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 91 (expression_nobrace)

    Conflict between rule 91 and token DOT resolved as shift (EQUAL < DOT).
    Conflict between rule 91 and token ADD resolved as shift (EQUAL < ADD).
    Conflict between rule 91 and token SUB resolved as shift (EQUAL < SUB).
    Conflict between rule 91 and token MUL resolved as shift (EQUAL < MUL).
    Conflict between rule 91 and token DIV resolved as shift (EQUAL < DIV).
    Conflict between rule 91 and token MOD resolved as shift (EQUAL < MOD).
    Conflict between rule 91 and token LSHIFT resolved as shift (EQUAL < LSHIFT).
    Conflict between rule 91 and token RSHIFT resolved as shift (EQUAL < RSHIFT).
    Conflict between rule 91 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 91 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 91 and token GT resolved as shift (EQUAL < GT).
    Conflict between rule 91 and token GE resolved as shift (EQUAL < GE).
    Conflict between rule 91 and token LT resolved as shift (EQUAL < LT).
    Conflict between rule 91 and token LE resolved as shift (EQUAL < LE).
    Conflict between rule 91 and token BIT_AND resolved as shift (EQUAL < BIT_AND).
    Conflict between rule 91 and token LOGIC_AND resolved as shift (EQUAL < LOGIC_AND).
    Conflict between rule 91 and token BIT_OR resolved as shift (EQUAL < BIT_OR).
    Conflict between rule 91 and token LOGIC_OR resolved as shift (EQUAL < LOGIC_OR).
    Conflict between rule 91 and token ASSIGN resolved as shift (EQUAL < ASSIGN).
    Conflict between rule 91 and token ADD_ASSIGN resolved as shift (EQUAL < ADD_ASSIGN).
    Conflict between rule 91 and token SUB_ASSIGN resolved as shift (EQUAL < SUB_ASSIGN).
    Conflict between rule 91 and token MUL_ASSIGN resolved as shift (EQUAL < MUL_ASSIGN).
    Conflict between rule 91 and token DIV_ASSIGN resolved as shift (EQUAL < DIV_ASSIGN).
    Conflict between rule 91 and token MOD_ASSIGN resolved as shift (EQUAL < MOD_ASSIGN).
    Conflict between rule 91 and token AND_ASSIGN resolved as shift (EQUAL < AND_ASSIGN).
    Conflict between rule 91 and token OR_ASSIGN resolved as shift (EQUAL < OR_ASSIGN).
    Conflict between rule 91 and token LSHIFT_ASSIGN resolved as shift (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 91 and token RSHIFT_ASSIGN resolved as shift (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 91 and token EXC_OR_ASSIGN resolved as shift (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 91 and token EXC_OR resolved as shift (EQUAL < EXC_OR).
    Conflict between rule 91 and token AS resolved as shift (EQUAL < AS).


state 146

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression  [COMMA, EQUAL, NOTEQUAL, LRB, RRB, SEMI, '\n']
   92                   | expression NOTEQUAL expression .  [COMMA, EQUAL, NOTEQUAL, LRB, RRB, SEMI, '\n']
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 92 (expression_nobrace)

    Conflict between rule 92 and token DOT resolved as shift (NOTEQUAL < DOT).
    Conflict between rule 92 and token ADD resolved as shift (NOTEQUAL < ADD).
    Conflict between rule 92 and token SUB resolved as shift (NOTEQUAL < SUB).
    Conflict between rule 92 and token MUL resolved as shift (NOTEQUAL < MUL).
    Conflict between rule 92 and token DIV resolved as shift (NOTEQUAL < DIV).
    Conflict between rule 92 and token MOD resolved as shift (NOTEQUAL < MOD).
    Conflict between rule 92 and token LSHIFT resolved as shift (NOTEQUAL < LSHIFT).
    Conflict between rule 92 and token RSHIFT resolved as shift (NOTEQUAL < RSHIFT).
    Conflict between rule 92 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 92 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 92 and token GT resolved as shift (NOTEQUAL < GT).
    Conflict between rule 92 and token GE resolved as shift (NOTEQUAL < GE).
    Conflict between rule 92 and token LT resolved as shift (NOTEQUAL < LT).
    Conflict between rule 92 and token LE resolved as shift (NOTEQUAL < LE).
    Conflict between rule 92 and token BIT_AND resolved as shift (NOTEQUAL < BIT_AND).
    Conflict between rule 92 and token LOGIC_AND resolved as shift (NOTEQUAL < LOGIC_AND).
    Conflict between rule 92 and token BIT_OR resolved as shift (NOTEQUAL < BIT_OR).
    Conflict between rule 92 and token LOGIC_OR resolved as shift (NOTEQUAL < LOGIC_OR).
    Conflict between rule 92 and token ASSIGN resolved as shift (NOTEQUAL < ASSIGN).
    Conflict between rule 92 and token ADD_ASSIGN resolved as shift (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 92 and token SUB_ASSIGN resolved as shift (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 92 and token MUL_ASSIGN resolved as shift (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 92 and token DIV_ASSIGN resolved as shift (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 92 and token MOD_ASSIGN resolved as shift (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 92 and token AND_ASSIGN resolved as shift (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 92 and token OR_ASSIGN resolved as shift (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 92 and token LSHIFT_ASSIGN resolved as shift (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 92 and token RSHIFT_ASSIGN resolved as shift (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 92 and token EXC_OR_ASSIGN resolved as shift (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 92 and token EXC_OR resolved as shift (NOTEQUAL < EXC_OR).
    Conflict between rule 92 and token AS resolved as shift (NOTEQUAL < AS).


state 147

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LRB, RRB, SEMI, '\n']
  108                   | expression GT expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LRB, RRB, SEMI, '\n']
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 108 (expression_nobrace)

    Conflict between rule 108 and token DOT resolved as shift (GT < DOT).
    Conflict between rule 108 and token ADD resolved as shift (GT < ADD).
    Conflict between rule 108 and token SUB resolved as shift (GT < SUB).
    Conflict between rule 108 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 108 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 108 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 108 and token LSHIFT resolved as shift (GT < LSHIFT).
    Conflict between rule 108 and token RSHIFT resolved as shift (GT < RSHIFT).
    Conflict between rule 108 and token EQUAL resolved as reduce (EQUAL < GT).
    Conflict between rule 108 and token NOTEQUAL resolved as reduce (NOTEQUAL < GT).
    Conflict between rule 108 and token GT resolved as reduce (%left GT).
    Conflict between rule 108 and token GE resolved as reduce (%left GE).
    Conflict between rule 108 and token LT resolved as reduce (%left LT).
    Conflict between rule 108 and token LE resolved as reduce (%left LE).
    Conflict between rule 108 and token BIT_AND resolved as shift (GT < BIT_AND).
    Conflict between rule 108 and token LOGIC_AND resolved as shift (GT < LOGIC_AND).
    Conflict between rule 108 and token BIT_OR resolved as shift (GT < BIT_OR).
    Conflict between rule 108 and token LOGIC_OR resolved as shift (GT < LOGIC_OR).
    Conflict between rule 108 and token ASSIGN resolved as shift (GT < ASSIGN).
    Conflict between rule 108 and token ADD_ASSIGN resolved as shift (GT < ADD_ASSIGN).
    Conflict between rule 108 and token SUB_ASSIGN resolved as shift (GT < SUB_ASSIGN).
    Conflict between rule 108 and token MUL_ASSIGN resolved as shift (GT < MUL_ASSIGN).
    Conflict between rule 108 and token DIV_ASSIGN resolved as shift (GT < DIV_ASSIGN).
    Conflict between rule 108 and token MOD_ASSIGN resolved as shift (GT < MOD_ASSIGN).
    Conflict between rule 108 and token AND_ASSIGN resolved as shift (GT < AND_ASSIGN).
    Conflict between rule 108 and token OR_ASSIGN resolved as shift (GT < OR_ASSIGN).
    Conflict between rule 108 and token LSHIFT_ASSIGN resolved as shift (GT < LSHIFT_ASSIGN).
    Conflict between rule 108 and token RSHIFT_ASSIGN resolved as shift (GT < RSHIFT_ASSIGN).
    Conflict between rule 108 and token EXC_OR_ASSIGN resolved as shift (GT < EXC_OR_ASSIGN).
    Conflict between rule 108 and token EXC_OR resolved as shift (GT < EXC_OR).
    Conflict between rule 108 and token AS resolved as shift (GT < AS).


state 148

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LRB, RRB, SEMI, '\n']
  109                   | expression GE expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LRB, RRB, SEMI, '\n']
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 109 (expression_nobrace)

    Conflict between rule 109 and token DOT resolved as shift (GE < DOT).
    Conflict between rule 109 and token ADD resolved as shift (GE < ADD).
    Conflict between rule 109 and token SUB resolved as shift (GE < SUB).
    Conflict between rule 109 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 109 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 109 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 109 and token LSHIFT resolved as shift (GE < LSHIFT).
    Conflict between rule 109 and token RSHIFT resolved as shift (GE < RSHIFT).
    Conflict between rule 109 and token EQUAL resolved as reduce (EQUAL < GE).
    Conflict between rule 109 and token NOTEQUAL resolved as reduce (NOTEQUAL < GE).
    Conflict between rule 109 and token GT resolved as reduce (%left GT).
    Conflict between rule 109 and token GE resolved as reduce (%left GE).
    Conflict between rule 109 and token LT resolved as reduce (%left LT).
    Conflict between rule 109 and token LE resolved as reduce (%left LE).
    Conflict between rule 109 and token BIT_AND resolved as shift (GE < BIT_AND).
    Conflict between rule 109 and token LOGIC_AND resolved as shift (GE < LOGIC_AND).
    Conflict between rule 109 and token BIT_OR resolved as shift (GE < BIT_OR).
    Conflict between rule 109 and token LOGIC_OR resolved as shift (GE < LOGIC_OR).
    Conflict between rule 109 and token ASSIGN resolved as shift (GE < ASSIGN).
    Conflict between rule 109 and token ADD_ASSIGN resolved as shift (GE < ADD_ASSIGN).
    Conflict between rule 109 and token SUB_ASSIGN resolved as shift (GE < SUB_ASSIGN).
    Conflict between rule 109 and token MUL_ASSIGN resolved as shift (GE < MUL_ASSIGN).
    Conflict between rule 109 and token DIV_ASSIGN resolved as shift (GE < DIV_ASSIGN).
    Conflict between rule 109 and token MOD_ASSIGN resolved as shift (GE < MOD_ASSIGN).
    Conflict between rule 109 and token AND_ASSIGN resolved as shift (GE < AND_ASSIGN).
    Conflict between rule 109 and token OR_ASSIGN resolved as shift (GE < OR_ASSIGN).
    Conflict between rule 109 and token LSHIFT_ASSIGN resolved as shift (GE < LSHIFT_ASSIGN).
    Conflict between rule 109 and token RSHIFT_ASSIGN resolved as shift (GE < RSHIFT_ASSIGN).
    Conflict between rule 109 and token EXC_OR_ASSIGN resolved as shift (GE < EXC_OR_ASSIGN).
    Conflict between rule 109 and token EXC_OR resolved as shift (GE < EXC_OR).
    Conflict between rule 109 and token AS resolved as shift (GE < AS).


state 149

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LRB, RRB, SEMI, '\n']
  110                   | expression LT expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LRB, RRB, SEMI, '\n']
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 110 (expression_nobrace)

    Conflict between rule 110 and token DOT resolved as shift (LT < DOT).
    Conflict between rule 110 and token ADD resolved as shift (LT < ADD).
    Conflict between rule 110 and token SUB resolved as shift (LT < SUB).
    Conflict between rule 110 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 110 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 110 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 110 and token LSHIFT resolved as shift (LT < LSHIFT).
    Conflict between rule 110 and token RSHIFT resolved as shift (LT < RSHIFT).
    Conflict between rule 110 and token EQUAL resolved as reduce (EQUAL < LT).
    Conflict between rule 110 and token NOTEQUAL resolved as reduce (NOTEQUAL < LT).
    Conflict between rule 110 and token GT resolved as reduce (%left GT).
    Conflict between rule 110 and token GE resolved as reduce (%left GE).
    Conflict between rule 110 and token LT resolved as reduce (%left LT).
    Conflict between rule 110 and token LE resolved as reduce (%left LE).
    Conflict between rule 110 and token BIT_AND resolved as shift (LT < BIT_AND).
    Conflict between rule 110 and token LOGIC_AND resolved as shift (LT < LOGIC_AND).
    Conflict between rule 110 and token BIT_OR resolved as shift (LT < BIT_OR).
    Conflict between rule 110 and token LOGIC_OR resolved as shift (LT < LOGIC_OR).
    Conflict between rule 110 and token ASSIGN resolved as shift (LT < ASSIGN).
    Conflict between rule 110 and token ADD_ASSIGN resolved as shift (LT < ADD_ASSIGN).
    Conflict between rule 110 and token SUB_ASSIGN resolved as shift (LT < SUB_ASSIGN).
    Conflict between rule 110 and token MUL_ASSIGN resolved as shift (LT < MUL_ASSIGN).
    Conflict between rule 110 and token DIV_ASSIGN resolved as shift (LT < DIV_ASSIGN).
    Conflict between rule 110 and token MOD_ASSIGN resolved as shift (LT < MOD_ASSIGN).
    Conflict between rule 110 and token AND_ASSIGN resolved as shift (LT < AND_ASSIGN).
    Conflict between rule 110 and token OR_ASSIGN resolved as shift (LT < OR_ASSIGN).
    Conflict between rule 110 and token LSHIFT_ASSIGN resolved as shift (LT < LSHIFT_ASSIGN).
    Conflict between rule 110 and token RSHIFT_ASSIGN resolved as shift (LT < RSHIFT_ASSIGN).
    Conflict between rule 110 and token EXC_OR_ASSIGN resolved as shift (LT < EXC_OR_ASSIGN).
    Conflict between rule 110 and token EXC_OR resolved as shift (LT < EXC_OR).
    Conflict between rule 110 and token AS resolved as shift (LT < AS).


state 150

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LRB, RRB, SEMI, '\n']
  111                   | expression LE expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LRB, RRB, SEMI, '\n']
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 111 (expression_nobrace)

    Conflict between rule 111 and token DOT resolved as shift (LE < DOT).
    Conflict between rule 111 and token ADD resolved as shift (LE < ADD).
    Conflict between rule 111 and token SUB resolved as shift (LE < SUB).
    Conflict between rule 111 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 111 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 111 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 111 and token LSHIFT resolved as shift (LE < LSHIFT).
    Conflict between rule 111 and token RSHIFT resolved as shift (LE < RSHIFT).
    Conflict between rule 111 and token EQUAL resolved as reduce (EQUAL < LE).
    Conflict between rule 111 and token NOTEQUAL resolved as reduce (NOTEQUAL < LE).
    Conflict between rule 111 and token GT resolved as reduce (%left GT).
    Conflict between rule 111 and token GE resolved as reduce (%left GE).
    Conflict between rule 111 and token LT resolved as reduce (%left LT).
    Conflict between rule 111 and token LE resolved as reduce (%left LE).
    Conflict between rule 111 and token BIT_AND resolved as shift (LE < BIT_AND).
    Conflict between rule 111 and token LOGIC_AND resolved as shift (LE < LOGIC_AND).
    Conflict between rule 111 and token BIT_OR resolved as shift (LE < BIT_OR).
    Conflict between rule 111 and token LOGIC_OR resolved as shift (LE < LOGIC_OR).
    Conflict between rule 111 and token ASSIGN resolved as shift (LE < ASSIGN).
    Conflict between rule 111 and token ADD_ASSIGN resolved as shift (LE < ADD_ASSIGN).
    Conflict between rule 111 and token SUB_ASSIGN resolved as shift (LE < SUB_ASSIGN).
    Conflict between rule 111 and token MUL_ASSIGN resolved as shift (LE < MUL_ASSIGN).
    Conflict between rule 111 and token DIV_ASSIGN resolved as shift (LE < DIV_ASSIGN).
    Conflict between rule 111 and token MOD_ASSIGN resolved as shift (LE < MOD_ASSIGN).
    Conflict between rule 111 and token AND_ASSIGN resolved as shift (LE < AND_ASSIGN).
    Conflict between rule 111 and token OR_ASSIGN resolved as shift (LE < OR_ASSIGN).
    Conflict between rule 111 and token LSHIFT_ASSIGN resolved as shift (LE < LSHIFT_ASSIGN).
    Conflict between rule 111 and token RSHIFT_ASSIGN resolved as shift (LE < RSHIFT_ASSIGN).
    Conflict between rule 111 and token EXC_OR_ASSIGN resolved as shift (LE < EXC_OR_ASSIGN).
    Conflict between rule 111 and token EXC_OR resolved as shift (LE < EXC_OR).
    Conflict between rule 111 and token AS resolved as shift (LE < AS).


state 151

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, LOGIC_OR, LRB, RRB, SEMI, '\n']
   93                   | expression BIT_AND expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, LOGIC_OR, LRB, RRB, SEMI, '\n']
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    BIT_OR         shift, and go to state 96
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 93 (expression_nobrace)

    Conflict between rule 93 and token DOT resolved as shift (BIT_AND < DOT).
    Conflict between rule 93 and token ADD resolved as shift (BIT_AND < ADD).
    Conflict between rule 93 and token SUB resolved as shift (BIT_AND < SUB).
    Conflict between rule 93 and token MUL resolved as shift (BIT_AND < MUL).
    Conflict between rule 93 and token DIV resolved as shift (BIT_AND < DIV).
    Conflict between rule 93 and token MOD resolved as shift (BIT_AND < MOD).
    Conflict between rule 93 and token LSHIFT resolved as shift (BIT_AND < LSHIFT).
    Conflict between rule 93 and token RSHIFT resolved as shift (BIT_AND < RSHIFT).
    Conflict between rule 93 and token EQUAL resolved as reduce (EQUAL < BIT_AND).
    Conflict between rule 93 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_AND).
    Conflict between rule 93 and token GT resolved as reduce (GT < BIT_AND).
    Conflict between rule 93 and token GE resolved as reduce (GE < BIT_AND).
    Conflict between rule 93 and token LT resolved as reduce (LT < BIT_AND).
    Conflict between rule 93 and token LE resolved as reduce (LE < BIT_AND).
    Conflict between rule 93 and token BIT_AND resolved as reduce (%left BIT_AND).
    Conflict between rule 93 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_AND).
    Conflict between rule 93 and token BIT_OR resolved as shift (BIT_AND < BIT_OR).
    Conflict between rule 93 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_AND).
    Conflict between rule 93 and token ASSIGN resolved as shift (BIT_AND < ASSIGN).
    Conflict between rule 93 and token ADD_ASSIGN resolved as shift (BIT_AND < ADD_ASSIGN).
    Conflict between rule 93 and token SUB_ASSIGN resolved as shift (BIT_AND < SUB_ASSIGN).
    Conflict between rule 93 and token MUL_ASSIGN resolved as shift (BIT_AND < MUL_ASSIGN).
    Conflict between rule 93 and token DIV_ASSIGN resolved as shift (BIT_AND < DIV_ASSIGN).
    Conflict between rule 93 and token MOD_ASSIGN resolved as shift (BIT_AND < MOD_ASSIGN).
    Conflict between rule 93 and token AND_ASSIGN resolved as shift (BIT_AND < AND_ASSIGN).
    Conflict between rule 93 and token OR_ASSIGN resolved as shift (BIT_AND < OR_ASSIGN).
    Conflict between rule 93 and token LSHIFT_ASSIGN resolved as shift (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 93 and token RSHIFT_ASSIGN resolved as shift (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 93 and token EXC_OR_ASSIGN resolved as shift (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 93 and token EXC_OR resolved as shift (BIT_AND < EXC_OR).
    Conflict between rule 93 and token AS resolved as shift (BIT_AND < AS).


state 152

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LRB, RRB, SEMI, '\n']
   96                   | expression LOGIC_AND expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LRB, RRB, SEMI, '\n']
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    BIT_AND        shift, and go to state 94
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 96 (expression_nobrace)

    Conflict between rule 96 and token DOT resolved as shift (LOGIC_AND < DOT).
    Conflict between rule 96 and token ADD resolved as shift (LOGIC_AND < ADD).
    Conflict between rule 96 and token SUB resolved as shift (LOGIC_AND < SUB).
    Conflict between rule 96 and token MUL resolved as shift (LOGIC_AND < MUL).
    Conflict between rule 96 and token DIV resolved as shift (LOGIC_AND < DIV).
    Conflict between rule 96 and token MOD resolved as shift (LOGIC_AND < MOD).
    Conflict between rule 96 and token LSHIFT resolved as shift (LOGIC_AND < LSHIFT).
    Conflict between rule 96 and token RSHIFT resolved as shift (LOGIC_AND < RSHIFT).
    Conflict between rule 96 and token EQUAL resolved as reduce (EQUAL < LOGIC_AND).
    Conflict between rule 96 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_AND).
    Conflict between rule 96 and token GT resolved as reduce (GT < LOGIC_AND).
    Conflict between rule 96 and token GE resolved as reduce (GE < LOGIC_AND).
    Conflict between rule 96 and token LT resolved as reduce (LT < LOGIC_AND).
    Conflict between rule 96 and token LE resolved as reduce (LE < LOGIC_AND).
    Conflict between rule 96 and token BIT_AND resolved as shift (LOGIC_AND < BIT_AND).
    Conflict between rule 96 and token LOGIC_AND resolved as reduce (%left LOGIC_AND).
    Conflict between rule 96 and token BIT_OR resolved as shift (LOGIC_AND < BIT_OR).
    Conflict between rule 96 and token LOGIC_OR resolved as shift (LOGIC_AND < LOGIC_OR).
    Conflict between rule 96 and token ASSIGN resolved as shift (LOGIC_AND < ASSIGN).
    Conflict between rule 96 and token ADD_ASSIGN resolved as shift (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 96 and token SUB_ASSIGN resolved as shift (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 96 and token MUL_ASSIGN resolved as shift (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 96 and token DIV_ASSIGN resolved as shift (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 96 and token MOD_ASSIGN resolved as shift (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 96 and token AND_ASSIGN resolved as shift (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 96 and token OR_ASSIGN resolved as shift (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 96 and token LSHIFT_ASSIGN resolved as shift (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 96 and token RSHIFT_ASSIGN resolved as shift (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 96 and token EXC_OR_ASSIGN resolved as shift (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 96 and token EXC_OR resolved as shift (LOGIC_AND < EXC_OR).
    Conflict between rule 96 and token AS resolved as shift (LOGIC_AND < AS).


state 153

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, LRB, RRB, SEMI, '\n']
   90                   | expression BIT_OR expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, LRB, RRB, SEMI, '\n']
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 90 (expression_nobrace)

    Conflict between rule 90 and token DOT resolved as shift (BIT_OR < DOT).
    Conflict between rule 90 and token ADD resolved as shift (BIT_OR < ADD).
    Conflict between rule 90 and token SUB resolved as shift (BIT_OR < SUB).
    Conflict between rule 90 and token MUL resolved as shift (BIT_OR < MUL).
    Conflict between rule 90 and token DIV resolved as shift (BIT_OR < DIV).
    Conflict between rule 90 and token MOD resolved as shift (BIT_OR < MOD).
    Conflict between rule 90 and token LSHIFT resolved as shift (BIT_OR < LSHIFT).
    Conflict between rule 90 and token RSHIFT resolved as shift (BIT_OR < RSHIFT).
    Conflict between rule 90 and token EQUAL resolved as reduce (EQUAL < BIT_OR).
    Conflict between rule 90 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_OR).
    Conflict between rule 90 and token GT resolved as reduce (GT < BIT_OR).
    Conflict between rule 90 and token GE resolved as reduce (GE < BIT_OR).
    Conflict between rule 90 and token LT resolved as reduce (LT < BIT_OR).
    Conflict between rule 90 and token LE resolved as reduce (LE < BIT_OR).
    Conflict between rule 90 and token BIT_AND resolved as reduce (BIT_AND < BIT_OR).
    Conflict between rule 90 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_OR).
    Conflict between rule 90 and token BIT_OR resolved as reduce (%left BIT_OR).
    Conflict between rule 90 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_OR).
    Conflict between rule 90 and token ASSIGN resolved as shift (BIT_OR < ASSIGN).
    Conflict between rule 90 and token ADD_ASSIGN resolved as shift (BIT_OR < ADD_ASSIGN).
    Conflict between rule 90 and token SUB_ASSIGN resolved as shift (BIT_OR < SUB_ASSIGN).
    Conflict between rule 90 and token MUL_ASSIGN resolved as shift (BIT_OR < MUL_ASSIGN).
    Conflict between rule 90 and token DIV_ASSIGN resolved as shift (BIT_OR < DIV_ASSIGN).
    Conflict between rule 90 and token MOD_ASSIGN resolved as shift (BIT_OR < MOD_ASSIGN).
    Conflict between rule 90 and token AND_ASSIGN resolved as shift (BIT_OR < AND_ASSIGN).
    Conflict between rule 90 and token OR_ASSIGN resolved as shift (BIT_OR < OR_ASSIGN).
    Conflict between rule 90 and token LSHIFT_ASSIGN resolved as shift (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 90 and token RSHIFT_ASSIGN resolved as shift (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 90 and token EXC_OR_ASSIGN resolved as shift (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 90 and token EXC_OR resolved as shift (BIT_OR < EXC_OR).
    Conflict between rule 90 and token AS resolved as shift (BIT_OR < AS).


state 154

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LOGIC_OR, LRB, RRB, SEMI, '\n']
   95                   | expression LOGIC_OR expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LOGIC_OR, LRB, RRB, SEMI, '\n']
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    BIT_AND        shift, and go to state 94
    BIT_OR         shift, and go to state 96
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 95 (expression_nobrace)

    Conflict between rule 95 and token DOT resolved as shift (LOGIC_OR < DOT).
    Conflict between rule 95 and token ADD resolved as shift (LOGIC_OR < ADD).
    Conflict between rule 95 and token SUB resolved as shift (LOGIC_OR < SUB).
    Conflict between rule 95 and token MUL resolved as shift (LOGIC_OR < MUL).
    Conflict between rule 95 and token DIV resolved as shift (LOGIC_OR < DIV).
    Conflict between rule 95 and token MOD resolved as shift (LOGIC_OR < MOD).
    Conflict between rule 95 and token LSHIFT resolved as shift (LOGIC_OR < LSHIFT).
    Conflict between rule 95 and token RSHIFT resolved as shift (LOGIC_OR < RSHIFT).
    Conflict between rule 95 and token EQUAL resolved as reduce (EQUAL < LOGIC_OR).
    Conflict between rule 95 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_OR).
    Conflict between rule 95 and token GT resolved as reduce (GT < LOGIC_OR).
    Conflict between rule 95 and token GE resolved as reduce (GE < LOGIC_OR).
    Conflict between rule 95 and token LT resolved as reduce (LT < LOGIC_OR).
    Conflict between rule 95 and token LE resolved as reduce (LE < LOGIC_OR).
    Conflict between rule 95 and token BIT_AND resolved as shift (LOGIC_OR < BIT_AND).
    Conflict between rule 95 and token LOGIC_AND resolved as reduce (LOGIC_AND < LOGIC_OR).
    Conflict between rule 95 and token BIT_OR resolved as shift (LOGIC_OR < BIT_OR).
    Conflict between rule 95 and token LOGIC_OR resolved as reduce (%left LOGIC_OR).
    Conflict between rule 95 and token ASSIGN resolved as shift (LOGIC_OR < ASSIGN).
    Conflict between rule 95 and token ADD_ASSIGN resolved as shift (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 95 and token SUB_ASSIGN resolved as shift (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 95 and token MUL_ASSIGN resolved as shift (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 95 and token DIV_ASSIGN resolved as shift (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 95 and token MOD_ASSIGN resolved as shift (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 95 and token AND_ASSIGN resolved as shift (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 95 and token OR_ASSIGN resolved as shift (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 95 and token LSHIFT_ASSIGN resolved as shift (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 95 and token RSHIFT_ASSIGN resolved as shift (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 95 and token EXC_OR_ASSIGN resolved as shift (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 95 and token EXC_OR resolved as shift (LOGIC_OR < EXC_OR).
    Conflict between rule 95 and token AS resolved as shift (LOGIC_OR < AS).


state 155

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
   97                   | expression ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 97 (expression_nobrace)

    Conflict between rule 97 and token DOT resolved as reduce (DOT < ASSIGN).
    Conflict between rule 97 and token ADD resolved as reduce (ADD < ASSIGN).
    Conflict between rule 97 and token SUB resolved as reduce (SUB < ASSIGN).
    Conflict between rule 97 and token MUL resolved as reduce (MUL < ASSIGN).
    Conflict between rule 97 and token DIV resolved as reduce (DIV < ASSIGN).
    Conflict between rule 97 and token MOD resolved as reduce (MOD < ASSIGN).
    Conflict between rule 97 and token LSHIFT resolved as reduce (LSHIFT < ASSIGN).
    Conflict between rule 97 and token RSHIFT resolved as reduce (RSHIFT < ASSIGN).
    Conflict between rule 97 and token EQUAL resolved as reduce (EQUAL < ASSIGN).
    Conflict between rule 97 and token NOTEQUAL resolved as reduce (NOTEQUAL < ASSIGN).
    Conflict between rule 97 and token GT resolved as reduce (GT < ASSIGN).
    Conflict between rule 97 and token GE resolved as reduce (GE < ASSIGN).
    Conflict between rule 97 and token LT resolved as reduce (LT < ASSIGN).
    Conflict between rule 97 and token LE resolved as reduce (LE < ASSIGN).
    Conflict between rule 97 and token BIT_AND resolved as reduce (BIT_AND < ASSIGN).
    Conflict between rule 97 and token LOGIC_AND resolved as reduce (LOGIC_AND < ASSIGN).
    Conflict between rule 97 and token BIT_OR resolved as reduce (BIT_OR < ASSIGN).
    Conflict between rule 97 and token LOGIC_OR resolved as reduce (LOGIC_OR < ASSIGN).
    Conflict between rule 97 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 97 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 97 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 97 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 97 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 97 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 97 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 97 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 97 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 97 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 97 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 97 and token EXC_OR resolved as reduce (EXC_OR < ASSIGN).
    Conflict between rule 97 and token AS resolved as reduce (AS < ASSIGN).


state 156

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
   98                   | expression ADD_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 98 (expression_nobrace)

    Conflict between rule 98 and token DOT resolved as reduce (DOT < ADD_ASSIGN).
    Conflict between rule 98 and token ADD resolved as reduce (ADD < ADD_ASSIGN).
    Conflict between rule 98 and token SUB resolved as reduce (SUB < ADD_ASSIGN).
    Conflict between rule 98 and token MUL resolved as reduce (MUL < ADD_ASSIGN).
    Conflict between rule 98 and token DIV resolved as reduce (DIV < ADD_ASSIGN).
    Conflict between rule 98 and token MOD resolved as reduce (MOD < ADD_ASSIGN).
    Conflict between rule 98 and token LSHIFT resolved as reduce (LSHIFT < ADD_ASSIGN).
    Conflict between rule 98 and token RSHIFT resolved as reduce (RSHIFT < ADD_ASSIGN).
    Conflict between rule 98 and token EQUAL resolved as reduce (EQUAL < ADD_ASSIGN).
    Conflict between rule 98 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 98 and token GT resolved as reduce (GT < ADD_ASSIGN).
    Conflict between rule 98 and token GE resolved as reduce (GE < ADD_ASSIGN).
    Conflict between rule 98 and token LT resolved as reduce (LT < ADD_ASSIGN).
    Conflict between rule 98 and token LE resolved as reduce (LE < ADD_ASSIGN).
    Conflict between rule 98 and token BIT_AND resolved as reduce (BIT_AND < ADD_ASSIGN).
    Conflict between rule 98 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 98 and token BIT_OR resolved as reduce (BIT_OR < ADD_ASSIGN).
    Conflict between rule 98 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 98 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 98 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 98 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 98 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 98 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 98 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 98 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 98 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 98 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 98 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 98 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 98 and token EXC_OR resolved as reduce (EXC_OR < ADD_ASSIGN).
    Conflict between rule 98 and token AS resolved as reduce (AS < ADD_ASSIGN).


state 157

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
   99                   | expression SUB_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 99 (expression_nobrace)

    Conflict between rule 99 and token DOT resolved as reduce (DOT < SUB_ASSIGN).
    Conflict between rule 99 and token ADD resolved as reduce (ADD < SUB_ASSIGN).
    Conflict between rule 99 and token SUB resolved as reduce (SUB < SUB_ASSIGN).
    Conflict between rule 99 and token MUL resolved as reduce (MUL < SUB_ASSIGN).
    Conflict between rule 99 and token DIV resolved as reduce (DIV < SUB_ASSIGN).
    Conflict between rule 99 and token MOD resolved as reduce (MOD < SUB_ASSIGN).
    Conflict between rule 99 and token LSHIFT resolved as reduce (LSHIFT < SUB_ASSIGN).
    Conflict between rule 99 and token RSHIFT resolved as reduce (RSHIFT < SUB_ASSIGN).
    Conflict between rule 99 and token EQUAL resolved as reduce (EQUAL < SUB_ASSIGN).
    Conflict between rule 99 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 99 and token GT resolved as reduce (GT < SUB_ASSIGN).
    Conflict between rule 99 and token GE resolved as reduce (GE < SUB_ASSIGN).
    Conflict between rule 99 and token LT resolved as reduce (LT < SUB_ASSIGN).
    Conflict between rule 99 and token LE resolved as reduce (LE < SUB_ASSIGN).
    Conflict between rule 99 and token BIT_AND resolved as reduce (BIT_AND < SUB_ASSIGN).
    Conflict between rule 99 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 99 and token BIT_OR resolved as reduce (BIT_OR < SUB_ASSIGN).
    Conflict between rule 99 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 99 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 99 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 99 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 99 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 99 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 99 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 99 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 99 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 99 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 99 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 99 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 99 and token EXC_OR resolved as reduce (EXC_OR < SUB_ASSIGN).
    Conflict between rule 99 and token AS resolved as reduce (AS < SUB_ASSIGN).


state 158

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  100                   | expression MUL_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 100 (expression_nobrace)

    Conflict between rule 100 and token DOT resolved as reduce (DOT < MUL_ASSIGN).
    Conflict between rule 100 and token ADD resolved as reduce (ADD < MUL_ASSIGN).
    Conflict between rule 100 and token SUB resolved as reduce (SUB < MUL_ASSIGN).
    Conflict between rule 100 and token MUL resolved as reduce (MUL < MUL_ASSIGN).
    Conflict between rule 100 and token DIV resolved as reduce (DIV < MUL_ASSIGN).
    Conflict between rule 100 and token MOD resolved as reduce (MOD < MUL_ASSIGN).
    Conflict between rule 100 and token LSHIFT resolved as reduce (LSHIFT < MUL_ASSIGN).
    Conflict between rule 100 and token RSHIFT resolved as reduce (RSHIFT < MUL_ASSIGN).
    Conflict between rule 100 and token EQUAL resolved as reduce (EQUAL < MUL_ASSIGN).
    Conflict between rule 100 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 100 and token GT resolved as reduce (GT < MUL_ASSIGN).
    Conflict between rule 100 and token GE resolved as reduce (GE < MUL_ASSIGN).
    Conflict between rule 100 and token LT resolved as reduce (LT < MUL_ASSIGN).
    Conflict between rule 100 and token LE resolved as reduce (LE < MUL_ASSIGN).
    Conflict between rule 100 and token BIT_AND resolved as reduce (BIT_AND < MUL_ASSIGN).
    Conflict between rule 100 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 100 and token BIT_OR resolved as reduce (BIT_OR < MUL_ASSIGN).
    Conflict between rule 100 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 100 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 100 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 100 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 100 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 100 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 100 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 100 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 100 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 100 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 100 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 100 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 100 and token EXC_OR resolved as reduce (EXC_OR < MUL_ASSIGN).
    Conflict between rule 100 and token AS resolved as reduce (AS < MUL_ASSIGN).


state 159

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  101                   | expression DIV_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 101 (expression_nobrace)

    Conflict between rule 101 and token DOT resolved as reduce (DOT < DIV_ASSIGN).
    Conflict between rule 101 and token ADD resolved as reduce (ADD < DIV_ASSIGN).
    Conflict between rule 101 and token SUB resolved as reduce (SUB < DIV_ASSIGN).
    Conflict between rule 101 and token MUL resolved as reduce (MUL < DIV_ASSIGN).
    Conflict between rule 101 and token DIV resolved as reduce (DIV < DIV_ASSIGN).
    Conflict between rule 101 and token MOD resolved as reduce (MOD < DIV_ASSIGN).
    Conflict between rule 101 and token LSHIFT resolved as reduce (LSHIFT < DIV_ASSIGN).
    Conflict between rule 101 and token RSHIFT resolved as reduce (RSHIFT < DIV_ASSIGN).
    Conflict between rule 101 and token EQUAL resolved as reduce (EQUAL < DIV_ASSIGN).
    Conflict between rule 101 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 101 and token GT resolved as reduce (GT < DIV_ASSIGN).
    Conflict between rule 101 and token GE resolved as reduce (GE < DIV_ASSIGN).
    Conflict between rule 101 and token LT resolved as reduce (LT < DIV_ASSIGN).
    Conflict between rule 101 and token LE resolved as reduce (LE < DIV_ASSIGN).
    Conflict between rule 101 and token BIT_AND resolved as reduce (BIT_AND < DIV_ASSIGN).
    Conflict between rule 101 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 101 and token BIT_OR resolved as reduce (BIT_OR < DIV_ASSIGN).
    Conflict between rule 101 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 101 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 101 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 101 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 101 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 101 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 101 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 101 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 101 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 101 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 101 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 101 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 101 and token EXC_OR resolved as reduce (EXC_OR < DIV_ASSIGN).
    Conflict between rule 101 and token AS resolved as reduce (AS < DIV_ASSIGN).


state 160

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  102                   | expression MOD_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 102 (expression_nobrace)

    Conflict between rule 102 and token DOT resolved as reduce (DOT < MOD_ASSIGN).
    Conflict between rule 102 and token ADD resolved as reduce (ADD < MOD_ASSIGN).
    Conflict between rule 102 and token SUB resolved as reduce (SUB < MOD_ASSIGN).
    Conflict between rule 102 and token MUL resolved as reduce (MUL < MOD_ASSIGN).
    Conflict between rule 102 and token DIV resolved as reduce (DIV < MOD_ASSIGN).
    Conflict between rule 102 and token MOD resolved as reduce (MOD < MOD_ASSIGN).
    Conflict between rule 102 and token LSHIFT resolved as reduce (LSHIFT < MOD_ASSIGN).
    Conflict between rule 102 and token RSHIFT resolved as reduce (RSHIFT < MOD_ASSIGN).
    Conflict between rule 102 and token EQUAL resolved as reduce (EQUAL < MOD_ASSIGN).
    Conflict between rule 102 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 102 and token GT resolved as reduce (GT < MOD_ASSIGN).
    Conflict between rule 102 and token GE resolved as reduce (GE < MOD_ASSIGN).
    Conflict between rule 102 and token LT resolved as reduce (LT < MOD_ASSIGN).
    Conflict between rule 102 and token LE resolved as reduce (LE < MOD_ASSIGN).
    Conflict between rule 102 and token BIT_AND resolved as reduce (BIT_AND < MOD_ASSIGN).
    Conflict between rule 102 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 102 and token BIT_OR resolved as reduce (BIT_OR < MOD_ASSIGN).
    Conflict between rule 102 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 102 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 102 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 102 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 102 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 102 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 102 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 102 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 102 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 102 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 102 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 102 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 102 and token EXC_OR resolved as reduce (EXC_OR < MOD_ASSIGN).
    Conflict between rule 102 and token AS resolved as reduce (AS < MOD_ASSIGN).


state 161

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  103                   | expression AND_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 103 (expression_nobrace)

    Conflict between rule 103 and token DOT resolved as reduce (DOT < AND_ASSIGN).
    Conflict between rule 103 and token ADD resolved as reduce (ADD < AND_ASSIGN).
    Conflict between rule 103 and token SUB resolved as reduce (SUB < AND_ASSIGN).
    Conflict between rule 103 and token MUL resolved as reduce (MUL < AND_ASSIGN).
    Conflict between rule 103 and token DIV resolved as reduce (DIV < AND_ASSIGN).
    Conflict between rule 103 and token MOD resolved as reduce (MOD < AND_ASSIGN).
    Conflict between rule 103 and token LSHIFT resolved as reduce (LSHIFT < AND_ASSIGN).
    Conflict between rule 103 and token RSHIFT resolved as reduce (RSHIFT < AND_ASSIGN).
    Conflict between rule 103 and token EQUAL resolved as reduce (EQUAL < AND_ASSIGN).
    Conflict between rule 103 and token NOTEQUAL resolved as reduce (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 103 and token GT resolved as reduce (GT < AND_ASSIGN).
    Conflict between rule 103 and token GE resolved as reduce (GE < AND_ASSIGN).
    Conflict between rule 103 and token LT resolved as reduce (LT < AND_ASSIGN).
    Conflict between rule 103 and token LE resolved as reduce (LE < AND_ASSIGN).
    Conflict between rule 103 and token BIT_AND resolved as reduce (BIT_AND < AND_ASSIGN).
    Conflict between rule 103 and token LOGIC_AND resolved as reduce (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 103 and token BIT_OR resolved as reduce (BIT_OR < AND_ASSIGN).
    Conflict between rule 103 and token LOGIC_OR resolved as reduce (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 103 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 103 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 103 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 103 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 103 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 103 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 103 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 103 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 103 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 103 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 103 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 103 and token EXC_OR resolved as reduce (EXC_OR < AND_ASSIGN).
    Conflict between rule 103 and token AS resolved as reduce (AS < AND_ASSIGN).


state 162

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  104                   | expression OR_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 104 (expression_nobrace)

    Conflict between rule 104 and token DOT resolved as reduce (DOT < OR_ASSIGN).
    Conflict between rule 104 and token ADD resolved as reduce (ADD < OR_ASSIGN).
    Conflict between rule 104 and token SUB resolved as reduce (SUB < OR_ASSIGN).
    Conflict between rule 104 and token MUL resolved as reduce (MUL < OR_ASSIGN).
    Conflict between rule 104 and token DIV resolved as reduce (DIV < OR_ASSIGN).
    Conflict between rule 104 and token MOD resolved as reduce (MOD < OR_ASSIGN).
    Conflict between rule 104 and token LSHIFT resolved as reduce (LSHIFT < OR_ASSIGN).
    Conflict between rule 104 and token RSHIFT resolved as reduce (RSHIFT < OR_ASSIGN).
    Conflict between rule 104 and token EQUAL resolved as reduce (EQUAL < OR_ASSIGN).
    Conflict between rule 104 and token NOTEQUAL resolved as reduce (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 104 and token GT resolved as reduce (GT < OR_ASSIGN).
    Conflict between rule 104 and token GE resolved as reduce (GE < OR_ASSIGN).
    Conflict between rule 104 and token LT resolved as reduce (LT < OR_ASSIGN).
    Conflict between rule 104 and token LE resolved as reduce (LE < OR_ASSIGN).
    Conflict between rule 104 and token BIT_AND resolved as reduce (BIT_AND < OR_ASSIGN).
    Conflict between rule 104 and token LOGIC_AND resolved as reduce (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 104 and token BIT_OR resolved as reduce (BIT_OR < OR_ASSIGN).
    Conflict between rule 104 and token LOGIC_OR resolved as reduce (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 104 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 104 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 104 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 104 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 104 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 104 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 104 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 104 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 104 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 104 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 104 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 104 and token EXC_OR resolved as reduce (EXC_OR < OR_ASSIGN).
    Conflict between rule 104 and token AS resolved as reduce (AS < OR_ASSIGN).


state 163

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  106                   | expression LSHIFT_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 106 (expression_nobrace)

    Conflict between rule 106 and token DOT resolved as reduce (DOT < LSHIFT_ASSIGN).
    Conflict between rule 106 and token ADD resolved as reduce (ADD < LSHIFT_ASSIGN).
    Conflict between rule 106 and token SUB resolved as reduce (SUB < LSHIFT_ASSIGN).
    Conflict between rule 106 and token MUL resolved as reduce (MUL < LSHIFT_ASSIGN).
    Conflict between rule 106 and token DIV resolved as reduce (DIV < LSHIFT_ASSIGN).
    Conflict between rule 106 and token MOD resolved as reduce (MOD < LSHIFT_ASSIGN).
    Conflict between rule 106 and token LSHIFT resolved as reduce (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 106 and token RSHIFT resolved as reduce (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 106 and token EQUAL resolved as reduce (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 106 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 106 and token GT resolved as reduce (GT < LSHIFT_ASSIGN).
    Conflict between rule 106 and token GE resolved as reduce (GE < LSHIFT_ASSIGN).
    Conflict between rule 106 and token LT resolved as reduce (LT < LSHIFT_ASSIGN).
    Conflict between rule 106 and token LE resolved as reduce (LE < LSHIFT_ASSIGN).
    Conflict between rule 106 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 106 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 106 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 106 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 106 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 106 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 106 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 106 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 106 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 106 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 106 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 106 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 106 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 106 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 106 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 106 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT_ASSIGN).
    Conflict between rule 106 and token AS resolved as reduce (AS < LSHIFT_ASSIGN).


state 164

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  107                   | expression RSHIFT_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 107 (expression_nobrace)

    Conflict between rule 107 and token DOT resolved as reduce (DOT < RSHIFT_ASSIGN).
    Conflict between rule 107 and token ADD resolved as reduce (ADD < RSHIFT_ASSIGN).
    Conflict between rule 107 and token SUB resolved as reduce (SUB < RSHIFT_ASSIGN).
    Conflict between rule 107 and token MUL resolved as reduce (MUL < RSHIFT_ASSIGN).
    Conflict between rule 107 and token DIV resolved as reduce (DIV < RSHIFT_ASSIGN).
    Conflict between rule 107 and token MOD resolved as reduce (MOD < RSHIFT_ASSIGN).
    Conflict between rule 107 and token LSHIFT resolved as reduce (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 107 and token RSHIFT resolved as reduce (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 107 and token EQUAL resolved as reduce (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 107 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 107 and token GT resolved as reduce (GT < RSHIFT_ASSIGN).
    Conflict between rule 107 and token GE resolved as reduce (GE < RSHIFT_ASSIGN).
    Conflict between rule 107 and token LT resolved as reduce (LT < RSHIFT_ASSIGN).
    Conflict between rule 107 and token LE resolved as reduce (LE < RSHIFT_ASSIGN).
    Conflict between rule 107 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 107 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 107 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 107 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 107 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 107 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 107 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 107 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 107 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 107 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 107 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 107 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 107 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 107 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 107 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 107 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT_ASSIGN).
    Conflict between rule 107 and token AS resolved as reduce (AS < RSHIFT_ASSIGN).


state 165

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  105                   | expression EXC_OR_ASSIGN expression .  [DOT, COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, AS, '\n']
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108

    $default  reduce using rule 105 (expression_nobrace)

    Conflict between rule 105 and token DOT resolved as reduce (DOT < EXC_OR_ASSIGN).
    Conflict between rule 105 and token ADD resolved as reduce (ADD < EXC_OR_ASSIGN).
    Conflict between rule 105 and token SUB resolved as reduce (SUB < EXC_OR_ASSIGN).
    Conflict between rule 105 and token MUL resolved as reduce (MUL < EXC_OR_ASSIGN).
    Conflict between rule 105 and token DIV resolved as reduce (DIV < EXC_OR_ASSIGN).
    Conflict between rule 105 and token MOD resolved as reduce (MOD < EXC_OR_ASSIGN).
    Conflict between rule 105 and token LSHIFT resolved as reduce (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 105 and token RSHIFT resolved as reduce (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 105 and token EQUAL resolved as reduce (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 105 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 105 and token GT resolved as reduce (GT < EXC_OR_ASSIGN).
    Conflict between rule 105 and token GE resolved as reduce (GE < EXC_OR_ASSIGN).
    Conflict between rule 105 and token LT resolved as reduce (LT < EXC_OR_ASSIGN).
    Conflict between rule 105 and token LE resolved as reduce (LE < EXC_OR_ASSIGN).
    Conflict between rule 105 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 105 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 105 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 105 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 105 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 105 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 105 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 105 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 105 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 105 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 105 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 105 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 105 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 105 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 105 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 105 and token EXC_OR resolved as reduce (EXC_OR < EXC_OR_ASSIGN).
    Conflict between rule 105 and token AS resolved as reduce (AS < EXC_OR_ASSIGN).


state 166

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   94                   | expression EXC_OR expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, LRB, RRB, SEMI, '\n']
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    AS             shift, and go to state 110

    $default  reduce using rule 94 (expression_nobrace)

    Conflict between rule 94 and token DOT resolved as shift (EXC_OR < DOT).
    Conflict between rule 94 and token ADD resolved as shift (EXC_OR < ADD).
    Conflict between rule 94 and token SUB resolved as shift (EXC_OR < SUB).
    Conflict between rule 94 and token MUL resolved as shift (EXC_OR < MUL).
    Conflict between rule 94 and token DIV resolved as shift (EXC_OR < DIV).
    Conflict between rule 94 and token MOD resolved as shift (EXC_OR < MOD).
    Conflict between rule 94 and token LSHIFT resolved as shift (EXC_OR < LSHIFT).
    Conflict between rule 94 and token RSHIFT resolved as shift (EXC_OR < RSHIFT).
    Conflict between rule 94 and token EQUAL resolved as reduce (EQUAL < EXC_OR).
    Conflict between rule 94 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR).
    Conflict between rule 94 and token GT resolved as reduce (GT < EXC_OR).
    Conflict between rule 94 and token GE resolved as reduce (GE < EXC_OR).
    Conflict between rule 94 and token LT resolved as reduce (LT < EXC_OR).
    Conflict between rule 94 and token LE resolved as reduce (LE < EXC_OR).
    Conflict between rule 94 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR).
    Conflict between rule 94 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR).
    Conflict between rule 94 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR).
    Conflict between rule 94 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR).
    Conflict between rule 94 and token ASSIGN resolved as shift (EXC_OR < ASSIGN).
    Conflict between rule 94 and token ADD_ASSIGN resolved as shift (EXC_OR < ADD_ASSIGN).
    Conflict between rule 94 and token SUB_ASSIGN resolved as shift (EXC_OR < SUB_ASSIGN).
    Conflict between rule 94 and token MUL_ASSIGN resolved as shift (EXC_OR < MUL_ASSIGN).
    Conflict between rule 94 and token DIV_ASSIGN resolved as shift (EXC_OR < DIV_ASSIGN).
    Conflict between rule 94 and token MOD_ASSIGN resolved as shift (EXC_OR < MOD_ASSIGN).
    Conflict between rule 94 and token AND_ASSIGN resolved as shift (EXC_OR < AND_ASSIGN).
    Conflict between rule 94 and token OR_ASSIGN resolved as shift (EXC_OR < OR_ASSIGN).
    Conflict between rule 94 and token LSHIFT_ASSIGN resolved as shift (EXC_OR < LSHIFT_ASSIGN).
    Conflict between rule 94 and token RSHIFT_ASSIGN resolved as shift (EXC_OR < RSHIFT_ASSIGN).
    Conflict between rule 94 and token EXC_OR_ASSIGN resolved as shift (EXC_OR < EXC_OR_ASSIGN).
    Conflict between rule 94 and token EXC_OR resolved as reduce (%left EXC_OR).
    Conflict between rule 94 and token AS resolved as shift (EXC_OR < AS).


state 167

  115 expression_nobrace: expression AS typename_T .

    $default  reduce using rule 115 (expression_nobrace)


state 168

  119 expression_nobrace: expression_nobrace LRB RRB .

    $default  reduce using rule 119 (expression_nobrace)


state 169

   72 argument_list: argument_list . COMMA expression
  118 expression_nobrace: expression_nobrace LRB argument_list . RRB

    COMMA  shift, and go to state 197
    RRB    shift, and go to state 198


state 170

   71 argument_list: expression .  [COMMA, RRB]
   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 71 (argument_list)


state 171

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  147 inferenced_type_init_stmt: VAR IDENT ASSIGN expression . stmt_term
  168 stmt_term: . SEMI
  169          | . '\n'

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    SEMI           shift, and go to state 68
    AS             shift, and go to state 110
    '\n'           shift, and go to state 69

    stmt_term  go to state 199


state 172

  121 expression_nobrace: NEW typename_T LRB RRB .

    $default  reduce using rule 121 (expression_nobrace)


state 173

   72 argument_list: argument_list . COMMA expression
  120 expression_nobrace: NEW typename_T LRB argument_list . RRB

    COMMA  shift, and go to state 197
    RRB    shift, and go to state 200


state 174

   55 function_define: DEF IDENT LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 201


state 175

   54 function_define: DEF IDENT LRB parameter_list . RRB ARROW typename_T scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 202
    RRB    shift, and go to state 203


state 176

   69 parameter_list: typename_T . IDENT

    IDENT  shift, and go to state 204


state 177

   18 namespace_path: namespace_path DOT IDENT .

    $default  reduce using rule 18 (namespace_path)


state 178

   20 parameterized_typename: . IDENT type_parameter_group
   34 interface_decl: INTERFACE . parameterized_typename LCB access_member_tree_opt RCB
   35               | INTERFACE . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 205

    parameterized_typename  go to state 206


state 179

   20 parameterized_typename: . IDENT type_parameter_group
   30 class_decl: CLASS . parameterized_typename LCB access_member_tree_opt RCB
   31           | CLASS . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 205

    parameterized_typename  go to state 207


state 180

   32 enum_decl: ENUM . IDENT LCB ident_list RCB
   33          | ENUM . IDENT LCB ident_list COMMA RCB

    IDENT  shift, and go to state 208


state 181

    9 namespace_member_decl: NAMESPACE . namespace_path namespace_body
   17 namespace_path: . IDENT
   18               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 63

    namespace_path  go to state 209


state 182

   13 namespace_member_decl_list: namespace_member_decl .

    $default  reduce using rule 13 (namespace_member_decl_list)


state 183

    9 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   10                      | . class_decl
   11                      | . interface_decl
   12                      | . enum_decl
   14 namespace_member_decl_list: namespace_member_decl_list . namespace_member_decl
   16 namespace_member_decl_optional: namespace_member_decl_list .  [RCB]
   30 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   32 enum_decl: . ENUM IDENT LCB ident_list RCB
   33          | . ENUM IDENT LCB ident_list COMMA RCB
   34 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 178
    CLASS      shift, and go to state 179
    ENUM       shift, and go to state 180
    NAMESPACE  shift, and go to state 181

    $default  reduce using rule 16 (namespace_member_decl_optional)

    namespace_member_decl  go to state 210
    class_decl             go to state 185
    enum_decl              go to state 186
    interface_decl         go to state 187


state 184

    8 namespace_body: LCB namespace_member_decl_optional . RCB

    RCB  shift, and go to state 211


state 185

   10 namespace_member_decl: class_decl .

    $default  reduce using rule 10 (namespace_member_decl)


state 186

   12 namespace_member_decl: enum_decl .

    $default  reduce using rule 12 (namespace_member_decl)


state 187

   11 namespace_member_decl: interface_decl .

    $default  reduce using rule 11 (namespace_member_decl)


state 188

  148 if_stmt: IF LRB expression RRB . scope
  149        | IF LRB expression RRB . scope ELSE scope
  150        | IF LRB expression RRB . scope elif_list
  151        | IF LRB expression RRB . scope elif_list ELSE scope
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB

    LCB  shift, and go to state 72

    scope  go to state 212


state 189

  155 while_stmt: WHILE LRB expression RRB . scope_optional
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB
  166 scope_optional: . SEMI
  167               | . scope

    LCB   shift, and go to state 72
    SEMI  shift, and go to state 213

    scope           go to state 214
    scope_optional  go to state 215


state 190

  164 scope: LCB stmt_list RCB .

    $default  reduce using rule 164 (scope)


state 191

   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
  163 catch_stmt: CATCH LRB . typename_T IDENT RRB scope

    IDENT  shift, and go to state 6

    typename_T  go to state 216
    fqcn_part   go to state 61


state 192

  162 catch_stmt_list: catch_stmt_list catch_stmt .

    $default  reduce using rule 162 (catch_stmt_list)


state 193

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  146 variable_init_stmt: typename_T IDENT ASSIGN expression . stmt_term
  168 stmt_term: . SEMI
  169          | . '\n'

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    SEMI           shift, and go to state 68
    AS             shift, and go to state 110
    '\n'           shift, and go to state 69

    stmt_term  go to state 217


state 194

   76 typename_list: typename_list COMMA . typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_T  go to state 218
    fqcn_part   go to state 61


state 195

   74 typename_group: LT typename_list GT .

    $default  reduce using rule 74 (typename_group)


state 196

  114 expression_nobrace: expression DOT IDENT typename_group .

    $default  reduce using rule 114 (expression_nobrace)


state 197

   72 argument_list: argument_list COMMA . expression
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 219
    expression_nobrace  go to state 37
    primary             go to state 38


state 198

  118 expression_nobrace: expression_nobrace LRB argument_list RRB .

    $default  reduce using rule 118 (expression_nobrace)


state 199

  147 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 147 (inferenced_type_init_stmt)


state 200

  120 expression_nobrace: NEW typename_T LRB argument_list RRB .

    $default  reduce using rule 120 (expression_nobrace)


state 201

   55 function_define: DEF IDENT LRB RRB ARROW . typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_T  go to state 220
    fqcn_part   go to state 61


state 202

   70 parameter_list: parameter_list COMMA . typename_T IDENT
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_T  go to state 221
    fqcn_part   go to state 61


state 203

   54 function_define: DEF IDENT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 222


state 204

   69 parameter_list: typename_T IDENT .

    $default  reduce using rule 69 (parameter_list)


state 205

   20 parameterized_typename: IDENT . type_parameter_group
   21 type_parameter_group: .  [COLON, LCB]
   22                     | . LT type_parameter_list GT

    LT  shift, and go to state 223

    $default  reduce using rule 21 (type_parameter_group)

    type_parameter_group  go to state 224


state 206

   34 interface_decl: INTERFACE parameterized_typename . LCB access_member_tree_opt RCB
   35               | INTERFACE parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 225
    LCB    shift, and go to state 226


state 207

   30 class_decl: CLASS parameterized_typename . LCB access_member_tree_opt RCB
   31           | CLASS parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 227
    LCB    shift, and go to state 228


state 208

   32 enum_decl: ENUM IDENT . LCB ident_list RCB
   33          | ENUM IDENT . LCB ident_list COMMA RCB

    LCB  shift, and go to state 229


state 209

    8 namespace_body: . LCB namespace_member_decl_optional RCB
    9 namespace_member_decl: NAMESPACE namespace_path . namespace_body
   18 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 120
    LCB  shift, and go to state 121

    namespace_body  go to state 230


state 210

   14 namespace_member_decl_list: namespace_member_decl_list namespace_member_decl .

    $default  reduce using rule 14 (namespace_member_decl_list)


state 211

    8 namespace_body: LCB namespace_member_decl_optional RCB .

    $default  reduce using rule 8 (namespace_body)


state 212

  148 if_stmt: IF LRB expression RRB scope .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS, SUPER, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  149        | IF LRB expression RRB scope . ELSE scope
  150        | IF LRB expression RRB scope . elif_list
  151        | IF LRB expression RRB scope . elif_list ELSE scope
  152 elif_list: . elif
  153          | . elif_list elif
  154 elif: . ELIF LRB expression RRB scope

    ELIF  shift, and go to state 231
    ELSE  shift, and go to state 232

    $default  reduce using rule 148 (if_stmt)

    elif_list  go to state 233
    elif       go to state 234


state 213

  166 scope_optional: SEMI .

    $default  reduce using rule 166 (scope_optional)


state 214

  167 scope_optional: scope .

    $default  reduce using rule 167 (scope_optional)


state 215

  155 while_stmt: WHILE LRB expression RRB scope_optional .

    $default  reduce using rule 155 (while_stmt)


state 216

  163 catch_stmt: CATCH LRB typename_T . IDENT RRB scope

    IDENT  shift, and go to state 235


state 217

  146 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 146 (variable_init_stmt)


state 218

   76 typename_list: typename_list COMMA typename_T .

    $default  reduce using rule 76 (typename_list)


state 219

   72 argument_list: argument_list COMMA expression .  [COMMA, RRB]
   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    AS             shift, and go to state 110

    $default  reduce using rule 72 (argument_list)


state 220

   55 function_define: DEF IDENT LRB RRB ARROW typename_T . scope_optional
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB
  166 scope_optional: . SEMI
  167               | . scope

    LCB   shift, and go to state 72
    SEMI  shift, and go to state 213

    scope           go to state 214
    scope_optional  go to state 236


state 221

   70 parameter_list: parameter_list COMMA typename_T . IDENT

    IDENT  shift, and go to state 237


state 222

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW . typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_T  go to state 238
    fqcn_part   go to state 61


state 223

   22 type_parameter_group: LT . type_parameter_list GT
   23 type_parameter_list: . type_parameter
   24                    | . type_parameter_list COMMA type_parameter
   25 type_parameter: . IDENT type_parameter_rule_list
   26               | . IN IDENT type_parameter_rule_list
   27               | . OUT IDENT type_parameter_rule_list

    IDENT  shift, and go to state 239
    IN     shift, and go to state 240
    OUT    shift, and go to state 241

    type_parameter_list  go to state 242
    type_parameter       go to state 243


state 224

   20 parameterized_typename: IDENT type_parameter_group .

    $default  reduce using rule 20 (parameterized_typename)


state 225

   35 interface_decl: INTERFACE parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_list  go to state 244
    typename_T     go to state 136
    fqcn_part      go to state 61


state 226

   34 interface_decl: INTERFACE parameterized_typename LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 245
    PRIVATE    shift, and go to state 246
    PROTECTED  shift, and go to state 247

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 248
    access_member_tree      go to state 249
    access_member_list      go to state 250
    access_level_T          go to state 251


state 227

   31 class_decl: CLASS parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_list  go to state 252
    typename_T     go to state 136
    fqcn_part      go to state 61


state 228

   30 class_decl: CLASS parameterized_typename LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 245
    PRIVATE    shift, and go to state 246
    PROTECTED  shift, and go to state 247

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 253
    access_member_tree      go to state 249
    access_member_list      go to state 250
    access_level_T          go to state 251


state 229

   32 enum_decl: ENUM IDENT LCB . ident_list RCB
   33          | ENUM IDENT LCB . ident_list COMMA RCB
   67 ident_list: . IDENT
   68           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 254

    ident_list  go to state 255


state 230

    9 namespace_member_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 9 (namespace_member_decl)


state 231

  154 elif: ELIF . LRB expression RRB scope

    LRB  shift, and go to state 256


state 232

  149 if_stmt: IF LRB expression RRB scope ELSE . scope
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB

    LCB  shift, and go to state 72

    scope  go to state 257


state 233

  150 if_stmt: IF LRB expression RRB scope elif_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, THIS, SUPER, TRUE_TOK, FALSE_TOK, NULL_TOK, NEW, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  151        | IF LRB expression RRB scope elif_list . ELSE scope
  153 elif_list: elif_list . elif
  154 elif: . ELIF LRB expression RRB scope

    ELIF  shift, and go to state 231
    ELSE  shift, and go to state 258

    $default  reduce using rule 150 (if_stmt)

    elif  go to state 259


state 234

  152 elif_list: elif .

    $default  reduce using rule 152 (elif_list)


state 235

  163 catch_stmt: CATCH LRB typename_T IDENT . RRB scope

    RRB  shift, and go to state 260


state 236

   55 function_define: DEF IDENT LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 55 (function_define)


state 237

   70 parameter_list: parameter_list COMMA typename_T IDENT .

    $default  reduce using rule 70 (parameter_list)


state 238

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T . scope_optional
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB
  166 scope_optional: . SEMI
  167               | . scope

    LCB   shift, and go to state 72
    SEMI  shift, and go to state 213

    scope           go to state 214
    scope_optional  go to state 261


state 239

   25 type_parameter: IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 262

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 263


state 240

   26 type_parameter: IN . IDENT type_parameter_rule_list

    IDENT  shift, and go to state 264


state 241

   27 type_parameter: OUT . IDENT type_parameter_rule_list

    IDENT  shift, and go to state 265


state 242

   22 type_parameter_group: LT type_parameter_list . GT
   24 type_parameter_list: type_parameter_list . COMMA type_parameter

    COMMA  shift, and go to state 266
    GT     shift, and go to state 267


state 243

   23 type_parameter_list: type_parameter .

    $default  reduce using rule 23 (type_parameter_list)


state 244

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 194
    LCB    shift, and go to state 268


state 245

   64 access_level_T: PUBLIC .

    $default  reduce using rule 64 (access_level_T)


state 246

   65 access_level_T: PRIVATE .

    $default  reduce using rule 65 (access_level_T)


state 247

   66 access_level_T: PROTECTED .

    $default  reduce using rule 66 (access_level_T)


state 248

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 269


state 249

   37 access_member_tree_opt: access_member_tree .  [RCB]
   39 access_member_tree: access_member_tree . access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 245
    PRIVATE    shift, and go to state 246
    PROTECTED  shift, and go to state 247

    $default  reduce using rule 37 (access_member_tree_opt)

    access_member_list  go to state 270
    access_level_T      go to state 251


state 250

   38 access_member_tree: access_member_list .

    $default  reduce using rule 38 (access_member_tree)


state 251

   40 access_member_list: access_level_T . COLON member_define_list

    COLON  shift, and go to state 271


state 252

   31 class_decl: CLASS parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 194
    LCB    shift, and go to state 272


state 253

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 273


state 254

   67 ident_list: IDENT .

    $default  reduce using rule 67 (ident_list)


state 255

   32 enum_decl: ENUM IDENT LCB ident_list . RCB
   33          | ENUM IDENT LCB ident_list . COMMA RCB
   68 ident_list: ident_list . COMMA IDENT

    COMMA  shift, and go to state 274
    RCB    shift, and go to state 275


state 256

   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER
  154 elif: ELIF LRB . expression RRB scope

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    fqcn_part           go to state 52
    expression          go to state 276
    expression_nobrace  go to state 37
    primary             go to state 38


state 257

  149 if_stmt: IF LRB expression RRB scope ELSE scope .

    $default  reduce using rule 149 (if_stmt)


state 258

  151 if_stmt: IF LRB expression RRB scope elif_list ELSE . scope
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB

    LCB  shift, and go to state 72

    scope  go to state 277


state 259

  153 elif_list: elif_list elif .

    $default  reduce using rule 153 (elif_list)


state 260

  163 catch_stmt: CATCH LRB typename_T IDENT RRB . scope
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB

    LCB  shift, and go to state 72

    scope  go to state 278


state 261

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 54 (function_define)


state 262

   29 type_parameter_rule_list: LRB . typename_list RRB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_list  go to state 279
    typename_T     go to state 136
    fqcn_part      go to state 61


state 263

   25 type_parameter: IDENT type_parameter_rule_list .

    $default  reduce using rule 25 (type_parameter)


state 264

   26 type_parameter: IN IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 262

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 280


state 265

   27 type_parameter: OUT IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 262

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 281


state 266

   24 type_parameter_list: type_parameter_list COMMA . type_parameter
   25 type_parameter: . IDENT type_parameter_rule_list
   26               | . IN IDENT type_parameter_rule_list
   27               | . OUT IDENT type_parameter_rule_list

    IDENT  shift, and go to state 239
    IN     shift, and go to state 240
    OUT    shift, and go to state 241

    type_parameter  go to state 282


state 267

   22 type_parameter_group: LT type_parameter_list GT .

    $default  reduce using rule 22 (type_parameter_group)


state 268

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 245
    PRIVATE    shift, and go to state 246
    PROTECTED  shift, and go to state 247

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 283
    access_member_tree      go to state 249
    access_member_list      go to state 250
    access_level_T          go to state 251


state 269

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 34 (interface_decl)


state 270

   39 access_member_tree: access_member_tree access_member_list .

    $default  reduce using rule 39 (access_member_tree)


state 271

   40 access_member_list: access_level_T COLON . member_define_list
   41 member_define_list: . member_define
   42                   | . member_define_list member_define
   43 member_define: . constructor_define
   44              | . method_define
   45              | . field_define
   46 constructor_define: . CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | . CTOR NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: . modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | . modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: . modifier_type_T typename_T IDENT SEMI
   59 modifier_type_T: .  [IDENT, DEF]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 284
    NATIVE  shift, and go to state 285
    CTOR    shift, and go to state 286

    $default  reduce using rule 59 (modifier_type_T)

    member_define_list  go to state 287
    member_define       go to state 288
    constructor_define  go to state 289
    method_define       go to state 290
    field_define        go to state 291
    modifier_type_T     go to state 292


state 272

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 245
    PRIVATE    shift, and go to state 246
    PROTECTED  shift, and go to state 247

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 293
    access_member_tree      go to state 249
    access_member_list      go to state 250
    access_level_T          go to state 251


state 273

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 30 (class_decl)


state 274

   33 enum_decl: ENUM IDENT LCB ident_list COMMA . RCB
   68 ident_list: ident_list COMMA . IDENT

    IDENT  shift, and go to state 294
    RCB    shift, and go to state 295


state 275

   32 enum_decl: ENUM IDENT LCB ident_list RCB .

    $default  reduce using rule 32 (enum_decl)


state 276

   85 expression_nobrace: expression . ADD expression
   86                   | expression . SUB expression
   87                   | expression . MUL expression
   88                   | expression . DIV expression
   89                   | expression . MOD expression
   90                   | expression . BIT_OR expression
   91                   | expression . EQUAL expression
   92                   | expression . NOTEQUAL expression
   93                   | expression . BIT_AND expression
   94                   | expression . EXC_OR expression
   95                   | expression . LOGIC_OR expression
   96                   | expression . LOGIC_AND expression
   97                   | expression . ASSIGN expression
   98                   | expression . ADD_ASSIGN expression
   99                   | expression . SUB_ASSIGN expression
  100                   | expression . MUL_ASSIGN expression
  101                   | expression . DIV_ASSIGN expression
  102                   | expression . MOD_ASSIGN expression
  103                   | expression . AND_ASSIGN expression
  104                   | expression . OR_ASSIGN expression
  105                   | expression . EXC_OR_ASSIGN expression
  106                   | expression . LSHIFT_ASSIGN expression
  107                   | expression . RSHIFT_ASSIGN expression
  108                   | expression . GT expression
  109                   | expression . GE expression
  110                   | expression . LT expression
  111                   | expression . LE expression
  112                   | expression . LSHIFT expression
  113                   | expression . RSHIFT expression
  114                   | expression . DOT IDENT typename_group
  115                   | expression . AS typename_T
  154 elif: ELIF LRB expression . RRB scope

    DOT            shift, and go to state 80
    ADD            shift, and go to state 81
    SUB            shift, and go to state 82
    MUL            shift, and go to state 83
    DIV            shift, and go to state 84
    MOD            shift, and go to state 85
    LSHIFT         shift, and go to state 86
    RSHIFT         shift, and go to state 87
    EQUAL          shift, and go to state 88
    NOTEQUAL       shift, and go to state 89
    GT             shift, and go to state 90
    GE             shift, and go to state 91
    LT             shift, and go to state 92
    LE             shift, and go to state 93
    BIT_AND        shift, and go to state 94
    LOGIC_AND      shift, and go to state 95
    BIT_OR         shift, and go to state 96
    LOGIC_OR       shift, and go to state 97
    ASSIGN         shift, and go to state 98
    ADD_ASSIGN     shift, and go to state 99
    SUB_ASSIGN     shift, and go to state 100
    MUL_ASSIGN     shift, and go to state 101
    DIV_ASSIGN     shift, and go to state 102
    MOD_ASSIGN     shift, and go to state 103
    AND_ASSIGN     shift, and go to state 104
    OR_ASSIGN      shift, and go to state 105
    LSHIFT_ASSIGN  shift, and go to state 106
    RSHIFT_ASSIGN  shift, and go to state 107
    EXC_OR_ASSIGN  shift, and go to state 108
    EXC_OR         shift, and go to state 109
    RRB            shift, and go to state 296
    AS             shift, and go to state 110


state 277

  151 if_stmt: IF LRB expression RRB scope elif_list ELSE scope .

    $default  reduce using rule 151 (if_stmt)


state 278

  163 catch_stmt: CATCH LRB typename_T IDENT RRB scope .

    $default  reduce using rule 163 (catch_stmt)


state 279

   29 type_parameter_rule_list: LRB typename_list . RRB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 194
    RRB    shift, and go to state 297


state 280

   26 type_parameter: IN IDENT type_parameter_rule_list .

    $default  reduce using rule 26 (type_parameter)


state 281

   27 type_parameter: OUT IDENT type_parameter_rule_list .

    $default  reduce using rule 27 (type_parameter)


state 282

   24 type_parameter_list: type_parameter_list COMMA type_parameter .

    $default  reduce using rule 24 (type_parameter_list)


state 283

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 298


state 284

   60 modifier_type_T: STATIC . NATIVE
   62                | STATIC .  [IDENT, DEF]

    NATIVE  shift, and go to state 299

    $default  reduce using rule 62 (modifier_type_T)


state 285

   61 modifier_type_T: NATIVE . STATIC
   63                | NATIVE .  [IDENT, DEF]

    STATIC  shift, and go to state 300

    $default  reduce using rule 63 (modifier_type_T)


state 286

   46 constructor_define: CTOR . NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR . NEW LRB RRB constructor_chain_optional scope_optional

    NEW  shift, and go to state 301


state 287

   40 access_member_list: access_level_T COLON member_define_list .  [RCB, PUBLIC, PRIVATE, PROTECTED]
   42 member_define_list: member_define_list . member_define
   43 member_define: . constructor_define
   44              | . method_define
   45              | . field_define
   46 constructor_define: . CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | . CTOR NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: . modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | . modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: . modifier_type_T typename_T IDENT SEMI
   59 modifier_type_T: .  [IDENT, DEF]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 284
    NATIVE  shift, and go to state 285
    CTOR    shift, and go to state 286

    IDENT     reduce using rule 59 (modifier_type_T)
    DEF       reduce using rule 59 (modifier_type_T)
    $default  reduce using rule 40 (access_member_list)

    member_define       go to state 302
    constructor_define  go to state 289
    method_define       go to state 290
    field_define        go to state 291
    modifier_type_T     go to state 292


state 288

   41 member_define_list: member_define .

    $default  reduce using rule 41 (member_define_list)


state 289

   43 member_define: constructor_define .

    $default  reduce using rule 43 (member_define)


state 290

   44 member_define: method_define .

    $default  reduce using rule 44 (member_define)


state 291

   45 member_define: field_define .

    $default  reduce using rule 45 (member_define)


state 292

   56 method_define: modifier_type_T . DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T . DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: modifier_type_T . typename_T IDENT SEMI
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6
    DEF    shift, and go to state 303

    typename_T  go to state 304
    fqcn_part   go to state 61


state 293

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 305


state 294

   68 ident_list: ident_list COMMA IDENT .

    $default  reduce using rule 68 (ident_list)


state 295

   33 enum_decl: ENUM IDENT LCB ident_list COMMA RCB .

    $default  reduce using rule 33 (enum_decl)


state 296

  154 elif: ELIF LRB expression RRB . scope
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB

    LCB  shift, and go to state 72

    scope  go to state 306


state 297

   29 type_parameter_rule_list: LRB typename_list RRB .

    $default  reduce using rule 29 (type_parameter_rule_list)


state 298

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 35 (interface_decl)


state 299

   60 modifier_type_T: STATIC NATIVE .

    $default  reduce using rule 60 (modifier_type_T)


state 300

   61 modifier_type_T: NATIVE STATIC .

    $default  reduce using rule 61 (modifier_type_T)


state 301

   46 constructor_define: CTOR NEW . LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW . LRB RRB constructor_chain_optional scope_optional

    LRB  shift, and go to state 307


state 302

   42 member_define_list: member_define_list member_define .

    $default  reduce using rule 42 (member_define_list)


state 303

   56 method_define: modifier_type_T DEF . IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF . IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 308


state 304

   58 field_define: modifier_type_T typename_T . IDENT SEMI

    IDENT  shift, and go to state 309


state 305

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 31 (class_decl)


state 306

  154 elif: ELIF LRB expression RRB scope .

    $default  reduce using rule 154 (elif)


state 307

   46 constructor_define: CTOR NEW LRB . parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW LRB . RRB constructor_chain_optional scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 310

    parameter_list  go to state 311
    typename_T      go to state 176
    fqcn_part       go to state 61


state 308

   21 type_parameter_group: .  [LRB]
   22                     | . LT type_parameter_list GT
   56 method_define: modifier_type_T DEF IDENT . type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT . type_parameter_group LRB RRB ARROW typename_T scope_optional

    LT  shift, and go to state 223

    $default  reduce using rule 21 (type_parameter_group)

    type_parameter_group  go to state 312


state 309

   58 field_define: modifier_type_T typename_T IDENT . SEMI

    SEMI  shift, and go to state 313


state 310

   47 constructor_define: CTOR NEW LRB RRB . constructor_chain_optional scope_optional
   48 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   49                  | . COLON constructor_chain_type_T LRB RRB
   52 constructor_chain_optional: .  [LCB, SEMI]
   53                           | . constructor_chain

    COLON  shift, and go to state 314

    $default  reduce using rule 52 (constructor_chain_optional)

    constructor_chain           go to state 315
    constructor_chain_optional  go to state 316


state 311

   46 constructor_define: CTOR NEW LRB parameter_list . RRB constructor_chain_optional scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 202
    RRB    shift, and go to state 317


state 312

   56 method_define: modifier_type_T DEF IDENT type_parameter_group . LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 318


state 313

   58 field_define: modifier_type_T typename_T IDENT SEMI .

    $default  reduce using rule 58 (field_define)


state 314

   48 constructor_chain: COLON . constructor_chain_type_T LRB argument_list RRB
   49                  | COLON . constructor_chain_type_T LRB RRB
   50 constructor_chain_type_T: . SUPER
   51                         | . THIS

    THIS   shift, and go to state 319
    SUPER  shift, and go to state 320

    constructor_chain_type_T  go to state 321


state 315

   53 constructor_chain_optional: constructor_chain .

    $default  reduce using rule 53 (constructor_chain_optional)


state 316

   47 constructor_define: CTOR NEW LRB RRB constructor_chain_optional . scope_optional
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB
  166 scope_optional: . SEMI
  167               | . scope

    LCB   shift, and go to state 72
    SEMI  shift, and go to state 213

    scope           go to state 214
    scope_optional  go to state 322


state 317

   46 constructor_define: CTOR NEW LRB parameter_list RRB . constructor_chain_optional scope_optional
   48 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   49                  | . COLON constructor_chain_type_T LRB RRB
   52 constructor_chain_optional: .  [LCB, SEMI]
   53                           | . constructor_chain

    COLON  shift, and go to state 314

    $default  reduce using rule 52 (constructor_chain_optional)

    constructor_chain           go to state 315
    constructor_chain_optional  go to state 323


state 318

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB . parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group LRB . RRB ARROW typename_T scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 324

    parameter_list  go to state 325
    typename_T      go to state 176
    fqcn_part       go to state 61


state 319

   51 constructor_chain_type_T: THIS .

    $default  reduce using rule 51 (constructor_chain_type_T)


state 320

   50 constructor_chain_type_T: SUPER .

    $default  reduce using rule 50 (constructor_chain_type_T)


state 321

   48 constructor_chain: COLON constructor_chain_type_T . LRB argument_list RRB
   49                  | COLON constructor_chain_type_T . LRB RRB

    LRB  shift, and go to state 326


state 322

   47 constructor_define: CTOR NEW LRB RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 47 (constructor_define)


state 323

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional . scope_optional
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB
  166 scope_optional: . SEMI
  167               | . scope

    LCB   shift, and go to state 72
    SEMI  shift, and go to state 213

    scope           go to state 214
    scope_optional  go to state 327


state 324

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 328


state 325

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list . RRB ARROW typename_T scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 202
    RRB    shift, and go to state 329


state 326

   48 constructor_chain: COLON constructor_chain_type_T LRB . argument_list RRB
   49                  | COLON constructor_chain_type_T LRB . RRB
   71 argument_list: . expression
   72              | . argument_list COMMA expression
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT
   80 expression: . LRB expression RRB
   81           | . expression_nobrace
   82 expression_nobrace: . primary
   83                   | . ADD expression
   84                   | . SUB expression
   85                   | . expression ADD expression
   86                   | . expression SUB expression
   87                   | . expression MUL expression
   88                   | . expression DIV expression
   89                   | . expression MOD expression
   90                   | . expression BIT_OR expression
   91                   | . expression EQUAL expression
   92                   | . expression NOTEQUAL expression
   93                   | . expression BIT_AND expression
   94                   | . expression EXC_OR expression
   95                   | . expression LOGIC_OR expression
   96                   | . expression LOGIC_AND expression
   97                   | . expression ASSIGN expression
   98                   | . expression ADD_ASSIGN expression
   99                   | . expression SUB_ASSIGN expression
  100                   | . expression MUL_ASSIGN expression
  101                   | . expression DIV_ASSIGN expression
  102                   | . expression MOD_ASSIGN expression
  103                   | . expression AND_ASSIGN expression
  104                   | . expression OR_ASSIGN expression
  105                   | . expression EXC_OR_ASSIGN expression
  106                   | . expression LSHIFT_ASSIGN expression
  107                   | . expression RSHIFT_ASSIGN expression
  108                   | . expression GT expression
  109                   | . expression GE expression
  110                   | . expression LT expression
  111                   | . expression LE expression
  112                   | . expression LSHIFT expression
  113                   | . expression RSHIFT expression
  114                   | . expression DOT IDENT typename_group
  115                   | . expression AS typename_T
  116                   | . CHILDA expression
  117                   | . NOT expression
  118                   | . expression_nobrace LRB argument_list RRB
  119                   | . expression_nobrace LRB RRB
  120                   | . NEW typename_T LRB argument_list RRB
  121                   | . NEW typename_T LRB RRB
  122 primary: . INT
  123        | . DOUBLE
  124        | . CHAR_LITERAL
  125        | . STRING_LITERAL
  126        | . TRUE_TOK
  127        | . FALSE_TOK
  128        | . NULL_TOK
  129        | . fqcn_part typename_group
  130        | . THIS
  131        | . SUPER

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    RRB             shift, and go to state 330
    THIS            shift, and go to state 14
    SUPER           shift, and go to state 15
    TRUE_TOK        shift, and go to state 16
    FALSE_TOK       shift, and go to state 17
    NULL_TOK        shift, and go to state 18
    NEW             shift, and go to state 19

    argument_list       go to state 331
    fqcn_part           go to state 52
    expression          go to state 170
    expression_nobrace  go to state 37
    primary             go to state 38


state 327

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 46 (constructor_define)


state 328

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW . typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_T  go to state 332
    fqcn_part   go to state 61


state 329

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 333


state 330

   49 constructor_chain: COLON constructor_chain_type_T LRB RRB .

    $default  reduce using rule 49 (constructor_chain)


state 331

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list . RRB
   72 argument_list: argument_list . COMMA expression

    COMMA  shift, and go to state 197
    RRB    shift, and go to state 334


state 332

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T . scope_optional
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB
  166 scope_optional: . SEMI
  167               | . scope

    LCB   shift, and go to state 72
    SEMI  shift, and go to state 213

    scope           go to state 214
    scope_optional  go to state 335


state 333

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW . typename_T scope_optional
   77 typename_T: . fqcn_part typename_group
   78 fqcn_part: . IDENT
   79          | . fqcn_part COLO_COLO IDENT

    IDENT  shift, and go to state 6

    typename_T  go to state 336
    fqcn_part   go to state 61


state 334

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB .

    $default  reduce using rule 48 (constructor_chain)


state 335

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 57 (method_define)


state 336

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T . scope_optional
  164 scope: . LCB stmt_list RCB
  165      | . LCB RCB
  166 scope_optional: . SEMI
  167               | . scope

    LCB   shift, and go to state 72
    SEMI  shift, and go to state 213

    scope           go to state 214
    scope_optional  go to state 337


state 337

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 56 (method_define)
