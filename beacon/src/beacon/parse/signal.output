Terminals which are not used

   COMMA_OPT
   COLO_COLO
   INC
   DEC
   LSB
   RSB
   AS


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: program
    2                 | error '\n'

    3 program: stmt_list
    4        | import
    5        | namespace_decl
    6        | function_define

    7 namespace_decl: NAMESPACE namespace_path namespace_body

    8 namespace_body: LCB namespace_member_decl_optional RCB

    9 namespace_member_decl: NAMESPACE namespace_path namespace_body
   10                      | class_decl
   11                      | interface_decl
   12                      | enum_decl

   13 namespace_member_decl_list: namespace_member_decl
   14                           | namespace_member_decl_list namespace_member_decl

   15 namespace_member_decl_optional: /* empty */
   16                               | namespace_member_decl_list

   17 namespace_path: IDENT
   18               | namespace_path DOT IDENT

   19 import: IMPORT STRING_LITERAL

   20 parameterized_typename: IDENT type_parameter_group

   21 type_parameter_group: /* empty */
   22                     | LT type_parameter_list GT

   23 type_parameter_list: type_parameter
   24                    | type_parameter_list COMMA type_parameter

   25 type_parameter: IDENT type_parameter_rule_list
   26               | IN IDENT type_parameter_rule_list
   27               | OUT IDENT type_parameter_rule_list

   28 type_parameter_rule_list: /* empty */
   29                         | LRB typename_list RRB

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   32 enum_decl: ENUM IDENT LCB ident_list RCB
   33          | ENUM IDENT LCB ident_list COMMA RCB

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

   36 access_member_tree_opt: /* empty */
   37                       | access_member_tree

   38 access_member_tree: access_member_list
   39                   | access_member_tree access_member_list

   40 access_member_list: access_level_T COLON member_define_list

   41 member_define_list: member_define
   42                   | member_define_list member_define

   43 member_define: constructor_define
   44              | method_define
   45              | field_define

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW LRB RRB constructor_chain_optional scope_optional

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB
   49                  | COLON constructor_chain_type_T LRB RRB

   50 constructor_chain_type_T: SUPER
   51                         | THIS

   52 constructor_chain_optional: /* empty */
   53                           | constructor_chain

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT LRB RRB ARROW typename_T scope_optional

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

   58 field_define: modifier_type_T typename_T IDENT SEMI

   59 modifier_type_T: /* empty */
   60                | STATIC NATIVE
   61                | NATIVE STATIC
   62                | STATIC
   63                | NATIVE

   64 access_level_T: PUBLIC
   65               | PRIVATE
   66               | PROTECTED

   67 ident_list: IDENT
   68           | ident_list COMMA IDENT

   69 parameter_list: typename_T IDENT
   70               | parameter_list COMMA typename_T IDENT

   71 argument_list: expression
   72              | argument_list COMMA expression

   73 typename_group: /* empty */
   74               | '<' typename_list '>'

   75 typename_list: typename_T
   76              | typename_list COMMA typename_T

   77 typename_T: IDENT typename_group

   78 expression: primary
   79           | ADD expression
   80           | SUB expression
   81           | expression ADD expression
   82           | expression SUB expression
   83           | expression MUL expression
   84           | expression DIV expression
   85           | expression MOD expression
   86           | expression BIT_OR expression
   87           | expression EQUAL expression
   88           | expression NOTEQUAL expression
   89           | expression BIT_AND expression
   90           | expression EXC_OR expression
   91           | expression LOGIC_OR expression
   92           | expression LOGIC_AND expression
   93           | expression ASSIGN expression
   94           | expression ADD_ASSIGN expression
   95           | expression SUB_ASSIGN expression
   96           | expression MUL_ASSIGN expression
   97           | expression DIV_ASSIGN expression
   98           | expression MOD_ASSIGN expression
   99           | expression AND_ASSIGN expression
  100           | expression OR_ASSIGN expression
  101           | expression EXC_OR_ASSIGN expression
  102           | expression LSHIFT_ASSIGN expression
  103           | expression RSHIFT_ASSIGN expression
  104           | expression GT expression
  105           | expression GE expression
  106           | expression LT expression
  107           | expression LE expression
  108           | expression LSHIFT expression
  109           | expression RSHIFT expression
  110           | CHILDA expression
  111           | NOT expression
  112           | expression_brace

  113 expression_brace: LRB expression RRB

  114 primary: INT
  115        | DOUBLE
  116        | CHAR_LITERAL
  117        | STRING_LITERAL
  118        | TRUE_TOK
  119        | FALSE_TOK
  120        | NULL_TOK

  121 stmt_list: stmt
  122          | stmt_list stmt

  123 stmt: expression stmt_term
  124     | variable_decl_stmt
  125     | variable_init_stmt
  126     | inferenced_type_init_stmt
  127     | if_stmt
  128     | while_stmt
  129     | break_stmt
  130     | continue_stmt
  131     | return_stmt
  132     | throw_stmt
  133     | try_stmt

  134 variable_decl_stmt: typename_T IDENT SEMI

  135 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term

  136 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term

  137 if_stmt: IF LRB expression RRB scope
  138        | IF LRB expression RRB scope ELSE scope
  139        | IF LRB expression RRB scope elif_list
  140        | IF LRB expression RRB scope elif_list ELSE scope

  141 elif_list: elif
  142          | elif_list elif

  143 elif: ELIF LRB expression RRB scope

  144 while_stmt: WHILE LRB expression RRB scope_optional

  145 break_stmt: BREAK stmt_term

  146 continue_stmt: CONTINUE stmt_term

  147 return_stmt: RETURN expression stmt_term

  148 throw_stmt: THROW expression stmt_term

  149 try_stmt: TRY scope catch_stmt_list

  150 catch_stmt_list: catch_stmt
  151                | catch_stmt_list catch_stmt

  152 catch_stmt: CATCH LRB typename_T IDENT RRB scope

  153 scope: LCB stmt_list RCB
  154      | LCB RCB

  155 scope_optional: SEMI
  156               | scope

  157 stmt_term: SEMI
  158          | '\n'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 158
'<' (60) 74
'>' (62) 74
error (256) 2
CHAR_LITERAL (258) 116
STRING_LITERAL (259) 19 117
INT (260) 114
DOUBLE (261) 115
IDENT (262) 17 18 20 25 26 27 32 33 54 55 56 57 58 67 68 69 70 77 134
    135 136 152
DOT (263) 18
COMMA (264) 24 33 68 70 72 76
COMMA_OPT (265)
COLON (266) 31 35 40 48 49
COLO_COLO (267)
ADD (268) 79 81
SUB (269) 80 82
MUL (270) 83
DIV (271) 84
MOD (272) 85
NOT (273) 111
LSHIFT (274) 108
RSHIFT (275) 109
CHILDA (276) 110
EQUAL (277) 87
NOTEQUAL (278) 88
GT (279) 22 104
GE (280) 105
LT (281) 22 106
LE (282) 107
BIT_AND (283) 89
LOGIC_AND (284) 92
BIT_OR (285) 86
LOGIC_OR (286) 91
ASSIGN (287) 93 135 136
ADD_ASSIGN (288) 94
SUB_ASSIGN (289) 95
MUL_ASSIGN (290) 96
DIV_ASSIGN (291) 97
MOD_ASSIGN (292) 98
AND_ASSIGN (293) 99
OR_ASSIGN (294) 100
LSHIFT_ASSIGN (295) 102
RSHIFT_ASSIGN (296) 103
EXC_OR_ASSIGN (297) 101
INC (298)
DEC (299)
EXC_OR (300) 90
LCB (301) 8 30 31 32 33 34 35 153 154
RCB (302) 8 30 31 32 33 34 35 153 154
LRB (303) 29 46 47 48 49 54 55 56 57 113 137 138 139 140 143 144 152
RRB (304) 29 46 47 48 49 54 55 56 57 113 137 138 139 140 143 144 152
LSB (305)
RSB (306)
SEMI (307) 58 134 155 157
IMPORT (308) 19
VAR (309) 136
THIS (310) 51
SUPER (311) 50
TRUE_TOK (312) 118
FALSE_TOK (313) 119
NULL_TOK (314) 120
AS (315)
INTERFACE (316) 34 35
CLASS (317) 30 31
ENUM (318) 32 33
PUBLIC (319) 64
PRIVATE (320) 65
PROTECTED (321) 66
STATIC (322) 60 61 62
NATIVE (323) 60 61 63
NEW (324) 46 47
IN (325) 26
OUT (326) 27
CTOR (327) 46 47
DEF (328) 54 55 56 57
ARROW (329) 54 55 56 57
NAMESPACE (330) 7 9
RETURN (331) 147
IF (332) 137 138 139 140
ELIF (333) 143
ELSE (334) 138 140
WHILE (335) 144
BREAK (336) 145
CONTINUE (337) 146
TRY (338) 149
CATCH (339) 152
THROW (340) 148
POSITIVE (341)
NEGATIVE (342)


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
compilation_unit (92)
    on left: 1 2, on right: 0
program (93)
    on left: 3 4 5 6, on right: 1
namespace_decl (94)
    on left: 7, on right: 5
namespace_body (95)
    on left: 8, on right: 7 9
namespace_member_decl (96)
    on left: 9 10 11 12, on right: 13 14
namespace_member_decl_list (97)
    on left: 13 14, on right: 14 16
namespace_member_decl_optional (98)
    on left: 15 16, on right: 8
namespace_path (99)
    on left: 17 18, on right: 7 9 18
import (100)
    on left: 19, on right: 4
parameterized_typename (101)
    on left: 20, on right: 30 31 34 35
type_parameter_group (102)
    on left: 21 22, on right: 20 56 57
type_parameter_list (103)
    on left: 23 24, on right: 22 24
type_parameter (104)
    on left: 25 26 27, on right: 23 24
type_parameter_rule_list (105)
    on left: 28 29, on right: 25 26 27
class_decl (106)
    on left: 30 31, on right: 10
enum_decl (107)
    on left: 32 33, on right: 12
interface_decl (108)
    on left: 34 35, on right: 11
access_member_tree_opt (109)
    on left: 36 37, on right: 30 31 34 35
access_member_tree (110)
    on left: 38 39, on right: 37 39
access_member_list (111)
    on left: 40, on right: 38 39
member_define_list (112)
    on left: 41 42, on right: 40 42
member_define (113)
    on left: 43 44 45, on right: 41 42
constructor_define (114)
    on left: 46 47, on right: 43
constructor_chain (115)
    on left: 48 49, on right: 53
constructor_chain_type_T (116)
    on left: 50 51, on right: 48 49
constructor_chain_optional (117)
    on left: 52 53, on right: 46 47
function_define (118)
    on left: 54 55, on right: 6
method_define (119)
    on left: 56 57, on right: 44
field_define (120)
    on left: 58, on right: 45
modifier_type_T (121)
    on left: 59 60 61 62 63, on right: 56 57 58
access_level_T (122)
    on left: 64 65 66, on right: 40
ident_list (123)
    on left: 67 68, on right: 32 33 68
parameter_list (124)
    on left: 69 70, on right: 46 54 56 70
argument_list (125)
    on left: 71 72, on right: 48 72
typename_group (126)
    on left: 73 74, on right: 77
typename_list (127)
    on left: 75 76, on right: 29 31 35 74 76
typename_T (128)
    on left: 77, on right: 54 55 56 57 58 69 70 75 76 134 135 152
expression (129)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
   , on right: 71 72 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
    95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
    113 123 135 136 137 138 139 140 143 144 147 148
expression_brace (130)
    on left: 113, on right: 112
primary (131)
    on left: 114 115 116 117 118 119 120, on right: 78
stmt_list (132)
    on left: 121 122, on right: 3 122 153
stmt (133)
    on left: 123 124 125 126 127 128 129 130 131 132 133,
    on right: 121 122
variable_decl_stmt (134)
    on left: 134, on right: 124
variable_init_stmt (135)
    on left: 135, on right: 125
inferenced_type_init_stmt (136)
    on left: 136, on right: 126
if_stmt (137)
    on left: 137 138 139 140, on right: 127
elif_list (138)
    on left: 141 142, on right: 139 140 142
elif (139)
    on left: 143, on right: 141 142
while_stmt (140)
    on left: 144, on right: 128
break_stmt (141)
    on left: 145, on right: 129
continue_stmt (142)
    on left: 146, on right: 130
return_stmt (143)
    on left: 147, on right: 131
throw_stmt (144)
    on left: 148, on right: 132
try_stmt (145)
    on left: 149, on right: 133
catch_stmt_list (146)
    on left: 150 151, on right: 149 151
catch_stmt (147)
    on left: 152, on right: 150 151
scope (148)
    on left: 153 154, on right: 137 138 139 140 143 149 152 156
scope_optional (149)
    on left: 155 156, on right: 46 47 54 55 56 57 144
stmt_term (150)
    on left: 157 158, on right: 123 135 136 145 146 147 148


state 0

    0 $accept: . compilation_unit $end
    1 compilation_unit: . program
    2                 | . error '\n'
    3 program: . stmt_list
    4        | . import
    5        | . namespace_decl
    6        | . function_define
    7 namespace_decl: . NAMESPACE namespace_path namespace_body
   19 import: . IMPORT STRING_LITERAL
   54 function_define: . DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | . DEF IDENT LRB RRB ARROW typename_T scope_optional
   77 typename_T: . IDENT typename_group
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  121 stmt_list: . stmt
  122          | . stmt_list stmt
  123 stmt: . expression stmt_term
  124     | . variable_decl_stmt
  125     | . variable_init_stmt
  126     | . inferenced_type_init_stmt
  127     | . if_stmt
  128     | . while_stmt
  129     | . break_stmt
  130     | . continue_stmt
  131     | . return_stmt
  132     | . throw_stmt
  133     | . try_stmt
  134 variable_decl_stmt: . typename_T IDENT SEMI
  135 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  136 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  137 if_stmt: . IF LRB expression RRB scope
  138        | . IF LRB expression RRB scope ELSE scope
  139        | . IF LRB expression RRB scope elif_list
  140        | . IF LRB expression RRB scope elif_list ELSE scope
  144 while_stmt: . WHILE LRB expression RRB scope_optional
  145 break_stmt: . BREAK stmt_term
  146 continue_stmt: . CONTINUE stmt_term
  147 return_stmt: . RETURN expression stmt_term
  148 throw_stmt: . THROW expression stmt_term
  149 try_stmt: . TRY scope catch_stmt_list

    error           shift, and go to state 1
    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    IMPORT          shift, and go to state 12
    VAR             shift, and go to state 13
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16
    DEF             shift, and go to state 17
    NAMESPACE       shift, and go to state 18
    RETURN          shift, and go to state 19
    IF              shift, and go to state 20
    WHILE           shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    TRY             shift, and go to state 24
    THROW           shift, and go to state 25

    compilation_unit           go to state 26
    program                    go to state 27
    namespace_decl             go to state 28
    import                     go to state 29
    function_define            go to state 30
    typename_T                 go to state 31
    expression                 go to state 32
    expression_brace           go to state 33
    primary                    go to state 34
    stmt_list                  go to state 35
    stmt                       go to state 36
    variable_decl_stmt         go to state 37
    variable_init_stmt         go to state 38
    inferenced_type_init_stmt  go to state 39
    if_stmt                    go to state 40
    while_stmt                 go to state 41
    break_stmt                 go to state 42
    continue_stmt              go to state 43
    return_stmt                go to state 44
    throw_stmt                 go to state 45
    try_stmt                   go to state 46


state 1

    2 compilation_unit: error . '\n'

    '\n'  shift, and go to state 47


state 2

  116 primary: CHAR_LITERAL .

    $default  reduce using rule 116 (primary)


state 3

  117 primary: STRING_LITERAL .

    $default  reduce using rule 117 (primary)


state 4

  114 primary: INT .

    $default  reduce using rule 114 (primary)


state 5

  115 primary: DOUBLE .

    $default  reduce using rule 115 (primary)


state 6

   73 typename_group: .  [IDENT, COMMA, LCB, RRB, SEMI, '>']
   74               | . '<' typename_list '>'
   77 typename_T: IDENT . typename_group

    '<'  shift, and go to state 48

    $default  reduce using rule 73 (typename_group)

    typename_group  go to state 49


state 7

   78 expression: . primary
   79           | . ADD expression
   79           | ADD . expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 50
    expression_brace  go to state 33
    primary           go to state 34


state 8

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   80           | SUB . expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 51
    expression_brace  go to state 33
    primary           go to state 34


state 9

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  111           | NOT . expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 52
    expression_brace  go to state 33
    primary           go to state 34


state 10

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  110           | CHILDA . expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 53
    expression_brace  go to state 33
    primary           go to state 34


state 11

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  113                 | LRB . expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 54
    expression_brace  go to state 33
    primary           go to state 34


state 12

   19 import: IMPORT . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 55


state 13

  136 inferenced_type_init_stmt: VAR . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 56


state 14

  118 primary: TRUE_TOK .

    $default  reduce using rule 118 (primary)


state 15

  119 primary: FALSE_TOK .

    $default  reduce using rule 119 (primary)


state 16

  120 primary: NULL_TOK .

    $default  reduce using rule 120 (primary)


state 17

   54 function_define: DEF . IDENT LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF . IDENT LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 57


state 18

    7 namespace_decl: NAMESPACE . namespace_path namespace_body
   17 namespace_path: . IDENT
   18               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 58

    namespace_path  go to state 59


state 19

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  147 return_stmt: RETURN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 60
    expression_brace  go to state 33
    primary           go to state 34


state 20

  137 if_stmt: IF . LRB expression RRB scope
  138        | IF . LRB expression RRB scope ELSE scope
  139        | IF . LRB expression RRB scope elif_list
  140        | IF . LRB expression RRB scope elif_list ELSE scope

    LRB  shift, and go to state 61


state 21

  144 while_stmt: WHILE . LRB expression RRB scope_optional

    LRB  shift, and go to state 62


state 22

  145 break_stmt: BREAK . stmt_term
  157 stmt_term: . SEMI
  158          | . '\n'

    SEMI  shift, and go to state 63
    '\n'  shift, and go to state 64

    stmt_term  go to state 65


state 23

  146 continue_stmt: CONTINUE . stmt_term
  157 stmt_term: . SEMI
  158          | . '\n'

    SEMI  shift, and go to state 63
    '\n'  shift, and go to state 64

    stmt_term  go to state 66


state 24

  149 try_stmt: TRY . scope catch_stmt_list
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB

    LCB  shift, and go to state 67

    scope  go to state 68


state 25

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  148 throw_stmt: THROW . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 69
    expression_brace  go to state 33
    primary           go to state 34


state 26

    0 $accept: compilation_unit . $end

    $end  shift, and go to state 70


state 27

    1 compilation_unit: program .

    $default  reduce using rule 1 (compilation_unit)


state 28

    5 program: namespace_decl .

    $default  reduce using rule 5 (program)


state 29

    4 program: import .

    $default  reduce using rule 4 (program)


state 30

    6 program: function_define .

    $default  reduce using rule 6 (program)


state 31

  134 variable_decl_stmt: typename_T . IDENT SEMI
  135 variable_init_stmt: typename_T . IDENT ASSIGN expression stmt_term

    IDENT  shift, and go to state 71


state 32

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  123 stmt: expression . stmt_term
  157 stmt_term: . SEMI
  158          | . '\n'

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    SEMI           shift, and go to state 63
    '\n'           shift, and go to state 64

    stmt_term  go to state 101


state 33

  112 expression: expression_brace .

    $default  reduce using rule 112 (expression)


state 34

   78 expression: primary .

    $default  reduce using rule 78 (expression)


state 35

    3 program: stmt_list .  [$end]
   77 typename_T: . IDENT typename_group
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  122 stmt_list: stmt_list . stmt
  123 stmt: . expression stmt_term
  124     | . variable_decl_stmt
  125     | . variable_init_stmt
  126     | . inferenced_type_init_stmt
  127     | . if_stmt
  128     | . while_stmt
  129     | . break_stmt
  130     | . continue_stmt
  131     | . return_stmt
  132     | . throw_stmt
  133     | . try_stmt
  134 variable_decl_stmt: . typename_T IDENT SEMI
  135 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  136 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  137 if_stmt: . IF LRB expression RRB scope
  138        | . IF LRB expression RRB scope ELSE scope
  139        | . IF LRB expression RRB scope elif_list
  140        | . IF LRB expression RRB scope elif_list ELSE scope
  144 while_stmt: . WHILE LRB expression RRB scope_optional
  145 break_stmt: . BREAK stmt_term
  146 continue_stmt: . CONTINUE stmt_term
  147 return_stmt: . RETURN expression stmt_term
  148 throw_stmt: . THROW expression stmt_term
  149 try_stmt: . TRY scope catch_stmt_list

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16
    RETURN          shift, and go to state 19
    IF              shift, and go to state 20
    WHILE           shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    TRY             shift, and go to state 24
    THROW           shift, and go to state 25

    $default  reduce using rule 3 (program)

    typename_T                 go to state 31
    expression                 go to state 32
    expression_brace           go to state 33
    primary                    go to state 34
    stmt                       go to state 102
    variable_decl_stmt         go to state 37
    variable_init_stmt         go to state 38
    inferenced_type_init_stmt  go to state 39
    if_stmt                    go to state 40
    while_stmt                 go to state 41
    break_stmt                 go to state 42
    continue_stmt              go to state 43
    return_stmt                go to state 44
    throw_stmt                 go to state 45
    try_stmt                   go to state 46


state 36

  121 stmt_list: stmt .

    $default  reduce using rule 121 (stmt_list)


state 37

  124 stmt: variable_decl_stmt .

    $default  reduce using rule 124 (stmt)


state 38

  125 stmt: variable_init_stmt .

    $default  reduce using rule 125 (stmt)


state 39

  126 stmt: inferenced_type_init_stmt .

    $default  reduce using rule 126 (stmt)


state 40

  127 stmt: if_stmt .

    $default  reduce using rule 127 (stmt)


state 41

  128 stmt: while_stmt .

    $default  reduce using rule 128 (stmt)


state 42

  129 stmt: break_stmt .

    $default  reduce using rule 129 (stmt)


state 43

  130 stmt: continue_stmt .

    $default  reduce using rule 130 (stmt)


state 44

  131 stmt: return_stmt .

    $default  reduce using rule 131 (stmt)


state 45

  132 stmt: throw_stmt .

    $default  reduce using rule 132 (stmt)


state 46

  133 stmt: try_stmt .

    $default  reduce using rule 133 (stmt)


state 47

    2 compilation_unit: error '\n' .

    $default  reduce using rule 2 (compilation_unit)


state 48

   74 typename_group: '<' . typename_list '>'
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_list  go to state 103
    typename_T     go to state 104


state 49

   77 typename_T: IDENT typename_group .

    $default  reduce using rule 77 (typename_T)


state 50

   79 expression: ADD expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   81           | expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token ADD resolved as reduce (ADD < POSITIVE).
    Conflict between rule 79 and token SUB resolved as reduce (SUB < POSITIVE).
    Conflict between rule 79 and token MUL resolved as reduce (MUL < POSITIVE).
    Conflict between rule 79 and token DIV resolved as reduce (DIV < POSITIVE).
    Conflict between rule 79 and token MOD resolved as reduce (MOD < POSITIVE).
    Conflict between rule 79 and token LSHIFT resolved as reduce (LSHIFT < POSITIVE).
    Conflict between rule 79 and token RSHIFT resolved as reduce (RSHIFT < POSITIVE).
    Conflict between rule 79 and token EQUAL resolved as reduce (EQUAL < POSITIVE).
    Conflict between rule 79 and token NOTEQUAL resolved as reduce (NOTEQUAL < POSITIVE).
    Conflict between rule 79 and token GT resolved as reduce (GT < POSITIVE).
    Conflict between rule 79 and token GE resolved as reduce (GE < POSITIVE).
    Conflict between rule 79 and token LT resolved as reduce (LT < POSITIVE).
    Conflict between rule 79 and token LE resolved as reduce (LE < POSITIVE).
    Conflict between rule 79 and token BIT_AND resolved as reduce (BIT_AND < POSITIVE).
    Conflict between rule 79 and token LOGIC_AND resolved as reduce (LOGIC_AND < POSITIVE).
    Conflict between rule 79 and token BIT_OR resolved as reduce (BIT_OR < POSITIVE).
    Conflict between rule 79 and token LOGIC_OR resolved as reduce (LOGIC_OR < POSITIVE).
    Conflict between rule 79 and token ASSIGN resolved as shift (POSITIVE < ASSIGN).
    Conflict between rule 79 and token ADD_ASSIGN resolved as shift (POSITIVE < ADD_ASSIGN).
    Conflict between rule 79 and token SUB_ASSIGN resolved as shift (POSITIVE < SUB_ASSIGN).
    Conflict between rule 79 and token MUL_ASSIGN resolved as shift (POSITIVE < MUL_ASSIGN).
    Conflict between rule 79 and token DIV_ASSIGN resolved as shift (POSITIVE < DIV_ASSIGN).
    Conflict between rule 79 and token MOD_ASSIGN resolved as shift (POSITIVE < MOD_ASSIGN).
    Conflict between rule 79 and token AND_ASSIGN resolved as shift (POSITIVE < AND_ASSIGN).
    Conflict between rule 79 and token OR_ASSIGN resolved as shift (POSITIVE < OR_ASSIGN).
    Conflict between rule 79 and token LSHIFT_ASSIGN resolved as shift (POSITIVE < LSHIFT_ASSIGN).
    Conflict between rule 79 and token RSHIFT_ASSIGN resolved as shift (POSITIVE < RSHIFT_ASSIGN).
    Conflict between rule 79 and token EXC_OR_ASSIGN resolved as shift (POSITIVE < EXC_OR_ASSIGN).
    Conflict between rule 79 and token EXC_OR resolved as reduce (EXC_OR < POSITIVE).


state 51

   80 expression: SUB expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   81           | expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token ADD resolved as reduce (ADD < NEGATIVE).
    Conflict between rule 80 and token SUB resolved as reduce (SUB < NEGATIVE).
    Conflict between rule 80 and token MUL resolved as reduce (MUL < NEGATIVE).
    Conflict between rule 80 and token DIV resolved as reduce (DIV < NEGATIVE).
    Conflict between rule 80 and token MOD resolved as reduce (MOD < NEGATIVE).
    Conflict between rule 80 and token LSHIFT resolved as reduce (LSHIFT < NEGATIVE).
    Conflict between rule 80 and token RSHIFT resolved as reduce (RSHIFT < NEGATIVE).
    Conflict between rule 80 and token EQUAL resolved as reduce (EQUAL < NEGATIVE).
    Conflict between rule 80 and token NOTEQUAL resolved as reduce (NOTEQUAL < NEGATIVE).
    Conflict between rule 80 and token GT resolved as reduce (GT < NEGATIVE).
    Conflict between rule 80 and token GE resolved as reduce (GE < NEGATIVE).
    Conflict between rule 80 and token LT resolved as reduce (LT < NEGATIVE).
    Conflict between rule 80 and token LE resolved as reduce (LE < NEGATIVE).
    Conflict between rule 80 and token BIT_AND resolved as reduce (BIT_AND < NEGATIVE).
    Conflict between rule 80 and token LOGIC_AND resolved as reduce (LOGIC_AND < NEGATIVE).
    Conflict between rule 80 and token BIT_OR resolved as reduce (BIT_OR < NEGATIVE).
    Conflict between rule 80 and token LOGIC_OR resolved as reduce (LOGIC_OR < NEGATIVE).
    Conflict between rule 80 and token ASSIGN resolved as shift (NEGATIVE < ASSIGN).
    Conflict between rule 80 and token ADD_ASSIGN resolved as shift (NEGATIVE < ADD_ASSIGN).
    Conflict between rule 80 and token SUB_ASSIGN resolved as shift (NEGATIVE < SUB_ASSIGN).
    Conflict between rule 80 and token MUL_ASSIGN resolved as shift (NEGATIVE < MUL_ASSIGN).
    Conflict between rule 80 and token DIV_ASSIGN resolved as shift (NEGATIVE < DIV_ASSIGN).
    Conflict between rule 80 and token MOD_ASSIGN resolved as shift (NEGATIVE < MOD_ASSIGN).
    Conflict between rule 80 and token AND_ASSIGN resolved as shift (NEGATIVE < AND_ASSIGN).
    Conflict between rule 80 and token OR_ASSIGN resolved as shift (NEGATIVE < OR_ASSIGN).
    Conflict between rule 80 and token LSHIFT_ASSIGN resolved as shift (NEGATIVE < LSHIFT_ASSIGN).
    Conflict between rule 80 and token RSHIFT_ASSIGN resolved as shift (NEGATIVE < RSHIFT_ASSIGN).
    Conflict between rule 80 and token EXC_OR_ASSIGN resolved as shift (NEGATIVE < EXC_OR_ASSIGN).
    Conflict between rule 80 and token EXC_OR resolved as reduce (EXC_OR < NEGATIVE).


state 52

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  111           | NOT expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 111 (expression)

    Conflict between rule 111 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 111 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 111 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 111 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 111 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 111 and token LSHIFT resolved as reduce (LSHIFT < NOT).
    Conflict between rule 111 and token RSHIFT resolved as reduce (RSHIFT < NOT).
    Conflict between rule 111 and token EQUAL resolved as reduce (EQUAL < NOT).
    Conflict between rule 111 and token NOTEQUAL resolved as reduce (NOTEQUAL < NOT).
    Conflict between rule 111 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 111 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 111 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 111 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 111 and token BIT_AND resolved as reduce (BIT_AND < NOT).
    Conflict between rule 111 and token LOGIC_AND resolved as reduce (LOGIC_AND < NOT).
    Conflict between rule 111 and token BIT_OR resolved as reduce (BIT_OR < NOT).
    Conflict between rule 111 and token LOGIC_OR resolved as reduce (LOGIC_OR < NOT).
    Conflict between rule 111 and token ASSIGN resolved as shift (NOT < ASSIGN).
    Conflict between rule 111 and token ADD_ASSIGN resolved as shift (NOT < ADD_ASSIGN).
    Conflict between rule 111 and token SUB_ASSIGN resolved as shift (NOT < SUB_ASSIGN).
    Conflict between rule 111 and token MUL_ASSIGN resolved as shift (NOT < MUL_ASSIGN).
    Conflict between rule 111 and token DIV_ASSIGN resolved as shift (NOT < DIV_ASSIGN).
    Conflict between rule 111 and token MOD_ASSIGN resolved as shift (NOT < MOD_ASSIGN).
    Conflict between rule 111 and token AND_ASSIGN resolved as shift (NOT < AND_ASSIGN).
    Conflict between rule 111 and token OR_ASSIGN resolved as shift (NOT < OR_ASSIGN).
    Conflict between rule 111 and token LSHIFT_ASSIGN resolved as shift (NOT < LSHIFT_ASSIGN).
    Conflict between rule 111 and token RSHIFT_ASSIGN resolved as shift (NOT < RSHIFT_ASSIGN).
    Conflict between rule 111 and token EXC_OR_ASSIGN resolved as shift (NOT < EXC_OR_ASSIGN).
    Conflict between rule 111 and token EXC_OR resolved as reduce (EXC_OR < NOT).


state 53

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  110           | CHILDA expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 110 (expression)

    Conflict between rule 110 and token ADD resolved as reduce (ADD < CHILDA).
    Conflict between rule 110 and token SUB resolved as reduce (SUB < CHILDA).
    Conflict between rule 110 and token MUL resolved as reduce (MUL < CHILDA).
    Conflict between rule 110 and token DIV resolved as reduce (DIV < CHILDA).
    Conflict between rule 110 and token MOD resolved as reduce (MOD < CHILDA).
    Conflict between rule 110 and token LSHIFT resolved as reduce (LSHIFT < CHILDA).
    Conflict between rule 110 and token RSHIFT resolved as reduce (RSHIFT < CHILDA).
    Conflict between rule 110 and token EQUAL resolved as reduce (EQUAL < CHILDA).
    Conflict between rule 110 and token NOTEQUAL resolved as reduce (NOTEQUAL < CHILDA).
    Conflict between rule 110 and token GT resolved as reduce (GT < CHILDA).
    Conflict between rule 110 and token GE resolved as reduce (GE < CHILDA).
    Conflict between rule 110 and token LT resolved as reduce (LT < CHILDA).
    Conflict between rule 110 and token LE resolved as reduce (LE < CHILDA).
    Conflict between rule 110 and token BIT_AND resolved as reduce (BIT_AND < CHILDA).
    Conflict between rule 110 and token LOGIC_AND resolved as reduce (LOGIC_AND < CHILDA).
    Conflict between rule 110 and token BIT_OR resolved as reduce (BIT_OR < CHILDA).
    Conflict between rule 110 and token LOGIC_OR resolved as reduce (LOGIC_OR < CHILDA).
    Conflict between rule 110 and token ASSIGN resolved as shift (CHILDA < ASSIGN).
    Conflict between rule 110 and token ADD_ASSIGN resolved as shift (CHILDA < ADD_ASSIGN).
    Conflict between rule 110 and token SUB_ASSIGN resolved as shift (CHILDA < SUB_ASSIGN).
    Conflict between rule 110 and token MUL_ASSIGN resolved as shift (CHILDA < MUL_ASSIGN).
    Conflict between rule 110 and token DIV_ASSIGN resolved as shift (CHILDA < DIV_ASSIGN).
    Conflict between rule 110 and token MOD_ASSIGN resolved as shift (CHILDA < MOD_ASSIGN).
    Conflict between rule 110 and token AND_ASSIGN resolved as shift (CHILDA < AND_ASSIGN).
    Conflict between rule 110 and token OR_ASSIGN resolved as shift (CHILDA < OR_ASSIGN).
    Conflict between rule 110 and token LSHIFT_ASSIGN resolved as shift (CHILDA < LSHIFT_ASSIGN).
    Conflict between rule 110 and token RSHIFT_ASSIGN resolved as shift (CHILDA < RSHIFT_ASSIGN).
    Conflict between rule 110 and token EXC_OR_ASSIGN resolved as shift (CHILDA < EXC_OR_ASSIGN).
    Conflict between rule 110 and token EXC_OR resolved as reduce (EXC_OR < CHILDA).


state 54

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  113 expression_brace: LRB expression . RRB

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    RRB            shift, and go to state 105


state 55

   19 import: IMPORT STRING_LITERAL .

    $default  reduce using rule 19 (import)


state 56

  136 inferenced_type_init_stmt: VAR IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 106


state 57

   54 function_define: DEF IDENT . LRB parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 107


state 58

   17 namespace_path: IDENT .

    $default  reduce using rule 17 (namespace_path)


state 59

    7 namespace_decl: NAMESPACE namespace_path . namespace_body
    8 namespace_body: . LCB namespace_member_decl_optional RCB
   18 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 108
    LCB  shift, and go to state 109

    namespace_body  go to state 110


state 60

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  147 return_stmt: RETURN expression . stmt_term
  157 stmt_term: . SEMI
  158          | . '\n'

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    SEMI           shift, and go to state 63
    '\n'           shift, and go to state 64

    stmt_term  go to state 111


state 61

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  137 if_stmt: IF LRB . expression RRB scope
  138        | IF LRB . expression RRB scope ELSE scope
  139        | IF LRB . expression RRB scope elif_list
  140        | IF LRB . expression RRB scope elif_list ELSE scope

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 112
    expression_brace  go to state 33
    primary           go to state 34


state 62

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  144 while_stmt: WHILE LRB . expression RRB scope_optional

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 113
    expression_brace  go to state 33
    primary           go to state 34


state 63

  157 stmt_term: SEMI .

    $default  reduce using rule 157 (stmt_term)


state 64

  158 stmt_term: '\n' .

    $default  reduce using rule 158 (stmt_term)


state 65

  145 break_stmt: BREAK stmt_term .

    $default  reduce using rule 145 (break_stmt)


state 66

  146 continue_stmt: CONTINUE stmt_term .

    $default  reduce using rule 146 (continue_stmt)


state 67

   77 typename_T: . IDENT typename_group
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  121 stmt_list: . stmt
  122          | . stmt_list stmt
  123 stmt: . expression stmt_term
  124     | . variable_decl_stmt
  125     | . variable_init_stmt
  126     | . inferenced_type_init_stmt
  127     | . if_stmt
  128     | . while_stmt
  129     | . break_stmt
  130     | . continue_stmt
  131     | . return_stmt
  132     | . throw_stmt
  133     | . try_stmt
  134 variable_decl_stmt: . typename_T IDENT SEMI
  135 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  136 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  137 if_stmt: . IF LRB expression RRB scope
  138        | . IF LRB expression RRB scope ELSE scope
  139        | . IF LRB expression RRB scope elif_list
  140        | . IF LRB expression RRB scope elif_list ELSE scope
  144 while_stmt: . WHILE LRB expression RRB scope_optional
  145 break_stmt: . BREAK stmt_term
  146 continue_stmt: . CONTINUE stmt_term
  147 return_stmt: . RETURN expression stmt_term
  148 throw_stmt: . THROW expression stmt_term
  149 try_stmt: . TRY scope catch_stmt_list
  153 scope: LCB . stmt_list RCB
  154      | LCB . RCB

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    RCB             shift, and go to state 114
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16
    RETURN          shift, and go to state 19
    IF              shift, and go to state 20
    WHILE           shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    TRY             shift, and go to state 24
    THROW           shift, and go to state 25

    typename_T                 go to state 31
    expression                 go to state 32
    expression_brace           go to state 33
    primary                    go to state 34
    stmt_list                  go to state 115
    stmt                       go to state 36
    variable_decl_stmt         go to state 37
    variable_init_stmt         go to state 38
    inferenced_type_init_stmt  go to state 39
    if_stmt                    go to state 40
    while_stmt                 go to state 41
    break_stmt                 go to state 42
    continue_stmt              go to state 43
    return_stmt                go to state 44
    throw_stmt                 go to state 45
    try_stmt                   go to state 46


state 68

  149 try_stmt: TRY scope . catch_stmt_list
  150 catch_stmt_list: . catch_stmt
  151                | . catch_stmt_list catch_stmt
  152 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 116

    catch_stmt_list  go to state 117
    catch_stmt       go to state 118


state 69

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  148 throw_stmt: THROW expression . stmt_term
  157 stmt_term: . SEMI
  158          | . '\n'

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    SEMI           shift, and go to state 63
    '\n'           shift, and go to state 64

    stmt_term  go to state 119


state 70

    0 $accept: compilation_unit $end .

    $default  accept


state 71

  134 variable_decl_stmt: typename_T IDENT . SEMI
  135 variable_init_stmt: typename_T IDENT . ASSIGN expression stmt_term

    ASSIGN  shift, and go to state 120
    SEMI    shift, and go to state 121


state 72

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   81           | expression ADD . expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 122
    expression_brace  go to state 33
    primary           go to state 34


state 73

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   82           | expression SUB . expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 123
    expression_brace  go to state 33
    primary           go to state 34


state 74

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   83           | expression MUL . expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 124
    expression_brace  go to state 33
    primary           go to state 34


state 75

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   84           | expression DIV . expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 125
    expression_brace  go to state 33
    primary           go to state 34


state 76

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   85           | expression MOD . expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 126
    expression_brace  go to state 33
    primary           go to state 34


state 77

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  108           | expression LSHIFT . expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 127
    expression_brace  go to state 33
    primary           go to state 34


state 78

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  109           | expression RSHIFT . expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 128
    expression_brace  go to state 33
    primary           go to state 34


state 79

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   87           | expression EQUAL . expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 129
    expression_brace  go to state 33
    primary           go to state 34


state 80

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   88           | expression NOTEQUAL . expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 130
    expression_brace  go to state 33
    primary           go to state 34


state 81

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  104           | expression GT . expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 131
    expression_brace  go to state 33
    primary           go to state 34


state 82

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  105           | expression GE . expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 132
    expression_brace  go to state 33
    primary           go to state 34


state 83

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  106           | expression LT . expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 133
    expression_brace  go to state 33
    primary           go to state 34


state 84

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  107           | expression LE . expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 134
    expression_brace  go to state 33
    primary           go to state 34


state 85

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   89           | expression BIT_AND . expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 135
    expression_brace  go to state 33
    primary           go to state 34


state 86

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   92           | expression LOGIC_AND . expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 136
    expression_brace  go to state 33
    primary           go to state 34


state 87

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   86           | expression BIT_OR . expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 137
    expression_brace  go to state 33
    primary           go to state 34


state 88

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   91           | expression LOGIC_OR . expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 138
    expression_brace  go to state 33
    primary           go to state 34


state 89

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   93           | expression ASSIGN . expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 139
    expression_brace  go to state 33
    primary           go to state 34


state 90

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   94           | expression ADD_ASSIGN . expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 140
    expression_brace  go to state 33
    primary           go to state 34


state 91

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   95           | expression SUB_ASSIGN . expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 141
    expression_brace  go to state 33
    primary           go to state 34


state 92

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   96           | expression MUL_ASSIGN . expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 142
    expression_brace  go to state 33
    primary           go to state 34


state 93

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   97           | expression DIV_ASSIGN . expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 143
    expression_brace  go to state 33
    primary           go to state 34


state 94

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   98           | expression MOD_ASSIGN . expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 144
    expression_brace  go to state 33
    primary           go to state 34


state 95

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
   99           | expression AND_ASSIGN . expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 145
    expression_brace  go to state 33
    primary           go to state 34


state 96

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  100           | expression OR_ASSIGN . expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 146
    expression_brace  go to state 33
    primary           go to state 34


state 97

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  102           | expression LSHIFT_ASSIGN . expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 147
    expression_brace  go to state 33
    primary           go to state 34


state 98

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  103           | expression RSHIFT_ASSIGN . expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 148
    expression_brace  go to state 33
    primary           go to state 34


state 99

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  101           | expression EXC_OR_ASSIGN . expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 149
    expression_brace  go to state 33
    primary           go to state 34


state 100

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   90           | expression EXC_OR . expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 150
    expression_brace  go to state 33
    primary           go to state 34


state 101

  123 stmt: expression stmt_term .

    $default  reduce using rule 123 (stmt)


state 102

  122 stmt_list: stmt_list stmt .

    $default  reduce using rule 122 (stmt_list)


state 103

   74 typename_group: '<' typename_list . '>'
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 151
    '>'    shift, and go to state 152


state 104

   75 typename_list: typename_T .

    $default  reduce using rule 75 (typename_list)


state 105

  113 expression_brace: LRB expression RRB .

    $default  reduce using rule 113 (expression_brace)


state 106

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  136 inferenced_type_init_stmt: VAR IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 153
    expression_brace  go to state 33
    primary           go to state 34


state 107

   54 function_define: DEF IDENT LRB . parameter_list RRB ARROW typename_T scope_optional
   55                | DEF IDENT LRB . RRB ARROW typename_T scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 154

    parameter_list  go to state 155
    typename_T      go to state 156


state 108

   18 namespace_path: namespace_path DOT . IDENT

    IDENT  shift, and go to state 157


state 109

    8 namespace_body: LCB . namespace_member_decl_optional RCB
    9 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   10                      | . class_decl
   11                      | . interface_decl
   12                      | . enum_decl
   13 namespace_member_decl_list: . namespace_member_decl
   14                           | . namespace_member_decl_list namespace_member_decl
   15 namespace_member_decl_optional: .  [RCB]
   16                               | . namespace_member_decl_list
   30 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   32 enum_decl: . ENUM IDENT LCB ident_list RCB
   33          | . ENUM IDENT LCB ident_list COMMA RCB
   34 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 158
    CLASS      shift, and go to state 159
    ENUM       shift, and go to state 160
    NAMESPACE  shift, and go to state 161

    $default  reduce using rule 15 (namespace_member_decl_optional)

    namespace_member_decl           go to state 162
    namespace_member_decl_list      go to state 163
    namespace_member_decl_optional  go to state 164
    class_decl                      go to state 165
    enum_decl                       go to state 166
    interface_decl                  go to state 167


state 110

    7 namespace_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 7 (namespace_decl)


state 111

  147 return_stmt: RETURN expression stmt_term .

    $default  reduce using rule 147 (return_stmt)


state 112

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  137 if_stmt: IF LRB expression . RRB scope
  138        | IF LRB expression . RRB scope ELSE scope
  139        | IF LRB expression . RRB scope elif_list
  140        | IF LRB expression . RRB scope elif_list ELSE scope

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    RRB            shift, and go to state 168


state 113

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  144 while_stmt: WHILE LRB expression . RRB scope_optional

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    RRB            shift, and go to state 169


state 114

  154 scope: LCB RCB .

    $default  reduce using rule 154 (scope)


state 115

   77 typename_T: . IDENT typename_group
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  122 stmt_list: stmt_list . stmt
  123 stmt: . expression stmt_term
  124     | . variable_decl_stmt
  125     | . variable_init_stmt
  126     | . inferenced_type_init_stmt
  127     | . if_stmt
  128     | . while_stmt
  129     | . break_stmt
  130     | . continue_stmt
  131     | . return_stmt
  132     | . throw_stmt
  133     | . try_stmt
  134 variable_decl_stmt: . typename_T IDENT SEMI
  135 variable_init_stmt: . typename_T IDENT ASSIGN expression stmt_term
  136 inferenced_type_init_stmt: . VAR IDENT ASSIGN expression stmt_term
  137 if_stmt: . IF LRB expression RRB scope
  138        | . IF LRB expression RRB scope ELSE scope
  139        | . IF LRB expression RRB scope elif_list
  140        | . IF LRB expression RRB scope elif_list ELSE scope
  144 while_stmt: . WHILE LRB expression RRB scope_optional
  145 break_stmt: . BREAK stmt_term
  146 continue_stmt: . CONTINUE stmt_term
  147 return_stmt: . RETURN expression stmt_term
  148 throw_stmt: . THROW expression stmt_term
  149 try_stmt: . TRY scope catch_stmt_list
  153 scope: LCB stmt_list . RCB

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    IDENT           shift, and go to state 6
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    RCB             shift, and go to state 170
    LRB             shift, and go to state 11
    VAR             shift, and go to state 13
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16
    RETURN          shift, and go to state 19
    IF              shift, and go to state 20
    WHILE           shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    TRY             shift, and go to state 24
    THROW           shift, and go to state 25

    typename_T                 go to state 31
    expression                 go to state 32
    expression_brace           go to state 33
    primary                    go to state 34
    stmt                       go to state 102
    variable_decl_stmt         go to state 37
    variable_init_stmt         go to state 38
    inferenced_type_init_stmt  go to state 39
    if_stmt                    go to state 40
    while_stmt                 go to state 41
    break_stmt                 go to state 42
    continue_stmt              go to state 43
    return_stmt                go to state 44
    throw_stmt                 go to state 45
    try_stmt                   go to state 46


state 116

  152 catch_stmt: CATCH . LRB typename_T IDENT RRB scope

    LRB  shift, and go to state 171


state 117

  149 try_stmt: TRY scope catch_stmt_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  151 catch_stmt_list: catch_stmt_list . catch_stmt
  152 catch_stmt: . CATCH LRB typename_T IDENT RRB scope

    CATCH  shift, and go to state 116

    $default  reduce using rule 149 (try_stmt)

    catch_stmt  go to state 172


state 118

  150 catch_stmt_list: catch_stmt .

    $default  reduce using rule 150 (catch_stmt_list)


state 119

  148 throw_stmt: THROW expression stmt_term .

    $default  reduce using rule 148 (throw_stmt)


state 120

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  135 variable_init_stmt: typename_T IDENT ASSIGN . expression stmt_term

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 173
    expression_brace  go to state 33
    primary           go to state 34


state 121

  134 variable_decl_stmt: typename_T IDENT SEMI .

    $default  reduce using rule 134 (variable_decl_stmt)


state 122

   81 expression: expression . ADD expression  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   81           | expression ADD expression .  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 81 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 81 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 81 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 81 and token MOD resolved as shift (ADD < MOD).
    Conflict between rule 81 and token LSHIFT resolved as reduce (LSHIFT < ADD).
    Conflict between rule 81 and token RSHIFT resolved as reduce (RSHIFT < ADD).
    Conflict between rule 81 and token EQUAL resolved as reduce (EQUAL < ADD).
    Conflict between rule 81 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD).
    Conflict between rule 81 and token GT resolved as reduce (GT < ADD).
    Conflict between rule 81 and token GE resolved as reduce (GE < ADD).
    Conflict between rule 81 and token LT resolved as reduce (LT < ADD).
    Conflict between rule 81 and token LE resolved as reduce (LE < ADD).
    Conflict between rule 81 and token BIT_AND resolved as reduce (BIT_AND < ADD).
    Conflict between rule 81 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD).
    Conflict between rule 81 and token BIT_OR resolved as reduce (BIT_OR < ADD).
    Conflict between rule 81 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD).
    Conflict between rule 81 and token ASSIGN resolved as shift (ADD < ASSIGN).
    Conflict between rule 81 and token ADD_ASSIGN resolved as shift (ADD < ADD_ASSIGN).
    Conflict between rule 81 and token SUB_ASSIGN resolved as shift (ADD < SUB_ASSIGN).
    Conflict between rule 81 and token MUL_ASSIGN resolved as shift (ADD < MUL_ASSIGN).
    Conflict between rule 81 and token DIV_ASSIGN resolved as shift (ADD < DIV_ASSIGN).
    Conflict between rule 81 and token MOD_ASSIGN resolved as shift (ADD < MOD_ASSIGN).
    Conflict between rule 81 and token AND_ASSIGN resolved as shift (ADD < AND_ASSIGN).
    Conflict between rule 81 and token OR_ASSIGN resolved as shift (ADD < OR_ASSIGN).
    Conflict between rule 81 and token LSHIFT_ASSIGN resolved as shift (ADD < LSHIFT_ASSIGN).
    Conflict between rule 81 and token RSHIFT_ASSIGN resolved as shift (ADD < RSHIFT_ASSIGN).
    Conflict between rule 81 and token EXC_OR_ASSIGN resolved as shift (ADD < EXC_OR_ASSIGN).
    Conflict between rule 81 and token EXC_OR resolved as reduce (EXC_OR < ADD).


state 123

   81 expression: expression . ADD expression
   82           | expression . SUB expression  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   82           | expression SUB expression .  [COMMA, ADD, SUB, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 82 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 82 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 82 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 82 and token MOD resolved as shift (SUB < MOD).
    Conflict between rule 82 and token LSHIFT resolved as reduce (LSHIFT < SUB).
    Conflict between rule 82 and token RSHIFT resolved as reduce (RSHIFT < SUB).
    Conflict between rule 82 and token EQUAL resolved as reduce (EQUAL < SUB).
    Conflict between rule 82 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB).
    Conflict between rule 82 and token GT resolved as reduce (GT < SUB).
    Conflict between rule 82 and token GE resolved as reduce (GE < SUB).
    Conflict between rule 82 and token LT resolved as reduce (LT < SUB).
    Conflict between rule 82 and token LE resolved as reduce (LE < SUB).
    Conflict between rule 82 and token BIT_AND resolved as reduce (BIT_AND < SUB).
    Conflict between rule 82 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB).
    Conflict between rule 82 and token BIT_OR resolved as reduce (BIT_OR < SUB).
    Conflict between rule 82 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB).
    Conflict between rule 82 and token ASSIGN resolved as shift (SUB < ASSIGN).
    Conflict between rule 82 and token ADD_ASSIGN resolved as shift (SUB < ADD_ASSIGN).
    Conflict between rule 82 and token SUB_ASSIGN resolved as shift (SUB < SUB_ASSIGN).
    Conflict between rule 82 and token MUL_ASSIGN resolved as shift (SUB < MUL_ASSIGN).
    Conflict between rule 82 and token DIV_ASSIGN resolved as shift (SUB < DIV_ASSIGN).
    Conflict between rule 82 and token MOD_ASSIGN resolved as shift (SUB < MOD_ASSIGN).
    Conflict between rule 82 and token AND_ASSIGN resolved as shift (SUB < AND_ASSIGN).
    Conflict between rule 82 and token OR_ASSIGN resolved as shift (SUB < OR_ASSIGN).
    Conflict between rule 82 and token LSHIFT_ASSIGN resolved as shift (SUB < LSHIFT_ASSIGN).
    Conflict between rule 82 and token RSHIFT_ASSIGN resolved as shift (SUB < RSHIFT_ASSIGN).
    Conflict between rule 82 and token EXC_OR_ASSIGN resolved as shift (SUB < EXC_OR_ASSIGN).
    Conflict between rule 82 and token EXC_OR resolved as reduce (EXC_OR < SUB).


state 124

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   83           | expression MUL expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 83 (expression)

    Conflict between rule 83 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 83 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 83 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 83 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 83 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 83 and token LSHIFT resolved as reduce (LSHIFT < MUL).
    Conflict between rule 83 and token RSHIFT resolved as reduce (RSHIFT < MUL).
    Conflict between rule 83 and token EQUAL resolved as reduce (EQUAL < MUL).
    Conflict between rule 83 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL).
    Conflict between rule 83 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 83 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 83 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 83 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 83 and token BIT_AND resolved as reduce (BIT_AND < MUL).
    Conflict between rule 83 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL).
    Conflict between rule 83 and token BIT_OR resolved as reduce (BIT_OR < MUL).
    Conflict between rule 83 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL).
    Conflict between rule 83 and token ASSIGN resolved as shift (MUL < ASSIGN).
    Conflict between rule 83 and token ADD_ASSIGN resolved as shift (MUL < ADD_ASSIGN).
    Conflict between rule 83 and token SUB_ASSIGN resolved as shift (MUL < SUB_ASSIGN).
    Conflict between rule 83 and token MUL_ASSIGN resolved as shift (MUL < MUL_ASSIGN).
    Conflict between rule 83 and token DIV_ASSIGN resolved as shift (MUL < DIV_ASSIGN).
    Conflict between rule 83 and token MOD_ASSIGN resolved as shift (MUL < MOD_ASSIGN).
    Conflict between rule 83 and token AND_ASSIGN resolved as shift (MUL < AND_ASSIGN).
    Conflict between rule 83 and token OR_ASSIGN resolved as shift (MUL < OR_ASSIGN).
    Conflict between rule 83 and token LSHIFT_ASSIGN resolved as shift (MUL < LSHIFT_ASSIGN).
    Conflict between rule 83 and token RSHIFT_ASSIGN resolved as shift (MUL < RSHIFT_ASSIGN).
    Conflict between rule 83 and token EXC_OR_ASSIGN resolved as shift (MUL < EXC_OR_ASSIGN).
    Conflict between rule 83 and token EXC_OR resolved as reduce (EXC_OR < MUL).


state 125

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   84           | expression DIV expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 84 (expression)

    Conflict between rule 84 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 84 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 84 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 84 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 84 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 84 and token LSHIFT resolved as reduce (LSHIFT < DIV).
    Conflict between rule 84 and token RSHIFT resolved as reduce (RSHIFT < DIV).
    Conflict between rule 84 and token EQUAL resolved as reduce (EQUAL < DIV).
    Conflict between rule 84 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV).
    Conflict between rule 84 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 84 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 84 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 84 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 84 and token BIT_AND resolved as reduce (BIT_AND < DIV).
    Conflict between rule 84 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV).
    Conflict between rule 84 and token BIT_OR resolved as reduce (BIT_OR < DIV).
    Conflict between rule 84 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV).
    Conflict between rule 84 and token ASSIGN resolved as shift (DIV < ASSIGN).
    Conflict between rule 84 and token ADD_ASSIGN resolved as shift (DIV < ADD_ASSIGN).
    Conflict between rule 84 and token SUB_ASSIGN resolved as shift (DIV < SUB_ASSIGN).
    Conflict between rule 84 and token MUL_ASSIGN resolved as shift (DIV < MUL_ASSIGN).
    Conflict between rule 84 and token DIV_ASSIGN resolved as shift (DIV < DIV_ASSIGN).
    Conflict between rule 84 and token MOD_ASSIGN resolved as shift (DIV < MOD_ASSIGN).
    Conflict between rule 84 and token AND_ASSIGN resolved as shift (DIV < AND_ASSIGN).
    Conflict between rule 84 and token OR_ASSIGN resolved as shift (DIV < OR_ASSIGN).
    Conflict between rule 84 and token LSHIFT_ASSIGN resolved as shift (DIV < LSHIFT_ASSIGN).
    Conflict between rule 84 and token RSHIFT_ASSIGN resolved as shift (DIV < RSHIFT_ASSIGN).
    Conflict between rule 84 and token EXC_OR_ASSIGN resolved as shift (DIV < EXC_OR_ASSIGN).
    Conflict between rule 84 and token EXC_OR resolved as reduce (EXC_OR < DIV).


state 126

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   85           | expression MOD expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 85 (expression)

    Conflict between rule 85 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 85 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 85 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 85 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 85 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 85 and token LSHIFT resolved as reduce (LSHIFT < MOD).
    Conflict between rule 85 and token RSHIFT resolved as reduce (RSHIFT < MOD).
    Conflict between rule 85 and token EQUAL resolved as reduce (EQUAL < MOD).
    Conflict between rule 85 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD).
    Conflict between rule 85 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 85 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 85 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 85 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 85 and token BIT_AND resolved as reduce (BIT_AND < MOD).
    Conflict between rule 85 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD).
    Conflict between rule 85 and token BIT_OR resolved as reduce (BIT_OR < MOD).
    Conflict between rule 85 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD).
    Conflict between rule 85 and token ASSIGN resolved as shift (MOD < ASSIGN).
    Conflict between rule 85 and token ADD_ASSIGN resolved as shift (MOD < ADD_ASSIGN).
    Conflict between rule 85 and token SUB_ASSIGN resolved as shift (MOD < SUB_ASSIGN).
    Conflict between rule 85 and token MUL_ASSIGN resolved as shift (MOD < MUL_ASSIGN).
    Conflict between rule 85 and token DIV_ASSIGN resolved as shift (MOD < DIV_ASSIGN).
    Conflict between rule 85 and token MOD_ASSIGN resolved as shift (MOD < MOD_ASSIGN).
    Conflict between rule 85 and token AND_ASSIGN resolved as shift (MOD < AND_ASSIGN).
    Conflict between rule 85 and token OR_ASSIGN resolved as shift (MOD < OR_ASSIGN).
    Conflict between rule 85 and token LSHIFT_ASSIGN resolved as shift (MOD < LSHIFT_ASSIGN).
    Conflict between rule 85 and token RSHIFT_ASSIGN resolved as shift (MOD < RSHIFT_ASSIGN).
    Conflict between rule 85 and token EXC_OR_ASSIGN resolved as shift (MOD < EXC_OR_ASSIGN).
    Conflict between rule 85 and token EXC_OR resolved as reduce (EXC_OR < MOD).


state 127

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  108           | expression LSHIFT expression .  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 108 (expression)

    Conflict between rule 108 and token ADD resolved as shift (LSHIFT < ADD).
    Conflict between rule 108 and token SUB resolved as shift (LSHIFT < SUB).
    Conflict between rule 108 and token MUL resolved as shift (LSHIFT < MUL).
    Conflict between rule 108 and token DIV resolved as shift (LSHIFT < DIV).
    Conflict between rule 108 and token MOD resolved as shift (LSHIFT < MOD).
    Conflict between rule 108 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 108 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 108 and token EQUAL resolved as reduce (EQUAL < LSHIFT).
    Conflict between rule 108 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT).
    Conflict between rule 108 and token GT resolved as reduce (GT < LSHIFT).
    Conflict between rule 108 and token GE resolved as reduce (GE < LSHIFT).
    Conflict between rule 108 and token LT resolved as reduce (LT < LSHIFT).
    Conflict between rule 108 and token LE resolved as reduce (LE < LSHIFT).
    Conflict between rule 108 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT).
    Conflict between rule 108 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT).
    Conflict between rule 108 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT).
    Conflict between rule 108 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT).
    Conflict between rule 108 and token ASSIGN resolved as shift (LSHIFT < ASSIGN).
    Conflict between rule 108 and token ADD_ASSIGN resolved as shift (LSHIFT < ADD_ASSIGN).
    Conflict between rule 108 and token SUB_ASSIGN resolved as shift (LSHIFT < SUB_ASSIGN).
    Conflict between rule 108 and token MUL_ASSIGN resolved as shift (LSHIFT < MUL_ASSIGN).
    Conflict between rule 108 and token DIV_ASSIGN resolved as shift (LSHIFT < DIV_ASSIGN).
    Conflict between rule 108 and token MOD_ASSIGN resolved as shift (LSHIFT < MOD_ASSIGN).
    Conflict between rule 108 and token AND_ASSIGN resolved as shift (LSHIFT < AND_ASSIGN).
    Conflict between rule 108 and token OR_ASSIGN resolved as shift (LSHIFT < OR_ASSIGN).
    Conflict between rule 108 and token LSHIFT_ASSIGN resolved as shift (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 108 and token RSHIFT_ASSIGN resolved as shift (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 108 and token EXC_OR_ASSIGN resolved as shift (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 108 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT).


state 128

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  109           | expression RSHIFT expression .  [COMMA, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 109 (expression)

    Conflict between rule 109 and token ADD resolved as shift (RSHIFT < ADD).
    Conflict between rule 109 and token SUB resolved as shift (RSHIFT < SUB).
    Conflict between rule 109 and token MUL resolved as shift (RSHIFT < MUL).
    Conflict between rule 109 and token DIV resolved as shift (RSHIFT < DIV).
    Conflict between rule 109 and token MOD resolved as shift (RSHIFT < MOD).
    Conflict between rule 109 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 109 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 109 and token EQUAL resolved as reduce (EQUAL < RSHIFT).
    Conflict between rule 109 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT).
    Conflict between rule 109 and token GT resolved as reduce (GT < RSHIFT).
    Conflict between rule 109 and token GE resolved as reduce (GE < RSHIFT).
    Conflict between rule 109 and token LT resolved as reduce (LT < RSHIFT).
    Conflict between rule 109 and token LE resolved as reduce (LE < RSHIFT).
    Conflict between rule 109 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT).
    Conflict between rule 109 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT).
    Conflict between rule 109 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT).
    Conflict between rule 109 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT).
    Conflict between rule 109 and token ASSIGN resolved as shift (RSHIFT < ASSIGN).
    Conflict between rule 109 and token ADD_ASSIGN resolved as shift (RSHIFT < ADD_ASSIGN).
    Conflict between rule 109 and token SUB_ASSIGN resolved as shift (RSHIFT < SUB_ASSIGN).
    Conflict between rule 109 and token MUL_ASSIGN resolved as shift (RSHIFT < MUL_ASSIGN).
    Conflict between rule 109 and token DIV_ASSIGN resolved as shift (RSHIFT < DIV_ASSIGN).
    Conflict between rule 109 and token MOD_ASSIGN resolved as shift (RSHIFT < MOD_ASSIGN).
    Conflict between rule 109 and token AND_ASSIGN resolved as shift (RSHIFT < AND_ASSIGN).
    Conflict between rule 109 and token OR_ASSIGN resolved as shift (RSHIFT < OR_ASSIGN).
    Conflict between rule 109 and token LSHIFT_ASSIGN resolved as shift (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 109 and token RSHIFT_ASSIGN resolved as shift (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 109 and token EXC_OR_ASSIGN resolved as shift (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 109 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT).


state 129

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression  [COMMA, EQUAL, NOTEQUAL, RRB, SEMI, '\n']
   87           | expression EQUAL expression .  [COMMA, EQUAL, NOTEQUAL, RRB, SEMI, '\n']
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 87 (expression)

    Conflict between rule 87 and token ADD resolved as shift (EQUAL < ADD).
    Conflict between rule 87 and token SUB resolved as shift (EQUAL < SUB).
    Conflict between rule 87 and token MUL resolved as shift (EQUAL < MUL).
    Conflict between rule 87 and token DIV resolved as shift (EQUAL < DIV).
    Conflict between rule 87 and token MOD resolved as shift (EQUAL < MOD).
    Conflict between rule 87 and token LSHIFT resolved as shift (EQUAL < LSHIFT).
    Conflict between rule 87 and token RSHIFT resolved as shift (EQUAL < RSHIFT).
    Conflict between rule 87 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 87 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 87 and token GT resolved as shift (EQUAL < GT).
    Conflict between rule 87 and token GE resolved as shift (EQUAL < GE).
    Conflict between rule 87 and token LT resolved as shift (EQUAL < LT).
    Conflict between rule 87 and token LE resolved as shift (EQUAL < LE).
    Conflict between rule 87 and token BIT_AND resolved as shift (EQUAL < BIT_AND).
    Conflict between rule 87 and token LOGIC_AND resolved as shift (EQUAL < LOGIC_AND).
    Conflict between rule 87 and token BIT_OR resolved as shift (EQUAL < BIT_OR).
    Conflict between rule 87 and token LOGIC_OR resolved as shift (EQUAL < LOGIC_OR).
    Conflict between rule 87 and token ASSIGN resolved as shift (EQUAL < ASSIGN).
    Conflict between rule 87 and token ADD_ASSIGN resolved as shift (EQUAL < ADD_ASSIGN).
    Conflict between rule 87 and token SUB_ASSIGN resolved as shift (EQUAL < SUB_ASSIGN).
    Conflict between rule 87 and token MUL_ASSIGN resolved as shift (EQUAL < MUL_ASSIGN).
    Conflict between rule 87 and token DIV_ASSIGN resolved as shift (EQUAL < DIV_ASSIGN).
    Conflict between rule 87 and token MOD_ASSIGN resolved as shift (EQUAL < MOD_ASSIGN).
    Conflict between rule 87 and token AND_ASSIGN resolved as shift (EQUAL < AND_ASSIGN).
    Conflict between rule 87 and token OR_ASSIGN resolved as shift (EQUAL < OR_ASSIGN).
    Conflict between rule 87 and token LSHIFT_ASSIGN resolved as shift (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 87 and token RSHIFT_ASSIGN resolved as shift (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 87 and token EXC_OR_ASSIGN resolved as shift (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 87 and token EXC_OR resolved as shift (EQUAL < EXC_OR).


state 130

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression  [COMMA, EQUAL, NOTEQUAL, RRB, SEMI, '\n']
   88           | expression NOTEQUAL expression .  [COMMA, EQUAL, NOTEQUAL, RRB, SEMI, '\n']
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 88 (expression)

    Conflict between rule 88 and token ADD resolved as shift (NOTEQUAL < ADD).
    Conflict between rule 88 and token SUB resolved as shift (NOTEQUAL < SUB).
    Conflict between rule 88 and token MUL resolved as shift (NOTEQUAL < MUL).
    Conflict between rule 88 and token DIV resolved as shift (NOTEQUAL < DIV).
    Conflict between rule 88 and token MOD resolved as shift (NOTEQUAL < MOD).
    Conflict between rule 88 and token LSHIFT resolved as shift (NOTEQUAL < LSHIFT).
    Conflict between rule 88 and token RSHIFT resolved as shift (NOTEQUAL < RSHIFT).
    Conflict between rule 88 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 88 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 88 and token GT resolved as shift (NOTEQUAL < GT).
    Conflict between rule 88 and token GE resolved as shift (NOTEQUAL < GE).
    Conflict between rule 88 and token LT resolved as shift (NOTEQUAL < LT).
    Conflict between rule 88 and token LE resolved as shift (NOTEQUAL < LE).
    Conflict between rule 88 and token BIT_AND resolved as shift (NOTEQUAL < BIT_AND).
    Conflict between rule 88 and token LOGIC_AND resolved as shift (NOTEQUAL < LOGIC_AND).
    Conflict between rule 88 and token BIT_OR resolved as shift (NOTEQUAL < BIT_OR).
    Conflict between rule 88 and token LOGIC_OR resolved as shift (NOTEQUAL < LOGIC_OR).
    Conflict between rule 88 and token ASSIGN resolved as shift (NOTEQUAL < ASSIGN).
    Conflict between rule 88 and token ADD_ASSIGN resolved as shift (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 88 and token SUB_ASSIGN resolved as shift (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 88 and token MUL_ASSIGN resolved as shift (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 88 and token DIV_ASSIGN resolved as shift (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 88 and token MOD_ASSIGN resolved as shift (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 88 and token AND_ASSIGN resolved as shift (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 88 and token OR_ASSIGN resolved as shift (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 88 and token LSHIFT_ASSIGN resolved as shift (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 88 and token RSHIFT_ASSIGN resolved as shift (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 88 and token EXC_OR_ASSIGN resolved as shift (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 88 and token EXC_OR resolved as shift (NOTEQUAL < EXC_OR).


state 131

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RRB, SEMI, '\n']
  104           | expression GT expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RRB, SEMI, '\n']
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 104 (expression)

    Conflict between rule 104 and token ADD resolved as shift (GT < ADD).
    Conflict between rule 104 and token SUB resolved as shift (GT < SUB).
    Conflict between rule 104 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 104 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 104 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 104 and token LSHIFT resolved as shift (GT < LSHIFT).
    Conflict between rule 104 and token RSHIFT resolved as shift (GT < RSHIFT).
    Conflict between rule 104 and token EQUAL resolved as reduce (EQUAL < GT).
    Conflict between rule 104 and token NOTEQUAL resolved as reduce (NOTEQUAL < GT).
    Conflict between rule 104 and token GT resolved as reduce (%left GT).
    Conflict between rule 104 and token GE resolved as reduce (%left GE).
    Conflict between rule 104 and token LT resolved as reduce (%left LT).
    Conflict between rule 104 and token LE resolved as reduce (%left LE).
    Conflict between rule 104 and token BIT_AND resolved as shift (GT < BIT_AND).
    Conflict between rule 104 and token LOGIC_AND resolved as shift (GT < LOGIC_AND).
    Conflict between rule 104 and token BIT_OR resolved as shift (GT < BIT_OR).
    Conflict between rule 104 and token LOGIC_OR resolved as shift (GT < LOGIC_OR).
    Conflict between rule 104 and token ASSIGN resolved as shift (GT < ASSIGN).
    Conflict between rule 104 and token ADD_ASSIGN resolved as shift (GT < ADD_ASSIGN).
    Conflict between rule 104 and token SUB_ASSIGN resolved as shift (GT < SUB_ASSIGN).
    Conflict between rule 104 and token MUL_ASSIGN resolved as shift (GT < MUL_ASSIGN).
    Conflict between rule 104 and token DIV_ASSIGN resolved as shift (GT < DIV_ASSIGN).
    Conflict between rule 104 and token MOD_ASSIGN resolved as shift (GT < MOD_ASSIGN).
    Conflict between rule 104 and token AND_ASSIGN resolved as shift (GT < AND_ASSIGN).
    Conflict between rule 104 and token OR_ASSIGN resolved as shift (GT < OR_ASSIGN).
    Conflict between rule 104 and token LSHIFT_ASSIGN resolved as shift (GT < LSHIFT_ASSIGN).
    Conflict between rule 104 and token RSHIFT_ASSIGN resolved as shift (GT < RSHIFT_ASSIGN).
    Conflict between rule 104 and token EXC_OR_ASSIGN resolved as shift (GT < EXC_OR_ASSIGN).
    Conflict between rule 104 and token EXC_OR resolved as shift (GT < EXC_OR).


state 132

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RRB, SEMI, '\n']
  105           | expression GE expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RRB, SEMI, '\n']
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 105 (expression)

    Conflict between rule 105 and token ADD resolved as shift (GE < ADD).
    Conflict between rule 105 and token SUB resolved as shift (GE < SUB).
    Conflict between rule 105 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 105 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 105 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 105 and token LSHIFT resolved as shift (GE < LSHIFT).
    Conflict between rule 105 and token RSHIFT resolved as shift (GE < RSHIFT).
    Conflict between rule 105 and token EQUAL resolved as reduce (EQUAL < GE).
    Conflict between rule 105 and token NOTEQUAL resolved as reduce (NOTEQUAL < GE).
    Conflict between rule 105 and token GT resolved as reduce (%left GT).
    Conflict between rule 105 and token GE resolved as reduce (%left GE).
    Conflict between rule 105 and token LT resolved as reduce (%left LT).
    Conflict between rule 105 and token LE resolved as reduce (%left LE).
    Conflict between rule 105 and token BIT_AND resolved as shift (GE < BIT_AND).
    Conflict between rule 105 and token LOGIC_AND resolved as shift (GE < LOGIC_AND).
    Conflict between rule 105 and token BIT_OR resolved as shift (GE < BIT_OR).
    Conflict between rule 105 and token LOGIC_OR resolved as shift (GE < LOGIC_OR).
    Conflict between rule 105 and token ASSIGN resolved as shift (GE < ASSIGN).
    Conflict between rule 105 and token ADD_ASSIGN resolved as shift (GE < ADD_ASSIGN).
    Conflict between rule 105 and token SUB_ASSIGN resolved as shift (GE < SUB_ASSIGN).
    Conflict between rule 105 and token MUL_ASSIGN resolved as shift (GE < MUL_ASSIGN).
    Conflict between rule 105 and token DIV_ASSIGN resolved as shift (GE < DIV_ASSIGN).
    Conflict between rule 105 and token MOD_ASSIGN resolved as shift (GE < MOD_ASSIGN).
    Conflict between rule 105 and token AND_ASSIGN resolved as shift (GE < AND_ASSIGN).
    Conflict between rule 105 and token OR_ASSIGN resolved as shift (GE < OR_ASSIGN).
    Conflict between rule 105 and token LSHIFT_ASSIGN resolved as shift (GE < LSHIFT_ASSIGN).
    Conflict between rule 105 and token RSHIFT_ASSIGN resolved as shift (GE < RSHIFT_ASSIGN).
    Conflict between rule 105 and token EXC_OR_ASSIGN resolved as shift (GE < EXC_OR_ASSIGN).
    Conflict between rule 105 and token EXC_OR resolved as shift (GE < EXC_OR).


state 133

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RRB, SEMI, '\n']
  106           | expression LT expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RRB, SEMI, '\n']
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 106 (expression)

    Conflict between rule 106 and token ADD resolved as shift (LT < ADD).
    Conflict between rule 106 and token SUB resolved as shift (LT < SUB).
    Conflict between rule 106 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 106 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 106 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 106 and token LSHIFT resolved as shift (LT < LSHIFT).
    Conflict between rule 106 and token RSHIFT resolved as shift (LT < RSHIFT).
    Conflict between rule 106 and token EQUAL resolved as reduce (EQUAL < LT).
    Conflict between rule 106 and token NOTEQUAL resolved as reduce (NOTEQUAL < LT).
    Conflict between rule 106 and token GT resolved as reduce (%left GT).
    Conflict between rule 106 and token GE resolved as reduce (%left GE).
    Conflict between rule 106 and token LT resolved as reduce (%left LT).
    Conflict between rule 106 and token LE resolved as reduce (%left LE).
    Conflict between rule 106 and token BIT_AND resolved as shift (LT < BIT_AND).
    Conflict between rule 106 and token LOGIC_AND resolved as shift (LT < LOGIC_AND).
    Conflict between rule 106 and token BIT_OR resolved as shift (LT < BIT_OR).
    Conflict between rule 106 and token LOGIC_OR resolved as shift (LT < LOGIC_OR).
    Conflict between rule 106 and token ASSIGN resolved as shift (LT < ASSIGN).
    Conflict between rule 106 and token ADD_ASSIGN resolved as shift (LT < ADD_ASSIGN).
    Conflict between rule 106 and token SUB_ASSIGN resolved as shift (LT < SUB_ASSIGN).
    Conflict between rule 106 and token MUL_ASSIGN resolved as shift (LT < MUL_ASSIGN).
    Conflict between rule 106 and token DIV_ASSIGN resolved as shift (LT < DIV_ASSIGN).
    Conflict between rule 106 and token MOD_ASSIGN resolved as shift (LT < MOD_ASSIGN).
    Conflict between rule 106 and token AND_ASSIGN resolved as shift (LT < AND_ASSIGN).
    Conflict between rule 106 and token OR_ASSIGN resolved as shift (LT < OR_ASSIGN).
    Conflict between rule 106 and token LSHIFT_ASSIGN resolved as shift (LT < LSHIFT_ASSIGN).
    Conflict between rule 106 and token RSHIFT_ASSIGN resolved as shift (LT < RSHIFT_ASSIGN).
    Conflict between rule 106 and token EXC_OR_ASSIGN resolved as shift (LT < EXC_OR_ASSIGN).
    Conflict between rule 106 and token EXC_OR resolved as shift (LT < EXC_OR).


state 134

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RRB, SEMI, '\n']
  107           | expression LE expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, RRB, SEMI, '\n']
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 107 (expression)

    Conflict between rule 107 and token ADD resolved as shift (LE < ADD).
    Conflict between rule 107 and token SUB resolved as shift (LE < SUB).
    Conflict between rule 107 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 107 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 107 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 107 and token LSHIFT resolved as shift (LE < LSHIFT).
    Conflict between rule 107 and token RSHIFT resolved as shift (LE < RSHIFT).
    Conflict between rule 107 and token EQUAL resolved as reduce (EQUAL < LE).
    Conflict between rule 107 and token NOTEQUAL resolved as reduce (NOTEQUAL < LE).
    Conflict between rule 107 and token GT resolved as reduce (%left GT).
    Conflict between rule 107 and token GE resolved as reduce (%left GE).
    Conflict between rule 107 and token LT resolved as reduce (%left LT).
    Conflict between rule 107 and token LE resolved as reduce (%left LE).
    Conflict between rule 107 and token BIT_AND resolved as shift (LE < BIT_AND).
    Conflict between rule 107 and token LOGIC_AND resolved as shift (LE < LOGIC_AND).
    Conflict between rule 107 and token BIT_OR resolved as shift (LE < BIT_OR).
    Conflict between rule 107 and token LOGIC_OR resolved as shift (LE < LOGIC_OR).
    Conflict between rule 107 and token ASSIGN resolved as shift (LE < ASSIGN).
    Conflict between rule 107 and token ADD_ASSIGN resolved as shift (LE < ADD_ASSIGN).
    Conflict between rule 107 and token SUB_ASSIGN resolved as shift (LE < SUB_ASSIGN).
    Conflict between rule 107 and token MUL_ASSIGN resolved as shift (LE < MUL_ASSIGN).
    Conflict between rule 107 and token DIV_ASSIGN resolved as shift (LE < DIV_ASSIGN).
    Conflict between rule 107 and token MOD_ASSIGN resolved as shift (LE < MOD_ASSIGN).
    Conflict between rule 107 and token AND_ASSIGN resolved as shift (LE < AND_ASSIGN).
    Conflict between rule 107 and token OR_ASSIGN resolved as shift (LE < OR_ASSIGN).
    Conflict between rule 107 and token LSHIFT_ASSIGN resolved as shift (LE < LSHIFT_ASSIGN).
    Conflict between rule 107 and token RSHIFT_ASSIGN resolved as shift (LE < RSHIFT_ASSIGN).
    Conflict between rule 107 and token EXC_OR_ASSIGN resolved as shift (LE < EXC_OR_ASSIGN).
    Conflict between rule 107 and token EXC_OR resolved as shift (LE < EXC_OR).


state 135

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, LOGIC_OR, RRB, SEMI, '\n']
   89           | expression BIT_AND expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, LOGIC_OR, RRB, SEMI, '\n']
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    BIT_OR         shift, and go to state 87
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 89 (expression)

    Conflict between rule 89 and token ADD resolved as shift (BIT_AND < ADD).
    Conflict between rule 89 and token SUB resolved as shift (BIT_AND < SUB).
    Conflict between rule 89 and token MUL resolved as shift (BIT_AND < MUL).
    Conflict between rule 89 and token DIV resolved as shift (BIT_AND < DIV).
    Conflict between rule 89 and token MOD resolved as shift (BIT_AND < MOD).
    Conflict between rule 89 and token LSHIFT resolved as shift (BIT_AND < LSHIFT).
    Conflict between rule 89 and token RSHIFT resolved as shift (BIT_AND < RSHIFT).
    Conflict between rule 89 and token EQUAL resolved as reduce (EQUAL < BIT_AND).
    Conflict between rule 89 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_AND).
    Conflict between rule 89 and token GT resolved as reduce (GT < BIT_AND).
    Conflict between rule 89 and token GE resolved as reduce (GE < BIT_AND).
    Conflict between rule 89 and token LT resolved as reduce (LT < BIT_AND).
    Conflict between rule 89 and token LE resolved as reduce (LE < BIT_AND).
    Conflict between rule 89 and token BIT_AND resolved as reduce (%left BIT_AND).
    Conflict between rule 89 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_AND).
    Conflict between rule 89 and token BIT_OR resolved as shift (BIT_AND < BIT_OR).
    Conflict between rule 89 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_AND).
    Conflict between rule 89 and token ASSIGN resolved as shift (BIT_AND < ASSIGN).
    Conflict between rule 89 and token ADD_ASSIGN resolved as shift (BIT_AND < ADD_ASSIGN).
    Conflict between rule 89 and token SUB_ASSIGN resolved as shift (BIT_AND < SUB_ASSIGN).
    Conflict between rule 89 and token MUL_ASSIGN resolved as shift (BIT_AND < MUL_ASSIGN).
    Conflict between rule 89 and token DIV_ASSIGN resolved as shift (BIT_AND < DIV_ASSIGN).
    Conflict between rule 89 and token MOD_ASSIGN resolved as shift (BIT_AND < MOD_ASSIGN).
    Conflict between rule 89 and token AND_ASSIGN resolved as shift (BIT_AND < AND_ASSIGN).
    Conflict between rule 89 and token OR_ASSIGN resolved as shift (BIT_AND < OR_ASSIGN).
    Conflict between rule 89 and token LSHIFT_ASSIGN resolved as shift (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 89 and token RSHIFT_ASSIGN resolved as shift (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 89 and token EXC_OR_ASSIGN resolved as shift (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 89 and token EXC_OR resolved as shift (BIT_AND < EXC_OR).


state 136

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, RRB, SEMI, '\n']
   92           | expression LOGIC_AND expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, RRB, SEMI, '\n']
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    BIT_AND        shift, and go to state 85
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 92 (expression)

    Conflict between rule 92 and token ADD resolved as shift (LOGIC_AND < ADD).
    Conflict between rule 92 and token SUB resolved as shift (LOGIC_AND < SUB).
    Conflict between rule 92 and token MUL resolved as shift (LOGIC_AND < MUL).
    Conflict between rule 92 and token DIV resolved as shift (LOGIC_AND < DIV).
    Conflict between rule 92 and token MOD resolved as shift (LOGIC_AND < MOD).
    Conflict between rule 92 and token LSHIFT resolved as shift (LOGIC_AND < LSHIFT).
    Conflict between rule 92 and token RSHIFT resolved as shift (LOGIC_AND < RSHIFT).
    Conflict between rule 92 and token EQUAL resolved as reduce (EQUAL < LOGIC_AND).
    Conflict between rule 92 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_AND).
    Conflict between rule 92 and token GT resolved as reduce (GT < LOGIC_AND).
    Conflict between rule 92 and token GE resolved as reduce (GE < LOGIC_AND).
    Conflict between rule 92 and token LT resolved as reduce (LT < LOGIC_AND).
    Conflict between rule 92 and token LE resolved as reduce (LE < LOGIC_AND).
    Conflict between rule 92 and token BIT_AND resolved as shift (LOGIC_AND < BIT_AND).
    Conflict between rule 92 and token LOGIC_AND resolved as reduce (%left LOGIC_AND).
    Conflict between rule 92 and token BIT_OR resolved as shift (LOGIC_AND < BIT_OR).
    Conflict between rule 92 and token LOGIC_OR resolved as shift (LOGIC_AND < LOGIC_OR).
    Conflict between rule 92 and token ASSIGN resolved as shift (LOGIC_AND < ASSIGN).
    Conflict between rule 92 and token ADD_ASSIGN resolved as shift (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 92 and token SUB_ASSIGN resolved as shift (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 92 and token MUL_ASSIGN resolved as shift (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 92 and token DIV_ASSIGN resolved as shift (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 92 and token MOD_ASSIGN resolved as shift (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 92 and token AND_ASSIGN resolved as shift (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 92 and token OR_ASSIGN resolved as shift (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 92 and token LSHIFT_ASSIGN resolved as shift (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 92 and token RSHIFT_ASSIGN resolved as shift (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 92 and token EXC_OR_ASSIGN resolved as shift (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 92 and token EXC_OR resolved as shift (LOGIC_AND < EXC_OR).


state 137

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, RRB, SEMI, '\n']
   86           | expression BIT_OR expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, RRB, SEMI, '\n']
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 86 (expression)

    Conflict between rule 86 and token ADD resolved as shift (BIT_OR < ADD).
    Conflict between rule 86 and token SUB resolved as shift (BIT_OR < SUB).
    Conflict between rule 86 and token MUL resolved as shift (BIT_OR < MUL).
    Conflict between rule 86 and token DIV resolved as shift (BIT_OR < DIV).
    Conflict between rule 86 and token MOD resolved as shift (BIT_OR < MOD).
    Conflict between rule 86 and token LSHIFT resolved as shift (BIT_OR < LSHIFT).
    Conflict between rule 86 and token RSHIFT resolved as shift (BIT_OR < RSHIFT).
    Conflict between rule 86 and token EQUAL resolved as reduce (EQUAL < BIT_OR).
    Conflict between rule 86 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_OR).
    Conflict between rule 86 and token GT resolved as reduce (GT < BIT_OR).
    Conflict between rule 86 and token GE resolved as reduce (GE < BIT_OR).
    Conflict between rule 86 and token LT resolved as reduce (LT < BIT_OR).
    Conflict between rule 86 and token LE resolved as reduce (LE < BIT_OR).
    Conflict between rule 86 and token BIT_AND resolved as reduce (BIT_AND < BIT_OR).
    Conflict between rule 86 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_OR).
    Conflict between rule 86 and token BIT_OR resolved as reduce (%left BIT_OR).
    Conflict between rule 86 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_OR).
    Conflict between rule 86 and token ASSIGN resolved as shift (BIT_OR < ASSIGN).
    Conflict between rule 86 and token ADD_ASSIGN resolved as shift (BIT_OR < ADD_ASSIGN).
    Conflict between rule 86 and token SUB_ASSIGN resolved as shift (BIT_OR < SUB_ASSIGN).
    Conflict between rule 86 and token MUL_ASSIGN resolved as shift (BIT_OR < MUL_ASSIGN).
    Conflict between rule 86 and token DIV_ASSIGN resolved as shift (BIT_OR < DIV_ASSIGN).
    Conflict between rule 86 and token MOD_ASSIGN resolved as shift (BIT_OR < MOD_ASSIGN).
    Conflict between rule 86 and token AND_ASSIGN resolved as shift (BIT_OR < AND_ASSIGN).
    Conflict between rule 86 and token OR_ASSIGN resolved as shift (BIT_OR < OR_ASSIGN).
    Conflict between rule 86 and token LSHIFT_ASSIGN resolved as shift (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 86 and token RSHIFT_ASSIGN resolved as shift (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 86 and token EXC_OR_ASSIGN resolved as shift (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 86 and token EXC_OR resolved as shift (BIT_OR < EXC_OR).


state 138

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LOGIC_OR, RRB, SEMI, '\n']
   91           | expression LOGIC_OR expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LOGIC_OR, RRB, SEMI, '\n']
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    BIT_AND        shift, and go to state 85
    BIT_OR         shift, and go to state 87
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 91 (expression)

    Conflict between rule 91 and token ADD resolved as shift (LOGIC_OR < ADD).
    Conflict between rule 91 and token SUB resolved as shift (LOGIC_OR < SUB).
    Conflict between rule 91 and token MUL resolved as shift (LOGIC_OR < MUL).
    Conflict between rule 91 and token DIV resolved as shift (LOGIC_OR < DIV).
    Conflict between rule 91 and token MOD resolved as shift (LOGIC_OR < MOD).
    Conflict between rule 91 and token LSHIFT resolved as shift (LOGIC_OR < LSHIFT).
    Conflict between rule 91 and token RSHIFT resolved as shift (LOGIC_OR < RSHIFT).
    Conflict between rule 91 and token EQUAL resolved as reduce (EQUAL < LOGIC_OR).
    Conflict between rule 91 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_OR).
    Conflict between rule 91 and token GT resolved as reduce (GT < LOGIC_OR).
    Conflict between rule 91 and token GE resolved as reduce (GE < LOGIC_OR).
    Conflict between rule 91 and token LT resolved as reduce (LT < LOGIC_OR).
    Conflict between rule 91 and token LE resolved as reduce (LE < LOGIC_OR).
    Conflict between rule 91 and token BIT_AND resolved as shift (LOGIC_OR < BIT_AND).
    Conflict between rule 91 and token LOGIC_AND resolved as reduce (LOGIC_AND < LOGIC_OR).
    Conflict between rule 91 and token BIT_OR resolved as shift (LOGIC_OR < BIT_OR).
    Conflict between rule 91 and token LOGIC_OR resolved as reduce (%left LOGIC_OR).
    Conflict between rule 91 and token ASSIGN resolved as shift (LOGIC_OR < ASSIGN).
    Conflict between rule 91 and token ADD_ASSIGN resolved as shift (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 91 and token SUB_ASSIGN resolved as shift (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 91 and token MUL_ASSIGN resolved as shift (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 91 and token DIV_ASSIGN resolved as shift (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 91 and token MOD_ASSIGN resolved as shift (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 91 and token AND_ASSIGN resolved as shift (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 91 and token OR_ASSIGN resolved as shift (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 91 and token LSHIFT_ASSIGN resolved as shift (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 91 and token RSHIFT_ASSIGN resolved as shift (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 91 and token EXC_OR_ASSIGN resolved as shift (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 91 and token EXC_OR resolved as shift (LOGIC_OR < EXC_OR).


state 139

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   93           | expression ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 93 (expression)

    Conflict between rule 93 and token ADD resolved as reduce (ADD < ASSIGN).
    Conflict between rule 93 and token SUB resolved as reduce (SUB < ASSIGN).
    Conflict between rule 93 and token MUL resolved as reduce (MUL < ASSIGN).
    Conflict between rule 93 and token DIV resolved as reduce (DIV < ASSIGN).
    Conflict between rule 93 and token MOD resolved as reduce (MOD < ASSIGN).
    Conflict between rule 93 and token LSHIFT resolved as reduce (LSHIFT < ASSIGN).
    Conflict between rule 93 and token RSHIFT resolved as reduce (RSHIFT < ASSIGN).
    Conflict between rule 93 and token EQUAL resolved as reduce (EQUAL < ASSIGN).
    Conflict between rule 93 and token NOTEQUAL resolved as reduce (NOTEQUAL < ASSIGN).
    Conflict between rule 93 and token GT resolved as reduce (GT < ASSIGN).
    Conflict between rule 93 and token GE resolved as reduce (GE < ASSIGN).
    Conflict between rule 93 and token LT resolved as reduce (LT < ASSIGN).
    Conflict between rule 93 and token LE resolved as reduce (LE < ASSIGN).
    Conflict between rule 93 and token BIT_AND resolved as reduce (BIT_AND < ASSIGN).
    Conflict between rule 93 and token LOGIC_AND resolved as reduce (LOGIC_AND < ASSIGN).
    Conflict between rule 93 and token BIT_OR resolved as reduce (BIT_OR < ASSIGN).
    Conflict between rule 93 and token LOGIC_OR resolved as reduce (LOGIC_OR < ASSIGN).
    Conflict between rule 93 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 93 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 93 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 93 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 93 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 93 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 93 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 93 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 93 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 93 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 93 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 93 and token EXC_OR resolved as reduce (EXC_OR < ASSIGN).


state 140

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   94           | expression ADD_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 94 (expression)

    Conflict between rule 94 and token ADD resolved as reduce (ADD < ADD_ASSIGN).
    Conflict between rule 94 and token SUB resolved as reduce (SUB < ADD_ASSIGN).
    Conflict between rule 94 and token MUL resolved as reduce (MUL < ADD_ASSIGN).
    Conflict between rule 94 and token DIV resolved as reduce (DIV < ADD_ASSIGN).
    Conflict between rule 94 and token MOD resolved as reduce (MOD < ADD_ASSIGN).
    Conflict between rule 94 and token LSHIFT resolved as reduce (LSHIFT < ADD_ASSIGN).
    Conflict between rule 94 and token RSHIFT resolved as reduce (RSHIFT < ADD_ASSIGN).
    Conflict between rule 94 and token EQUAL resolved as reduce (EQUAL < ADD_ASSIGN).
    Conflict between rule 94 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 94 and token GT resolved as reduce (GT < ADD_ASSIGN).
    Conflict between rule 94 and token GE resolved as reduce (GE < ADD_ASSIGN).
    Conflict between rule 94 and token LT resolved as reduce (LT < ADD_ASSIGN).
    Conflict between rule 94 and token LE resolved as reduce (LE < ADD_ASSIGN).
    Conflict between rule 94 and token BIT_AND resolved as reduce (BIT_AND < ADD_ASSIGN).
    Conflict between rule 94 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 94 and token BIT_OR resolved as reduce (BIT_OR < ADD_ASSIGN).
    Conflict between rule 94 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 94 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 94 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 94 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 94 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 94 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 94 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 94 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 94 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 94 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 94 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 94 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 94 and token EXC_OR resolved as reduce (EXC_OR < ADD_ASSIGN).


state 141

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   95           | expression SUB_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 95 (expression)

    Conflict between rule 95 and token ADD resolved as reduce (ADD < SUB_ASSIGN).
    Conflict between rule 95 and token SUB resolved as reduce (SUB < SUB_ASSIGN).
    Conflict between rule 95 and token MUL resolved as reduce (MUL < SUB_ASSIGN).
    Conflict between rule 95 and token DIV resolved as reduce (DIV < SUB_ASSIGN).
    Conflict between rule 95 and token MOD resolved as reduce (MOD < SUB_ASSIGN).
    Conflict between rule 95 and token LSHIFT resolved as reduce (LSHIFT < SUB_ASSIGN).
    Conflict between rule 95 and token RSHIFT resolved as reduce (RSHIFT < SUB_ASSIGN).
    Conflict between rule 95 and token EQUAL resolved as reduce (EQUAL < SUB_ASSIGN).
    Conflict between rule 95 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 95 and token GT resolved as reduce (GT < SUB_ASSIGN).
    Conflict between rule 95 and token GE resolved as reduce (GE < SUB_ASSIGN).
    Conflict between rule 95 and token LT resolved as reduce (LT < SUB_ASSIGN).
    Conflict between rule 95 and token LE resolved as reduce (LE < SUB_ASSIGN).
    Conflict between rule 95 and token BIT_AND resolved as reduce (BIT_AND < SUB_ASSIGN).
    Conflict between rule 95 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 95 and token BIT_OR resolved as reduce (BIT_OR < SUB_ASSIGN).
    Conflict between rule 95 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 95 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 95 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 95 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 95 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 95 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 95 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 95 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 95 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 95 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 95 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 95 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 95 and token EXC_OR resolved as reduce (EXC_OR < SUB_ASSIGN).


state 142

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   96           | expression MUL_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 96 (expression)

    Conflict between rule 96 and token ADD resolved as reduce (ADD < MUL_ASSIGN).
    Conflict between rule 96 and token SUB resolved as reduce (SUB < MUL_ASSIGN).
    Conflict between rule 96 and token MUL resolved as reduce (MUL < MUL_ASSIGN).
    Conflict between rule 96 and token DIV resolved as reduce (DIV < MUL_ASSIGN).
    Conflict between rule 96 and token MOD resolved as reduce (MOD < MUL_ASSIGN).
    Conflict between rule 96 and token LSHIFT resolved as reduce (LSHIFT < MUL_ASSIGN).
    Conflict between rule 96 and token RSHIFT resolved as reduce (RSHIFT < MUL_ASSIGN).
    Conflict between rule 96 and token EQUAL resolved as reduce (EQUAL < MUL_ASSIGN).
    Conflict between rule 96 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 96 and token GT resolved as reduce (GT < MUL_ASSIGN).
    Conflict between rule 96 and token GE resolved as reduce (GE < MUL_ASSIGN).
    Conflict between rule 96 and token LT resolved as reduce (LT < MUL_ASSIGN).
    Conflict between rule 96 and token LE resolved as reduce (LE < MUL_ASSIGN).
    Conflict between rule 96 and token BIT_AND resolved as reduce (BIT_AND < MUL_ASSIGN).
    Conflict between rule 96 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 96 and token BIT_OR resolved as reduce (BIT_OR < MUL_ASSIGN).
    Conflict between rule 96 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 96 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 96 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 96 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 96 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 96 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 96 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 96 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 96 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 96 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 96 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 96 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 96 and token EXC_OR resolved as reduce (EXC_OR < MUL_ASSIGN).


state 143

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   97           | expression DIV_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 97 (expression)

    Conflict between rule 97 and token ADD resolved as reduce (ADD < DIV_ASSIGN).
    Conflict between rule 97 and token SUB resolved as reduce (SUB < DIV_ASSIGN).
    Conflict between rule 97 and token MUL resolved as reduce (MUL < DIV_ASSIGN).
    Conflict between rule 97 and token DIV resolved as reduce (DIV < DIV_ASSIGN).
    Conflict between rule 97 and token MOD resolved as reduce (MOD < DIV_ASSIGN).
    Conflict between rule 97 and token LSHIFT resolved as reduce (LSHIFT < DIV_ASSIGN).
    Conflict between rule 97 and token RSHIFT resolved as reduce (RSHIFT < DIV_ASSIGN).
    Conflict between rule 97 and token EQUAL resolved as reduce (EQUAL < DIV_ASSIGN).
    Conflict between rule 97 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 97 and token GT resolved as reduce (GT < DIV_ASSIGN).
    Conflict between rule 97 and token GE resolved as reduce (GE < DIV_ASSIGN).
    Conflict between rule 97 and token LT resolved as reduce (LT < DIV_ASSIGN).
    Conflict between rule 97 and token LE resolved as reduce (LE < DIV_ASSIGN).
    Conflict between rule 97 and token BIT_AND resolved as reduce (BIT_AND < DIV_ASSIGN).
    Conflict between rule 97 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 97 and token BIT_OR resolved as reduce (BIT_OR < DIV_ASSIGN).
    Conflict between rule 97 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 97 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 97 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 97 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 97 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 97 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 97 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 97 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 97 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 97 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 97 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 97 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 97 and token EXC_OR resolved as reduce (EXC_OR < DIV_ASSIGN).


state 144

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   98           | expression MOD_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 98 (expression)

    Conflict between rule 98 and token ADD resolved as reduce (ADD < MOD_ASSIGN).
    Conflict between rule 98 and token SUB resolved as reduce (SUB < MOD_ASSIGN).
    Conflict between rule 98 and token MUL resolved as reduce (MUL < MOD_ASSIGN).
    Conflict between rule 98 and token DIV resolved as reduce (DIV < MOD_ASSIGN).
    Conflict between rule 98 and token MOD resolved as reduce (MOD < MOD_ASSIGN).
    Conflict between rule 98 and token LSHIFT resolved as reduce (LSHIFT < MOD_ASSIGN).
    Conflict between rule 98 and token RSHIFT resolved as reduce (RSHIFT < MOD_ASSIGN).
    Conflict between rule 98 and token EQUAL resolved as reduce (EQUAL < MOD_ASSIGN).
    Conflict between rule 98 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 98 and token GT resolved as reduce (GT < MOD_ASSIGN).
    Conflict between rule 98 and token GE resolved as reduce (GE < MOD_ASSIGN).
    Conflict between rule 98 and token LT resolved as reduce (LT < MOD_ASSIGN).
    Conflict between rule 98 and token LE resolved as reduce (LE < MOD_ASSIGN).
    Conflict between rule 98 and token BIT_AND resolved as reduce (BIT_AND < MOD_ASSIGN).
    Conflict between rule 98 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 98 and token BIT_OR resolved as reduce (BIT_OR < MOD_ASSIGN).
    Conflict between rule 98 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 98 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 98 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 98 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 98 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 98 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 98 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 98 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 98 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 98 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 98 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 98 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 98 and token EXC_OR resolved as reduce (EXC_OR < MOD_ASSIGN).


state 145

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   99           | expression AND_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 99 (expression)

    Conflict between rule 99 and token ADD resolved as reduce (ADD < AND_ASSIGN).
    Conflict between rule 99 and token SUB resolved as reduce (SUB < AND_ASSIGN).
    Conflict between rule 99 and token MUL resolved as reduce (MUL < AND_ASSIGN).
    Conflict between rule 99 and token DIV resolved as reduce (DIV < AND_ASSIGN).
    Conflict between rule 99 and token MOD resolved as reduce (MOD < AND_ASSIGN).
    Conflict between rule 99 and token LSHIFT resolved as reduce (LSHIFT < AND_ASSIGN).
    Conflict between rule 99 and token RSHIFT resolved as reduce (RSHIFT < AND_ASSIGN).
    Conflict between rule 99 and token EQUAL resolved as reduce (EQUAL < AND_ASSIGN).
    Conflict between rule 99 and token NOTEQUAL resolved as reduce (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 99 and token GT resolved as reduce (GT < AND_ASSIGN).
    Conflict between rule 99 and token GE resolved as reduce (GE < AND_ASSIGN).
    Conflict between rule 99 and token LT resolved as reduce (LT < AND_ASSIGN).
    Conflict between rule 99 and token LE resolved as reduce (LE < AND_ASSIGN).
    Conflict between rule 99 and token BIT_AND resolved as reduce (BIT_AND < AND_ASSIGN).
    Conflict between rule 99 and token LOGIC_AND resolved as reduce (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 99 and token BIT_OR resolved as reduce (BIT_OR < AND_ASSIGN).
    Conflict between rule 99 and token LOGIC_OR resolved as reduce (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 99 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 99 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 99 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 99 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 99 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 99 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 99 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 99 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 99 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 99 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 99 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 99 and token EXC_OR resolved as reduce (EXC_OR < AND_ASSIGN).


state 146

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  100           | expression OR_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 100 (expression)

    Conflict between rule 100 and token ADD resolved as reduce (ADD < OR_ASSIGN).
    Conflict between rule 100 and token SUB resolved as reduce (SUB < OR_ASSIGN).
    Conflict between rule 100 and token MUL resolved as reduce (MUL < OR_ASSIGN).
    Conflict between rule 100 and token DIV resolved as reduce (DIV < OR_ASSIGN).
    Conflict between rule 100 and token MOD resolved as reduce (MOD < OR_ASSIGN).
    Conflict between rule 100 and token LSHIFT resolved as reduce (LSHIFT < OR_ASSIGN).
    Conflict between rule 100 and token RSHIFT resolved as reduce (RSHIFT < OR_ASSIGN).
    Conflict between rule 100 and token EQUAL resolved as reduce (EQUAL < OR_ASSIGN).
    Conflict between rule 100 and token NOTEQUAL resolved as reduce (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 100 and token GT resolved as reduce (GT < OR_ASSIGN).
    Conflict between rule 100 and token GE resolved as reduce (GE < OR_ASSIGN).
    Conflict between rule 100 and token LT resolved as reduce (LT < OR_ASSIGN).
    Conflict between rule 100 and token LE resolved as reduce (LE < OR_ASSIGN).
    Conflict between rule 100 and token BIT_AND resolved as reduce (BIT_AND < OR_ASSIGN).
    Conflict between rule 100 and token LOGIC_AND resolved as reduce (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 100 and token BIT_OR resolved as reduce (BIT_OR < OR_ASSIGN).
    Conflict between rule 100 and token LOGIC_OR resolved as reduce (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 100 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 100 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 100 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 100 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 100 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 100 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 100 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 100 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 100 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 100 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 100 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 100 and token EXC_OR resolved as reduce (EXC_OR < OR_ASSIGN).


state 147

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  102           | expression LSHIFT_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 102 (expression)

    Conflict between rule 102 and token ADD resolved as reduce (ADD < LSHIFT_ASSIGN).
    Conflict between rule 102 and token SUB resolved as reduce (SUB < LSHIFT_ASSIGN).
    Conflict between rule 102 and token MUL resolved as reduce (MUL < LSHIFT_ASSIGN).
    Conflict between rule 102 and token DIV resolved as reduce (DIV < LSHIFT_ASSIGN).
    Conflict between rule 102 and token MOD resolved as reduce (MOD < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LSHIFT resolved as reduce (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 102 and token RSHIFT resolved as reduce (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 102 and token EQUAL resolved as reduce (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 102 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 102 and token GT resolved as reduce (GT < LSHIFT_ASSIGN).
    Conflict between rule 102 and token GE resolved as reduce (GE < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LT resolved as reduce (LT < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LE resolved as reduce (LE < LSHIFT_ASSIGN).
    Conflict between rule 102 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 102 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 102 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 102 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 102 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 102 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 102 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 102 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 102 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 102 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 102 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 102 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 102 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 102 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 102 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT_ASSIGN).


state 148

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  103           | expression RSHIFT_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 103 (expression)

    Conflict between rule 103 and token ADD resolved as reduce (ADD < RSHIFT_ASSIGN).
    Conflict between rule 103 and token SUB resolved as reduce (SUB < RSHIFT_ASSIGN).
    Conflict between rule 103 and token MUL resolved as reduce (MUL < RSHIFT_ASSIGN).
    Conflict between rule 103 and token DIV resolved as reduce (DIV < RSHIFT_ASSIGN).
    Conflict between rule 103 and token MOD resolved as reduce (MOD < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LSHIFT resolved as reduce (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 103 and token RSHIFT resolved as reduce (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 103 and token EQUAL resolved as reduce (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 103 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 103 and token GT resolved as reduce (GT < RSHIFT_ASSIGN).
    Conflict between rule 103 and token GE resolved as reduce (GE < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LT resolved as reduce (LT < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LE resolved as reduce (LE < RSHIFT_ASSIGN).
    Conflict between rule 103 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 103 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 103 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 103 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 103 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 103 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 103 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 103 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 103 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 103 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 103 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 103 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 103 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 103 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 103 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT_ASSIGN).


state 149

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  101           | expression EXC_OR_ASSIGN expression .  [COMMA, ADD, SUB, MUL, DIV, MOD, LSHIFT, RSHIFT, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 101 (expression)

    Conflict between rule 101 and token ADD resolved as reduce (ADD < EXC_OR_ASSIGN).
    Conflict between rule 101 and token SUB resolved as reduce (SUB < EXC_OR_ASSIGN).
    Conflict between rule 101 and token MUL resolved as reduce (MUL < EXC_OR_ASSIGN).
    Conflict between rule 101 and token DIV resolved as reduce (DIV < EXC_OR_ASSIGN).
    Conflict between rule 101 and token MOD resolved as reduce (MOD < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LSHIFT resolved as reduce (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 101 and token RSHIFT resolved as reduce (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 101 and token EQUAL resolved as reduce (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 101 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 101 and token GT resolved as reduce (GT < EXC_OR_ASSIGN).
    Conflict between rule 101 and token GE resolved as reduce (GE < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LT resolved as reduce (LT < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LE resolved as reduce (LE < EXC_OR_ASSIGN).
    Conflict between rule 101 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 101 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 101 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 101 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 101 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 101 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 101 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 101 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 101 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 101 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 101 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 101 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 101 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 101 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 101 and token EXC_OR resolved as reduce (EXC_OR < EXC_OR_ASSIGN).


state 150

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   90           | expression EXC_OR expression .  [COMMA, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, BIT_OR, LOGIC_OR, EXC_OR, RRB, SEMI, '\n']
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99

    $default  reduce using rule 90 (expression)

    Conflict between rule 90 and token ADD resolved as shift (EXC_OR < ADD).
    Conflict between rule 90 and token SUB resolved as shift (EXC_OR < SUB).
    Conflict between rule 90 and token MUL resolved as shift (EXC_OR < MUL).
    Conflict between rule 90 and token DIV resolved as shift (EXC_OR < DIV).
    Conflict between rule 90 and token MOD resolved as shift (EXC_OR < MOD).
    Conflict between rule 90 and token LSHIFT resolved as shift (EXC_OR < LSHIFT).
    Conflict between rule 90 and token RSHIFT resolved as shift (EXC_OR < RSHIFT).
    Conflict between rule 90 and token EQUAL resolved as reduce (EQUAL < EXC_OR).
    Conflict between rule 90 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR).
    Conflict between rule 90 and token GT resolved as reduce (GT < EXC_OR).
    Conflict between rule 90 and token GE resolved as reduce (GE < EXC_OR).
    Conflict between rule 90 and token LT resolved as reduce (LT < EXC_OR).
    Conflict between rule 90 and token LE resolved as reduce (LE < EXC_OR).
    Conflict between rule 90 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR).
    Conflict between rule 90 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR).
    Conflict between rule 90 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR).
    Conflict between rule 90 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR).
    Conflict between rule 90 and token ASSIGN resolved as shift (EXC_OR < ASSIGN).
    Conflict between rule 90 and token ADD_ASSIGN resolved as shift (EXC_OR < ADD_ASSIGN).
    Conflict between rule 90 and token SUB_ASSIGN resolved as shift (EXC_OR < SUB_ASSIGN).
    Conflict between rule 90 and token MUL_ASSIGN resolved as shift (EXC_OR < MUL_ASSIGN).
    Conflict between rule 90 and token DIV_ASSIGN resolved as shift (EXC_OR < DIV_ASSIGN).
    Conflict between rule 90 and token MOD_ASSIGN resolved as shift (EXC_OR < MOD_ASSIGN).
    Conflict between rule 90 and token AND_ASSIGN resolved as shift (EXC_OR < AND_ASSIGN).
    Conflict between rule 90 and token OR_ASSIGN resolved as shift (EXC_OR < OR_ASSIGN).
    Conflict between rule 90 and token LSHIFT_ASSIGN resolved as shift (EXC_OR < LSHIFT_ASSIGN).
    Conflict between rule 90 and token RSHIFT_ASSIGN resolved as shift (EXC_OR < RSHIFT_ASSIGN).
    Conflict between rule 90 and token EXC_OR_ASSIGN resolved as shift (EXC_OR < EXC_OR_ASSIGN).
    Conflict between rule 90 and token EXC_OR resolved as reduce (%left EXC_OR).


state 151

   76 typename_list: typename_list COMMA . typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 174


state 152

   74 typename_group: '<' typename_list '>' .

    $default  reduce using rule 74 (typename_group)


state 153

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  136 inferenced_type_init_stmt: VAR IDENT ASSIGN expression . stmt_term
  157 stmt_term: . SEMI
  158          | . '\n'

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    SEMI           shift, and go to state 63
    '\n'           shift, and go to state 64

    stmt_term  go to state 175


state 154

   55 function_define: DEF IDENT LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 176


state 155

   54 function_define: DEF IDENT LRB parameter_list . RRB ARROW typename_T scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 177
    RRB    shift, and go to state 178


state 156

   69 parameter_list: typename_T . IDENT

    IDENT  shift, and go to state 179


state 157

   18 namespace_path: namespace_path DOT IDENT .

    $default  reduce using rule 18 (namespace_path)


state 158

   20 parameterized_typename: . IDENT type_parameter_group
   34 interface_decl: INTERFACE . parameterized_typename LCB access_member_tree_opt RCB
   35               | INTERFACE . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 180

    parameterized_typename  go to state 181


state 159

   20 parameterized_typename: . IDENT type_parameter_group
   30 class_decl: CLASS . parameterized_typename LCB access_member_tree_opt RCB
   31           | CLASS . parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    IDENT  shift, and go to state 180

    parameterized_typename  go to state 182


state 160

   32 enum_decl: ENUM . IDENT LCB ident_list RCB
   33          | ENUM . IDENT LCB ident_list COMMA RCB

    IDENT  shift, and go to state 183


state 161

    9 namespace_member_decl: NAMESPACE . namespace_path namespace_body
   17 namespace_path: . IDENT
   18               | . namespace_path DOT IDENT

    IDENT  shift, and go to state 58

    namespace_path  go to state 184


state 162

   13 namespace_member_decl_list: namespace_member_decl .

    $default  reduce using rule 13 (namespace_member_decl_list)


state 163

    9 namespace_member_decl: . NAMESPACE namespace_path namespace_body
   10                      | . class_decl
   11                      | . interface_decl
   12                      | . enum_decl
   14 namespace_member_decl_list: namespace_member_decl_list . namespace_member_decl
   16 namespace_member_decl_optional: namespace_member_decl_list .  [RCB]
   30 class_decl: . CLASS parameterized_typename LCB access_member_tree_opt RCB
   31           | . CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB
   32 enum_decl: . ENUM IDENT LCB ident_list RCB
   33          | . ENUM IDENT LCB ident_list COMMA RCB
   34 interface_decl: . INTERFACE parameterized_typename LCB access_member_tree_opt RCB
   35               | . INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB

    INTERFACE  shift, and go to state 158
    CLASS      shift, and go to state 159
    ENUM       shift, and go to state 160
    NAMESPACE  shift, and go to state 161

    $default  reduce using rule 16 (namespace_member_decl_optional)

    namespace_member_decl  go to state 185
    class_decl             go to state 165
    enum_decl              go to state 166
    interface_decl         go to state 167


state 164

    8 namespace_body: LCB namespace_member_decl_optional . RCB

    RCB  shift, and go to state 186


state 165

   10 namespace_member_decl: class_decl .

    $default  reduce using rule 10 (namespace_member_decl)


state 166

   12 namespace_member_decl: enum_decl .

    $default  reduce using rule 12 (namespace_member_decl)


state 167

   11 namespace_member_decl: interface_decl .

    $default  reduce using rule 11 (namespace_member_decl)


state 168

  137 if_stmt: IF LRB expression RRB . scope
  138        | IF LRB expression RRB . scope ELSE scope
  139        | IF LRB expression RRB . scope elif_list
  140        | IF LRB expression RRB . scope elif_list ELSE scope
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB

    LCB  shift, and go to state 67

    scope  go to state 187


state 169

  144 while_stmt: WHILE LRB expression RRB . scope_optional
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB
  155 scope_optional: . SEMI
  156               | . scope

    LCB   shift, and go to state 67
    SEMI  shift, and go to state 188

    scope           go to state 189
    scope_optional  go to state 190


state 170

  153 scope: LCB stmt_list RCB .

    $default  reduce using rule 153 (scope)


state 171

   77 typename_T: . IDENT typename_group
  152 catch_stmt: CATCH LRB . typename_T IDENT RRB scope

    IDENT  shift, and go to state 6

    typename_T  go to state 191


state 172

  151 catch_stmt_list: catch_stmt_list catch_stmt .

    $default  reduce using rule 151 (catch_stmt_list)


state 173

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  135 variable_init_stmt: typename_T IDENT ASSIGN expression . stmt_term
  157 stmt_term: . SEMI
  158          | . '\n'

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    SEMI           shift, and go to state 63
    '\n'           shift, and go to state 64

    stmt_term  go to state 192


state 174

   76 typename_list: typename_list COMMA typename_T .

    $default  reduce using rule 76 (typename_list)


state 175

  136 inferenced_type_init_stmt: VAR IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 136 (inferenced_type_init_stmt)


state 176

   55 function_define: DEF IDENT LRB RRB ARROW . typename_T scope_optional
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 193


state 177

   70 parameter_list: parameter_list COMMA . typename_T IDENT
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 194


state 178

   54 function_define: DEF IDENT LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 195


state 179

   69 parameter_list: typename_T IDENT .

    $default  reduce using rule 69 (parameter_list)


state 180

   20 parameterized_typename: IDENT . type_parameter_group
   21 type_parameter_group: .  [COLON, LCB]
   22                     | . LT type_parameter_list GT

    LT  shift, and go to state 196

    $default  reduce using rule 21 (type_parameter_group)

    type_parameter_group  go to state 197


state 181

   34 interface_decl: INTERFACE parameterized_typename . LCB access_member_tree_opt RCB
   35               | INTERFACE parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 198
    LCB    shift, and go to state 199


state 182

   30 class_decl: CLASS parameterized_typename . LCB access_member_tree_opt RCB
   31           | CLASS parameterized_typename . COLON typename_list LCB access_member_tree_opt RCB

    COLON  shift, and go to state 200
    LCB    shift, and go to state 201


state 183

   32 enum_decl: ENUM IDENT . LCB ident_list RCB
   33          | ENUM IDENT . LCB ident_list COMMA RCB

    LCB  shift, and go to state 202


state 184

    8 namespace_body: . LCB namespace_member_decl_optional RCB
    9 namespace_member_decl: NAMESPACE namespace_path . namespace_body
   18 namespace_path: namespace_path . DOT IDENT

    DOT  shift, and go to state 108
    LCB  shift, and go to state 109

    namespace_body  go to state 203


state 185

   14 namespace_member_decl_list: namespace_member_decl_list namespace_member_decl .

    $default  reduce using rule 14 (namespace_member_decl_list)


state 186

    8 namespace_body: LCB namespace_member_decl_optional RCB .

    $default  reduce using rule 8 (namespace_body)


state 187

  137 if_stmt: IF LRB expression RRB scope .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  138        | IF LRB expression RRB scope . ELSE scope
  139        | IF LRB expression RRB scope . elif_list
  140        | IF LRB expression RRB scope . elif_list ELSE scope
  141 elif_list: . elif
  142          | . elif_list elif
  143 elif: . ELIF LRB expression RRB scope

    ELIF  shift, and go to state 204
    ELSE  shift, and go to state 205

    $default  reduce using rule 137 (if_stmt)

    elif_list  go to state 206
    elif       go to state 207


state 188

  155 scope_optional: SEMI .

    $default  reduce using rule 155 (scope_optional)


state 189

  156 scope_optional: scope .

    $default  reduce using rule 156 (scope_optional)


state 190

  144 while_stmt: WHILE LRB expression RRB scope_optional .

    $default  reduce using rule 144 (while_stmt)


state 191

  152 catch_stmt: CATCH LRB typename_T . IDENT RRB scope

    IDENT  shift, and go to state 208


state 192

  135 variable_init_stmt: typename_T IDENT ASSIGN expression stmt_term .

    $default  reduce using rule 135 (variable_init_stmt)


state 193

   55 function_define: DEF IDENT LRB RRB ARROW typename_T . scope_optional
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB
  155 scope_optional: . SEMI
  156               | . scope

    LCB   shift, and go to state 67
    SEMI  shift, and go to state 188

    scope           go to state 189
    scope_optional  go to state 209


state 194

   70 parameter_list: parameter_list COMMA typename_T . IDENT

    IDENT  shift, and go to state 210


state 195

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW . typename_T scope_optional
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 211


state 196

   22 type_parameter_group: LT . type_parameter_list GT
   23 type_parameter_list: . type_parameter
   24                    | . type_parameter_list COMMA type_parameter
   25 type_parameter: . IDENT type_parameter_rule_list
   26               | . IN IDENT type_parameter_rule_list
   27               | . OUT IDENT type_parameter_rule_list

    IDENT  shift, and go to state 212
    IN     shift, and go to state 213
    OUT    shift, and go to state 214

    type_parameter_list  go to state 215
    type_parameter       go to state 216


state 197

   20 parameterized_typename: IDENT type_parameter_group .

    $default  reduce using rule 20 (parameterized_typename)


state 198

   35 interface_decl: INTERFACE parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_list  go to state 217
    typename_T     go to state 104


state 199

   34 interface_decl: INTERFACE parameterized_typename LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 218
    PRIVATE    shift, and go to state 219
    PROTECTED  shift, and go to state 220

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 221
    access_member_tree      go to state 222
    access_member_list      go to state 223
    access_level_T          go to state 224


state 200

   31 class_decl: CLASS parameterized_typename COLON . typename_list LCB access_member_tree_opt RCB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_list  go to state 225
    typename_T     go to state 104


state 201

   30 class_decl: CLASS parameterized_typename LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 218
    PRIVATE    shift, and go to state 219
    PROTECTED  shift, and go to state 220

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 226
    access_member_tree      go to state 222
    access_member_list      go to state 223
    access_level_T          go to state 224


state 202

   32 enum_decl: ENUM IDENT LCB . ident_list RCB
   33          | ENUM IDENT LCB . ident_list COMMA RCB
   67 ident_list: . IDENT
   68           | . ident_list COMMA IDENT

    IDENT  shift, and go to state 227

    ident_list  go to state 228


state 203

    9 namespace_member_decl: NAMESPACE namespace_path namespace_body .

    $default  reduce using rule 9 (namespace_member_decl)


state 204

  143 elif: ELIF . LRB expression RRB scope

    LRB  shift, and go to state 229


state 205

  138 if_stmt: IF LRB expression RRB scope ELSE . scope
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB

    LCB  shift, and go to state 67

    scope  go to state 230


state 206

  139 if_stmt: IF LRB expression RRB scope elif_list .  [$end, CHAR_LITERAL, STRING_LITERAL, INT, DOUBLE, IDENT, ADD, SUB, NOT, CHILDA, RCB, LRB, VAR, TRUE_TOK, FALSE_TOK, NULL_TOK, RETURN, IF, WHILE, BREAK, CONTINUE, TRY, THROW]
  140        | IF LRB expression RRB scope elif_list . ELSE scope
  142 elif_list: elif_list . elif
  143 elif: . ELIF LRB expression RRB scope

    ELIF  shift, and go to state 204
    ELSE  shift, and go to state 231

    $default  reduce using rule 139 (if_stmt)

    elif  go to state 232


state 207

  141 elif_list: elif .

    $default  reduce using rule 141 (elif_list)


state 208

  152 catch_stmt: CATCH LRB typename_T IDENT . RRB scope

    RRB  shift, and go to state 233


state 209

   55 function_define: DEF IDENT LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 55 (function_define)


state 210

   70 parameter_list: parameter_list COMMA typename_T IDENT .

    $default  reduce using rule 70 (parameter_list)


state 211

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T . scope_optional
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB
  155 scope_optional: . SEMI
  156               | . scope

    LCB   shift, and go to state 67
    SEMI  shift, and go to state 188

    scope           go to state 189
    scope_optional  go to state 234


state 212

   25 type_parameter: IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 235

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 236


state 213

   26 type_parameter: IN . IDENT type_parameter_rule_list

    IDENT  shift, and go to state 237


state 214

   27 type_parameter: OUT . IDENT type_parameter_rule_list

    IDENT  shift, and go to state 238


state 215

   22 type_parameter_group: LT type_parameter_list . GT
   24 type_parameter_list: type_parameter_list . COMMA type_parameter

    COMMA  shift, and go to state 239
    GT     shift, and go to state 240


state 216

   23 type_parameter_list: type_parameter .

    $default  reduce using rule 23 (type_parameter_list)


state 217

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 151
    LCB    shift, and go to state 241


state 218

   64 access_level_T: PUBLIC .

    $default  reduce using rule 64 (access_level_T)


state 219

   65 access_level_T: PRIVATE .

    $default  reduce using rule 65 (access_level_T)


state 220

   66 access_level_T: PROTECTED .

    $default  reduce using rule 66 (access_level_T)


state 221

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 242


state 222

   37 access_member_tree_opt: access_member_tree .  [RCB]
   39 access_member_tree: access_member_tree . access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 218
    PRIVATE    shift, and go to state 219
    PROTECTED  shift, and go to state 220

    $default  reduce using rule 37 (access_member_tree_opt)

    access_member_list  go to state 243
    access_level_T      go to state 224


state 223

   38 access_member_tree: access_member_list .

    $default  reduce using rule 38 (access_member_tree)


state 224

   40 access_member_list: access_level_T . COLON member_define_list

    COLON  shift, and go to state 244


state 225

   31 class_decl: CLASS parameterized_typename COLON typename_list . LCB access_member_tree_opt RCB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 151
    LCB    shift, and go to state 245


state 226

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 246


state 227

   67 ident_list: IDENT .

    $default  reduce using rule 67 (ident_list)


state 228

   32 enum_decl: ENUM IDENT LCB ident_list . RCB
   33          | ENUM IDENT LCB ident_list . COMMA RCB
   68 ident_list: ident_list . COMMA IDENT

    COMMA  shift, and go to state 247
    RCB    shift, and go to state 248


state 229

   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK
  143 elif: ELIF LRB . expression RRB scope

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 249
    expression_brace  go to state 33
    primary           go to state 34


state 230

  138 if_stmt: IF LRB expression RRB scope ELSE scope .

    $default  reduce using rule 138 (if_stmt)


state 231

  140 if_stmt: IF LRB expression RRB scope elif_list ELSE . scope
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB

    LCB  shift, and go to state 67

    scope  go to state 250


state 232

  142 elif_list: elif_list elif .

    $default  reduce using rule 142 (elif_list)


state 233

  152 catch_stmt: CATCH LRB typename_T IDENT RRB . scope
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB

    LCB  shift, and go to state 67

    scope  go to state 251


state 234

   54 function_define: DEF IDENT LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 54 (function_define)


state 235

   29 type_parameter_rule_list: LRB . typename_list RRB
   75 typename_list: . typename_T
   76              | . typename_list COMMA typename_T
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_list  go to state 252
    typename_T     go to state 104


state 236

   25 type_parameter: IDENT type_parameter_rule_list .

    $default  reduce using rule 25 (type_parameter)


state 237

   26 type_parameter: IN IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 235

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 253


state 238

   27 type_parameter: OUT IDENT . type_parameter_rule_list
   28 type_parameter_rule_list: .  [COMMA, GT]
   29                         | . LRB typename_list RRB

    LRB  shift, and go to state 235

    $default  reduce using rule 28 (type_parameter_rule_list)

    type_parameter_rule_list  go to state 254


state 239

   24 type_parameter_list: type_parameter_list COMMA . type_parameter
   25 type_parameter: . IDENT type_parameter_rule_list
   26               | . IN IDENT type_parameter_rule_list
   27               | . OUT IDENT type_parameter_rule_list

    IDENT  shift, and go to state 212
    IN     shift, and go to state 213
    OUT    shift, and go to state 214

    type_parameter  go to state 255


state 240

   22 type_parameter_group: LT type_parameter_list GT .

    $default  reduce using rule 22 (type_parameter_group)


state 241

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 218
    PRIVATE    shift, and go to state 219
    PROTECTED  shift, and go to state 220

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 256
    access_member_tree      go to state 222
    access_member_list      go to state 223
    access_level_T          go to state 224


state 242

   34 interface_decl: INTERFACE parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 34 (interface_decl)


state 243

   39 access_member_tree: access_member_tree access_member_list .

    $default  reduce using rule 39 (access_member_tree)


state 244

   40 access_member_list: access_level_T COLON . member_define_list
   41 member_define_list: . member_define
   42                   | . member_define_list member_define
   43 member_define: . constructor_define
   44              | . method_define
   45              | . field_define
   46 constructor_define: . CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | . CTOR NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: . modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | . modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: . modifier_type_T typename_T IDENT SEMI
   59 modifier_type_T: .  [IDENT, DEF]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 257
    NATIVE  shift, and go to state 258
    CTOR    shift, and go to state 259

    $default  reduce using rule 59 (modifier_type_T)

    member_define_list  go to state 260
    member_define       go to state 261
    constructor_define  go to state 262
    method_define       go to state 263
    field_define        go to state 264
    modifier_type_T     go to state 265


state 245

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB . access_member_tree_opt RCB
   36 access_member_tree_opt: .  [RCB]
   37                       | . access_member_tree
   38 access_member_tree: . access_member_list
   39                   | . access_member_tree access_member_list
   40 access_member_list: . access_level_T COLON member_define_list
   64 access_level_T: . PUBLIC
   65               | . PRIVATE
   66               | . PROTECTED

    PUBLIC     shift, and go to state 218
    PRIVATE    shift, and go to state 219
    PROTECTED  shift, and go to state 220

    $default  reduce using rule 36 (access_member_tree_opt)

    access_member_tree_opt  go to state 266
    access_member_tree      go to state 222
    access_member_list      go to state 223
    access_level_T          go to state 224


state 246

   30 class_decl: CLASS parameterized_typename LCB access_member_tree_opt RCB .

    $default  reduce using rule 30 (class_decl)


state 247

   33 enum_decl: ENUM IDENT LCB ident_list COMMA . RCB
   68 ident_list: ident_list COMMA . IDENT

    IDENT  shift, and go to state 267
    RCB    shift, and go to state 268


state 248

   32 enum_decl: ENUM IDENT LCB ident_list RCB .

    $default  reduce using rule 32 (enum_decl)


state 249

   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression
  143 elif: ELIF LRB expression . RRB scope

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100
    RRB            shift, and go to state 269


state 250

  140 if_stmt: IF LRB expression RRB scope elif_list ELSE scope .

    $default  reduce using rule 140 (if_stmt)


state 251

  152 catch_stmt: CATCH LRB typename_T IDENT RRB scope .

    $default  reduce using rule 152 (catch_stmt)


state 252

   29 type_parameter_rule_list: LRB typename_list . RRB
   76 typename_list: typename_list . COMMA typename_T

    COMMA  shift, and go to state 151
    RRB    shift, and go to state 270


state 253

   26 type_parameter: IN IDENT type_parameter_rule_list .

    $default  reduce using rule 26 (type_parameter)


state 254

   27 type_parameter: OUT IDENT type_parameter_rule_list .

    $default  reduce using rule 27 (type_parameter)


state 255

   24 type_parameter_list: type_parameter_list COMMA type_parameter .

    $default  reduce using rule 24 (type_parameter_list)


state 256

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 271


state 257

   60 modifier_type_T: STATIC . NATIVE
   62                | STATIC .  [IDENT, DEF]

    NATIVE  shift, and go to state 272

    $default  reduce using rule 62 (modifier_type_T)


state 258

   61 modifier_type_T: NATIVE . STATIC
   63                | NATIVE .  [IDENT, DEF]

    STATIC  shift, and go to state 273

    $default  reduce using rule 63 (modifier_type_T)


state 259

   46 constructor_define: CTOR . NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR . NEW LRB RRB constructor_chain_optional scope_optional

    NEW  shift, and go to state 274


state 260

   40 access_member_list: access_level_T COLON member_define_list .  [RCB, PUBLIC, PRIVATE, PROTECTED]
   42 member_define_list: member_define_list . member_define
   43 member_define: . constructor_define
   44              | . method_define
   45              | . field_define
   46 constructor_define: . CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | . CTOR NEW LRB RRB constructor_chain_optional scope_optional
   56 method_define: . modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | . modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: . modifier_type_T typename_T IDENT SEMI
   59 modifier_type_T: .  [IDENT, DEF]
   60                | . STATIC NATIVE
   61                | . NATIVE STATIC
   62                | . STATIC
   63                | . NATIVE

    STATIC  shift, and go to state 257
    NATIVE  shift, and go to state 258
    CTOR    shift, and go to state 259

    IDENT     reduce using rule 59 (modifier_type_T)
    DEF       reduce using rule 59 (modifier_type_T)
    $default  reduce using rule 40 (access_member_list)

    member_define       go to state 275
    constructor_define  go to state 262
    method_define       go to state 263
    field_define        go to state 264
    modifier_type_T     go to state 265


state 261

   41 member_define_list: member_define .

    $default  reduce using rule 41 (member_define_list)


state 262

   43 member_define: constructor_define .

    $default  reduce using rule 43 (member_define)


state 263

   44 member_define: method_define .

    $default  reduce using rule 44 (member_define)


state 264

   45 member_define: field_define .

    $default  reduce using rule 45 (member_define)


state 265

   56 method_define: modifier_type_T . DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T . DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional
   58 field_define: modifier_type_T . typename_T IDENT SEMI
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6
    DEF    shift, and go to state 276

    typename_T  go to state 277


state 266

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt . RCB

    RCB  shift, and go to state 278


state 267

   68 ident_list: ident_list COMMA IDENT .

    $default  reduce using rule 68 (ident_list)


state 268

   33 enum_decl: ENUM IDENT LCB ident_list COMMA RCB .

    $default  reduce using rule 33 (enum_decl)


state 269

  143 elif: ELIF LRB expression RRB . scope
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB

    LCB  shift, and go to state 67

    scope  go to state 279


state 270

   29 type_parameter_rule_list: LRB typename_list RRB .

    $default  reduce using rule 29 (type_parameter_rule_list)


state 271

   35 interface_decl: INTERFACE parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 35 (interface_decl)


state 272

   60 modifier_type_T: STATIC NATIVE .

    $default  reduce using rule 60 (modifier_type_T)


state 273

   61 modifier_type_T: NATIVE STATIC .

    $default  reduce using rule 61 (modifier_type_T)


state 274

   46 constructor_define: CTOR NEW . LRB parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW . LRB RRB constructor_chain_optional scope_optional

    LRB  shift, and go to state 280


state 275

   42 member_define_list: member_define_list member_define .

    $default  reduce using rule 42 (member_define_list)


state 276

   56 method_define: modifier_type_T DEF . IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF . IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional

    IDENT  shift, and go to state 281


state 277

   58 field_define: modifier_type_T typename_T . IDENT SEMI

    IDENT  shift, and go to state 282


state 278

   31 class_decl: CLASS parameterized_typename COLON typename_list LCB access_member_tree_opt RCB .

    $default  reduce using rule 31 (class_decl)


state 279

  143 elif: ELIF LRB expression RRB scope .

    $default  reduce using rule 143 (elif)


state 280

   46 constructor_define: CTOR NEW LRB . parameter_list RRB constructor_chain_optional scope_optional
   47                   | CTOR NEW LRB . RRB constructor_chain_optional scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 283

    parameter_list  go to state 284
    typename_T      go to state 156


state 281

   21 type_parameter_group: .  [LRB]
   22                     | . LT type_parameter_list GT
   56 method_define: modifier_type_T DEF IDENT . type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT . type_parameter_group LRB RRB ARROW typename_T scope_optional

    LT  shift, and go to state 196

    $default  reduce using rule 21 (type_parameter_group)

    type_parameter_group  go to state 285


state 282

   58 field_define: modifier_type_T typename_T IDENT . SEMI

    SEMI  shift, and go to state 286


state 283

   47 constructor_define: CTOR NEW LRB RRB . constructor_chain_optional scope_optional
   48 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   49                  | . COLON constructor_chain_type_T LRB RRB
   52 constructor_chain_optional: .  [LCB, SEMI]
   53                           | . constructor_chain

    COLON  shift, and go to state 287

    $default  reduce using rule 52 (constructor_chain_optional)

    constructor_chain           go to state 288
    constructor_chain_optional  go to state 289


state 284

   46 constructor_define: CTOR NEW LRB parameter_list . RRB constructor_chain_optional scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 177
    RRB    shift, and go to state 290


state 285

   56 method_define: modifier_type_T DEF IDENT type_parameter_group . LRB parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group . LRB RRB ARROW typename_T scope_optional

    LRB  shift, and go to state 291


state 286

   58 field_define: modifier_type_T typename_T IDENT SEMI .

    $default  reduce using rule 58 (field_define)


state 287

   48 constructor_chain: COLON . constructor_chain_type_T LRB argument_list RRB
   49                  | COLON . constructor_chain_type_T LRB RRB
   50 constructor_chain_type_T: . SUPER
   51                         | . THIS

    THIS   shift, and go to state 292
    SUPER  shift, and go to state 293

    constructor_chain_type_T  go to state 294


state 288

   53 constructor_chain_optional: constructor_chain .

    $default  reduce using rule 53 (constructor_chain_optional)


state 289

   47 constructor_define: CTOR NEW LRB RRB constructor_chain_optional . scope_optional
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB
  155 scope_optional: . SEMI
  156               | . scope

    LCB   shift, and go to state 67
    SEMI  shift, and go to state 188

    scope           go to state 189
    scope_optional  go to state 295


state 290

   46 constructor_define: CTOR NEW LRB parameter_list RRB . constructor_chain_optional scope_optional
   48 constructor_chain: . COLON constructor_chain_type_T LRB argument_list RRB
   49                  | . COLON constructor_chain_type_T LRB RRB
   52 constructor_chain_optional: .  [LCB, SEMI]
   53                           | . constructor_chain

    COLON  shift, and go to state 287

    $default  reduce using rule 52 (constructor_chain_optional)

    constructor_chain           go to state 288
    constructor_chain_optional  go to state 296


state 291

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB . parameter_list RRB ARROW typename_T scope_optional
   57              | modifier_type_T DEF IDENT type_parameter_group LRB . RRB ARROW typename_T scope_optional
   69 parameter_list: . typename_T IDENT
   70               | . parameter_list COMMA typename_T IDENT
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6
    RRB    shift, and go to state 297

    parameter_list  go to state 298
    typename_T      go to state 156


state 292

   51 constructor_chain_type_T: THIS .

    $default  reduce using rule 51 (constructor_chain_type_T)


state 293

   50 constructor_chain_type_T: SUPER .

    $default  reduce using rule 50 (constructor_chain_type_T)


state 294

   48 constructor_chain: COLON constructor_chain_type_T . LRB argument_list RRB
   49                  | COLON constructor_chain_type_T . LRB RRB

    LRB  shift, and go to state 299


state 295

   47 constructor_define: CTOR NEW LRB RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 47 (constructor_define)


state 296

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional . scope_optional
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB
  155 scope_optional: . SEMI
  156               | . scope

    LCB   shift, and go to state 67
    SEMI  shift, and go to state 188

    scope           go to state 189
    scope_optional  go to state 300


state 297

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 301


state 298

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list . RRB ARROW typename_T scope_optional
   70 parameter_list: parameter_list . COMMA typename_T IDENT

    COMMA  shift, and go to state 177
    RRB    shift, and go to state 302


state 299

   48 constructor_chain: COLON constructor_chain_type_T LRB . argument_list RRB
   49                  | COLON constructor_chain_type_T LRB . RRB
   71 argument_list: . expression
   72              | . argument_list COMMA expression
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    RRB             shift, and go to state 303
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    argument_list     go to state 304
    expression        go to state 305
    expression_brace  go to state 33
    primary           go to state 34


state 300

   46 constructor_define: CTOR NEW LRB parameter_list RRB constructor_chain_optional scope_optional .

    $default  reduce using rule 46 (constructor_define)


state 301

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW . typename_T scope_optional
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 306


state 302

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB . ARROW typename_T scope_optional

    ARROW  shift, and go to state 307


state 303

   49 constructor_chain: COLON constructor_chain_type_T LRB RRB .

    $default  reduce using rule 49 (constructor_chain)


state 304

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list . RRB
   72 argument_list: argument_list . COMMA expression

    COMMA  shift, and go to state 308
    RRB    shift, and go to state 309


state 305

   71 argument_list: expression .  [COMMA, RRB]
   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 71 (argument_list)


state 306

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T . scope_optional
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB
  155 scope_optional: . SEMI
  156               | . scope

    LCB   shift, and go to state 67
    SEMI  shift, and go to state 188

    scope           go to state 189
    scope_optional  go to state 310


state 307

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW . typename_T scope_optional
   77 typename_T: . IDENT typename_group

    IDENT  shift, and go to state 6

    typename_T  go to state 311


state 308

   72 argument_list: argument_list COMMA . expression
   78 expression: . primary
   79           | . ADD expression
   80           | . SUB expression
   81           | . expression ADD expression
   82           | . expression SUB expression
   83           | . expression MUL expression
   84           | . expression DIV expression
   85           | . expression MOD expression
   86           | . expression BIT_OR expression
   87           | . expression EQUAL expression
   88           | . expression NOTEQUAL expression
   89           | . expression BIT_AND expression
   90           | . expression EXC_OR expression
   91           | . expression LOGIC_OR expression
   92           | . expression LOGIC_AND expression
   93           | . expression ASSIGN expression
   94           | . expression ADD_ASSIGN expression
   95           | . expression SUB_ASSIGN expression
   96           | . expression MUL_ASSIGN expression
   97           | . expression DIV_ASSIGN expression
   98           | . expression MOD_ASSIGN expression
   99           | . expression AND_ASSIGN expression
  100           | . expression OR_ASSIGN expression
  101           | . expression EXC_OR_ASSIGN expression
  102           | . expression LSHIFT_ASSIGN expression
  103           | . expression RSHIFT_ASSIGN expression
  104           | . expression GT expression
  105           | . expression GE expression
  106           | . expression LT expression
  107           | . expression LE expression
  108           | . expression LSHIFT expression
  109           | . expression RSHIFT expression
  110           | . CHILDA expression
  111           | . NOT expression
  112           | . expression_brace
  113 expression_brace: . LRB expression RRB
  114 primary: . INT
  115        | . DOUBLE
  116        | . CHAR_LITERAL
  117        | . STRING_LITERAL
  118        | . TRUE_TOK
  119        | . FALSE_TOK
  120        | . NULL_TOK

    CHAR_LITERAL    shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INT             shift, and go to state 4
    DOUBLE          shift, and go to state 5
    ADD             shift, and go to state 7
    SUB             shift, and go to state 8
    NOT             shift, and go to state 9
    CHILDA          shift, and go to state 10
    LRB             shift, and go to state 11
    TRUE_TOK        shift, and go to state 14
    FALSE_TOK       shift, and go to state 15
    NULL_TOK        shift, and go to state 16

    expression        go to state 312
    expression_brace  go to state 33
    primary           go to state 34


state 309

   48 constructor_chain: COLON constructor_chain_type_T LRB argument_list RRB .

    $default  reduce using rule 48 (constructor_chain)


state 310

   57 method_define: modifier_type_T DEF IDENT type_parameter_group LRB RRB ARROW typename_T scope_optional .

    $default  reduce using rule 57 (method_define)


state 311

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T . scope_optional
  153 scope: . LCB stmt_list RCB
  154      | . LCB RCB
  155 scope_optional: . SEMI
  156               | . scope

    LCB   shift, and go to state 67
    SEMI  shift, and go to state 188

    scope           go to state 189
    scope_optional  go to state 313


state 312

   72 argument_list: argument_list COMMA expression .  [COMMA, RRB]
   81 expression: expression . ADD expression
   82           | expression . SUB expression
   83           | expression . MUL expression
   84           | expression . DIV expression
   85           | expression . MOD expression
   86           | expression . BIT_OR expression
   87           | expression . EQUAL expression
   88           | expression . NOTEQUAL expression
   89           | expression . BIT_AND expression
   90           | expression . EXC_OR expression
   91           | expression . LOGIC_OR expression
   92           | expression . LOGIC_AND expression
   93           | expression . ASSIGN expression
   94           | expression . ADD_ASSIGN expression
   95           | expression . SUB_ASSIGN expression
   96           | expression . MUL_ASSIGN expression
   97           | expression . DIV_ASSIGN expression
   98           | expression . MOD_ASSIGN expression
   99           | expression . AND_ASSIGN expression
  100           | expression . OR_ASSIGN expression
  101           | expression . EXC_OR_ASSIGN expression
  102           | expression . LSHIFT_ASSIGN expression
  103           | expression . RSHIFT_ASSIGN expression
  104           | expression . GT expression
  105           | expression . GE expression
  106           | expression . LT expression
  107           | expression . LE expression
  108           | expression . LSHIFT expression
  109           | expression . RSHIFT expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    LSHIFT         shift, and go to state 77
    RSHIFT         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOTEQUAL       shift, and go to state 80
    GT             shift, and go to state 81
    GE             shift, and go to state 82
    LT             shift, and go to state 83
    LE             shift, and go to state 84
    BIT_AND        shift, and go to state 85
    LOGIC_AND      shift, and go to state 86
    BIT_OR         shift, and go to state 87
    LOGIC_OR       shift, and go to state 88
    ASSIGN         shift, and go to state 89
    ADD_ASSIGN     shift, and go to state 90
    SUB_ASSIGN     shift, and go to state 91
    MUL_ASSIGN     shift, and go to state 92
    DIV_ASSIGN     shift, and go to state 93
    MOD_ASSIGN     shift, and go to state 94
    AND_ASSIGN     shift, and go to state 95
    OR_ASSIGN      shift, and go to state 96
    LSHIFT_ASSIGN  shift, and go to state 97
    RSHIFT_ASSIGN  shift, and go to state 98
    EXC_OR_ASSIGN  shift, and go to state 99
    EXC_OR         shift, and go to state 100

    $default  reduce using rule 72 (argument_list)


state 313

   56 method_define: modifier_type_T DEF IDENT type_parameter_group LRB parameter_list RRB ARROW typename_T scope_optional .

    $default  reduce using rule 56 (method_define)
