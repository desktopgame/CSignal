// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file numeric_map.h
 * @brief 数値によってソートされる二分探索木です。
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#ifndef BEACON_UTIL_NUMERIC_MAP_H
#define BEACON_UTIL_NUMERIC_MAP_H
typedef int bc_NumericMapKey;
typedef void* bc_NumericMapItem;
/**
 * 整数をキーとして二分探索を行うマップ.
 */
typedef struct bc_NumericMap {
        bc_NumericMapKey Key;
        bc_NumericMapItem Item;
        struct bc_NumericMap* Parent;
        struct bc_NumericMap* Left;
        struct bc_NumericMap* Right;
} bc_NumericMap;
/**
 * ツリーのアクション関数です.
 * @param item
 */
typedef void (*bc_NumericMapAction)(bc_NumericMapKey name,
                                    bc_NumericMapItem item);

/**
 * ツリーのデリータ関数です.
 * @param item
 */
typedef void (*bc_NumericMapDeleter)(bc_NumericMapKey name,
                                     bc_NumericMapItem item);

/**
 * 新しいヌメリックマップを作成します.
 * @return
 */
bc_NumericMap* bc_NewNumericMap();

/**
 * 指定のキーと値を紐付けます.
 * @param self
 * @param key
 * @param item
 * @return
 */
bc_NumericMap* bc_PutNumericMap(bc_NumericMap* self, bc_NumericMapKey key,
                                bc_NumericMapItem item);

/**
 * 指定のキーに紐づけられたセルを返します.
 * @param self
 * @param key
 */
bc_NumericMap* bc_GetNumericMapCell(bc_NumericMap* self, bc_NumericMapKey key);

/**
 * 指定のキーに紐づけられた値を返します.
 * @param self
 * @param key
 * @return
 */
bc_NumericMapItem bc_GetNumericMapValue(bc_NumericMap* self,
                                        bc_NumericMapKey key);

/**
 * 指定のキーと比較します.
 * @param self
 * @param key
 * @return
 */
int bc_CompareNumericMap(bc_NumericMap* self, bc_NumericMapKey key);

/**
 * マップの全ての要素を訪問します.
 * @param self
 * @param a
 */
void bc_EachNumericMap(bc_NumericMap* self, bc_NumericMapAction a);

/**
 * マップを解放します.
 * @param self
 * @param deleter
 */
void bc_DeleteNumericMap(bc_NumericMap* self, bc_NumericMapDeleter deleter);

/**
 * 何も行わないデリータ.
 * @param name
 * @param item
 */
void bc_NumericMapDeleterOfNull(bc_NumericMapKey name, bc_NumericMapItem item);

/**
 * free によって解放するデリータ.
 * @param name
 * @param item
 */
void bc_NumericMapDeleterByFree(bc_NumericMapKey name, bc_NumericMapItem item);
#endif