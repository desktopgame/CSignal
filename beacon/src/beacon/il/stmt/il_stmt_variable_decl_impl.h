// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_stmt_variable_decl_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_STMT_VARIABLE_DECL_H
#define BEACON_IL_IL_STMT_VARIABLE_DECL_H
#include "../../env/generic_cache.h"
#include "../../util/string_pool.h"
#include "../il_stmt_interface.h"
struct bc_Enviroment;
/**
 * 型宣言を表す要素.
 */
typedef struct bc_ILVariableDecl {
        bc_GenericCache* GCache;
        bc_StringView Name;
} bc_ILVariableDecl;
/**
 * 型宣言を表す要素をスーパーセットにラップします.
 * @param self
 * @return
 */
bc_ILStatement* bc_WrapILVariableDecl(bc_ILVariableDecl* self);

/**
 * 型宣言を表す要素を作成します.
 * @param namev
 * @return
 */
bc_ILVariableDecl* bc_NewILVariableDecl(bc_StringView namev);

/**
 * 型宣言を表す要素を出力します.
 * @param self
 * @param env
 * @param cctx
 */
void bc_GenerateILVariableDecl(bc_ILVariableDecl* self, bc_Enviroment* env,
                               bc_CallContext* cctx);

/**
 * 型宣言を表す要素を出力します.
 * @param self
 * @param env
 * @param cctx
 */
void bc_LoadILVariableDecl(bc_ILVariableDecl* self, bc_Enviroment* env,
                           bc_CallContext* cctx);

/**
 * 型宣言を表す要素を開放します.
 * @param self
 */
void bc_DeleteILVariableDecl(bc_ILVariableDecl* self);
#endif  // !SIGNAL_IL_IL_STMT_VARIABLE_DECL_H
