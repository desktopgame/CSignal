// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_stmt_proc_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_STMT_EXPR_H
#define BEACON_IL_IL_STMT_EXPR_H
#include "../il_factor_interface.h"
#include "../il_stmt_interface.h"
/**
 * 式のみで構成される文を表す要素.
 */
typedef struct bc_ILProc {
        bc_ILFactor* Factor;
} bc_ILProc;

/**
 * 式のみで構成される文を表す要素をスーパーセットにラップします.
 * @param self
 * @return
 */
bc_ILStatement* bc_WrapILProc(bc_ILProc* self);

/**
 * 式のみで構成される文を表す要素を作成します.
 * @return
 */
bc_ILProc* bc_NewILProc();

/**
 * 式のみで構成される文を生成します.
 * @param self
 * @param env
 * @param cctx
 */
void bc_GenerateILProc(bc_ILProc* self, bc_Enviroment* env,
                       bc_CallContext* cctx);

/**
 * 式のみで構成される文を読み込みます.
 * @param self
 * @param env
 * @param cctx
 */
void bc_LoadILProc(bc_ILProc* self, bc_Enviroment* env, bc_CallContext* cctx);

/**
 * 式のみで構成される文を表す要素を開放します.
 * @param self
 */
void bc_DeleteILProc(bc_ILProc* self);
#endif  // !SIGNAL_IL_IL_STMT_EXPR_H
