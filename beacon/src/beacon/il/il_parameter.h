//BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_parameter.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
//END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_PARAMETER_H
#define BEACON_IL_IL_PARAMETER_H
#include "../env/generic_cache.h"
#include "../util/string_pool.h"
//#include "ILType.h"
/**
 * パラメータの種類を表す列挙型.
 */
typedef enum bc_ILParameterType {
	IL_PARAM_TYPE_DEFAULT,
	IL_PARAM_TYPE_REF_T,
	IL_PARAM_TYPE_OUT_T,
} bc_ILParameterType;
/**
 * メソッド/関数の引数を表す要素.
 */
typedef struct bc_ILParameter {
	bc_ILParameterType Type;
	bc_GenericCache* GCache;
	bc_StringView Name;
} bc_ILParameter;
/**
 * パラメータを作成します.
 * @param name
 * @return
 */
bc_ILParameter* bc_NewILParameter(bc_StringView namev);

/**
 * パラメータを開放します.
 * @param self
 */
void bc_DeleteILParameter(bc_ILParameter* self);
#endif // !SIGNAL_IL_IL_PARAMETER_H
