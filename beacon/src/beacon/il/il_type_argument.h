//BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_type_argument.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
//END-AUTOGENERATED-BLOCK

#ifndef BEACON_IL_IL_TYPE_ARGUMENT_H
#define BEACON_IL_IL_TYPE_ARGUMENT_H
#include "../env/generic_cache.h"
#include "../env/generic_type.h"
#include "../util/vector.h"
struct CallContext;

/**
 * 型実引数を表す構造体.
 */
typedef struct ILTypeArgument {
	bc_GenericCache* GCache;
	bc_GenericType* GType;
} ILTypeArgument;

/**
 * 新しい型実引数を作成します.
 * @return
 */
ILTypeArgument* NewILTypeArgument();

/**
 * 全ての型実引数を出力します.
 * @param iltype_args
 */
void PrintILTypeArgument(bc_Vector* iltype_args);

/**
 * @param iltype_args
 * @param cctx
 * @return
 */
void ResolveILTypeArgument(bc_Vector* iltype_args, struct CallContext* cctx);

/**
 * 型実引数を解放します.
 * @param self
 */
void DeleteILTypeArgument(ILTypeArgument* self);
#endif
