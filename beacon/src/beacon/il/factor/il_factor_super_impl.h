//BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_super_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
//END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_FACTOR_SUPER_H
#define BEACON_IL_IL_FACTOR_SUPER_H
#include "../../env/generic_type.h"
#include "../call_context.h"
struct bc_Enviroment;
struct bc_Type;

/**
 * superを表す要素.
 */

typedef struct bc_ILSuper {
	bc_GenericType* Resolved;
} bc_ILSuper;

bc_ILSuper* bc_NewILSuper();

void bc_GenerateILSuper(bc_ILSuper* self, struct bc_Enviroment* env, bc_CallContext* cctx);

void bc_LoadILSuper(bc_ILSuper* self, struct bc_Enviroment* env, bc_CallContext* cctx);

bc_GenericType* bc_EvalILSuper(bc_ILSuper* self, struct bc_Enviroment* env, bc_CallContext* cctx);

char* bc_ILSuperToString(bc_ILSuper* self, struct bc_Enviroment* env);

void bc_DeleteILSuper(bc_ILSuper* self);
#endif // !SIGNAL_IL_IL_FACTOR_SUPER_H
