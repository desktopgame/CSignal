//BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_as_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
//END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_FACTOR_AS_H
#define BEACON_IL_IL_FACTOR_AS_H
#include "../il_factor_interface.h"
#include "../../env/generic_cache.h"
#include "../../env/generic_type.h"

typedef enum CastMode {
	CAST_DOWN_T,
	CAST_UP_T,
	CAST_UNKNOWN_T,
} CastMode;

/**
 * as演算子を表す構造体.
 */
typedef struct ILAs {
	bc_ILFactor* Source;
	bc_GenericCache* GCache;
	bc_GenericType* GType;
	CastMode Mode;
} ILAs;

struct bc_Enviroment;
struct bc_Type;
struct bc_Field;

bc_ILFactor* WrapILAs(ILAs* self);

ILAs* NewILAs();

void GenerateILAs(ILAs* self, bc_Enviroment* env, bc_CallContext* cctx);

void LoadILAs(ILAs* self, bc_Enviroment* env, bc_CallContext* cctx);

bc_GenericType* EvalILAs(ILAs* self, bc_Enviroment* env, bc_CallContext* cctx);

void DeleteILAs(ILAs* self);

char* ILAsToString(ILAs* self, bc_Enviroment* env);
#endif // !SIGNAL_IL_IL_FACTOR_AS_H
