//BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_explicit_binary_op_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
//END-AUTOGENERATED-BLOCK

#ifndef BEACON_IL_FACTOR_IL_FACTOR_EXPLICIT_BINARY_OP_IMPL_H
#define BEACON_IL_FACTOR_IL_FACTOR_EXPLICIT_BINARY_OP_IMPL_H
#include "../../ast/operator_type.h"
#include "../call_context.h"
struct bc_ILFactor;
struct bc_Enviroment;
struct bc_GenericType;

typedef struct bc_ILExplicitBinaryOp {
	struct bc_ILFactor* Receiver;
	struct bc_ILFactor* Arg;
	bc_OperatorType Type;
	int Index;
} bc_ILExplicitBinaryOp;

struct bc_ILFactor* bc_WrapILExplicitBinaryOp(bc_ILExplicitBinaryOp* self);

bc_ILExplicitBinaryOp* bc_NewILExplicitBinaryOp(bc_OperatorType type);

void bc_GenerateILExplicitBinaryOp(bc_ILExplicitBinaryOp* self, struct bc_Enviroment* env, bc_CallContext* cctx);

void bc_LoadILExplicitBinaryOp(bc_ILExplicitBinaryOp* self, struct bc_Enviroment* env, bc_CallContext* cctx);

struct bc_GenericType* bc_EvalILExplicitBinaryOp(bc_ILExplicitBinaryOp* self, struct bc_Enviroment* env, bc_CallContext* cctx);

void bc_DeleteILExplicitBinaryOp(bc_ILExplicitBinaryOp* self);
#endif