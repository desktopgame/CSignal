//BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_variable_local_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
//END-AUTOGENERATED-BLOCK

#ifndef BEACON_IL_IL_FACTOR_VARIABLE_LOCAL_H
#define BEACON_IL_IL_FACTOR_VARIABLE_LOCAL_H
#include "../../../util/vector.h"
#include "../../../util/string_pool.h"
#include "../../il_factor_interface.h"
struct bc_SymbolEntry;
struct bc_Enviroment;
struct bc_GenericType;
struct bc_Field;
struct bc_Property;

typedef enum VariableLocalType {
	VARIABLE_LOCAL_SCOPE_T,
	VARIABLE_LOCAL_FIELD_T,
	VARIABLE_LOCAL_PROPERTY_T,
	VARIABLE_LOCAL_UNDEFINED_T,
} VariableLocalType;

typedef struct FieldWithIndex {
	struct bc_Field* Field;
	int Index;
} FieldWithIndex;

typedef struct PropertyWithIndex {
	struct bc_Property* Property;
	int Index;
} PropertyWithIndex;

/**
 * ローカル変数を表す構造体.
 */
typedef struct ILVariableLocal {
	StringView Name;
	VariableLocalType Type;
	struct bc_GenericType* GType;
	union {
		struct bc_SymbolEntry* Entry;
		FieldWithIndex FieldI;
		PropertyWithIndex PropertyI;
	} Kind;
	Vector* TypeArgs;
} ILVariableLocal;

ILVariableLocal* NewILVariableLocal(StringView namev);

void GenerateILVariableLocal(ILVariableLocal* self, bc_Enviroment* env, CallContext* cctx);

void LoadILVariableLocal(ILVariableLocal * self, bc_Enviroment * env, CallContext* cctx);

struct bc_GenericType* EvalILVariableLocal(ILVariableLocal * self, bc_Enviroment * env, CallContext* cctx);

char* ILVariableLocalToString(ILVariableLocal * self, bc_Enviroment * env);

void DeleteILVariableLocal(ILVariableLocal* self);
#endif