// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_int_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_FACTOR_INT_H
#define BEACON_IL_IL_FACTOR_INT_H
#include <stdint.h>
#include "../il_factor_interface.h"
// struct opcode_buf;

/**
 * 整数リテラルを表す要素.
 */
typedef struct bc_ILInt {
        int32_t Value;
        int Count;
} bc_ILInt;

bc_ILFactor* bc_WrapILInt(bc_ILInt* self);

#define bc_NewILInt(i) (bc_MallocILInt(i, __FILE__, __LINE__))
bc_ILInt* bc_MallocILInt(int32_t i, const char* filename, int lineno);

void bc_GenerateILInt(bc_ILInt* self, bc_Enviroment* env, bc_CallContext* cctx);

void bc_LoadILInt(bc_ILInt* self, bc_Enviroment* env, bc_CallContext* cctx);

bc_GenericType* bc_EvalILInt(bc_ILInt* self, bc_Enviroment* env,
                             bc_CallContext* cctx);

char* bc_ILIntToString(bc_ILInt* self, bc_Enviroment* env);

void bc_DeleteILInt(bc_ILInt* self);

#endif  // !SIGNAL_IL_IL_FACTOR_INT_H
