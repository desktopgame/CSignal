// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_double_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_FACTOR_FLOAT_H
#define BEACON_IL_IL_FACTOR_FLOAT_H
#include "../il_factor_interface.h"

// struct opcode_buf;
/**
 * 浮動小数リテラルを表す要素.
 */
typedef struct bc_ILFloat {
        float Value;
} bc_ILFloat;

bc_ILFactor* bc_WrapILFloat(bc_ILFloat* self);

bc_ILFloat* bc_NewILFloat(double d);

void bc_GenerateILFloat(bc_ILFloat* self, bc_Enviroment* env,
                        bc_CallContext* cctx);

void bc_LoadILFloat(bc_ILFloat* self, bc_Enviroment* env, bc_CallContext* cctx);

bc_GenericType* bc_EvalILFloat(bc_ILFloat* self, bc_Enviroment* env,
                               bc_CallContext* cctx);

char* bc_ILFloatToString(bc_ILFloat* self, bc_Enviroment* env);

void bc_DeleteILFloat(bc_ILFloat* self);

#endif  // !SIGNAL_IL_IL_FACTOR_DOUBLE_H
