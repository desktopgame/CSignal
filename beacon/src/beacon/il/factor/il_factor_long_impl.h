// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_short_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_FACTOR_LONG_H
#define BEACON_IL_IL_FACTOR_LONG_H
#include <stdint.h>
#include "../il_factor_interface.h"
// struct opcode_buf;

/**
 * 整数リテラルを表す要素.
 */
typedef struct bc_ILLong {
        long Value;
        int Count;
} bc_ILLong;

bc_ILFactor* bc_WrapILLong(bc_ILLong* self);

#define bc_NewILLong(i) (bc_MallocILLong(i, __FILE__, __LINE__))
bc_ILLong* bc_MallocILLong(short s, const char* filename, int lineno);

void bc_GenerateILLong(bc_ILLong* self, bc_Enviroment* env,
                       bc_CallContext* cctx);

void bc_LoadILLong(bc_ILLong* self, bc_Enviroment* env, bc_CallContext* cctx);

bc_GenericType* bc_EvalILLong(bc_ILLong* self, bc_Enviroment* env,
                              bc_CallContext* cctx);

char* bc_ILLongToString(bc_ILLong* self, bc_Enviroment* env);

void bc_DeleteILLong(bc_ILLong* self);

#endif  // !SIGNAL_IL_IL_FACTOR_INT_H
