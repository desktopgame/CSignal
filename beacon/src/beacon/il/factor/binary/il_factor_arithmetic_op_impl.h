//BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_arithmetic_op_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
//END-AUTOGENERATED-BLOCK

#ifndef BEACON_IL_FACTOR_BIN_IL_FACTOR_ARITHMETIC_H
#define BEACON_IL_FACTOR_BIN_IL_FACTOR_ARITHMETIC_H
#include "../../../ast/operator_type.h"
#include "../../call_context.h"
struct ILBinaryOp;
struct bc_GenericType;
struct Enviroment;
typedef struct ILArithmeticOp {
	struct ILBinaryOp* Parent;
	int OperatorIndex;
	bc_OperatorType Type;
} ILArithmeticOp;

ILArithmeticOp* NewILArithmeticOp(bc_OperatorType type);


struct bc_GenericType* EvalILArithmeticOp(ILArithmeticOp * self, struct Enviroment * env, CallContext* cctx);

void GenerateILArithmeticOp(ILArithmeticOp* self, struct Enviroment* env, CallContext* cctx);

void LoadILArithmeticOp(ILArithmeticOp* self, struct Enviroment* env, CallContext* cctx);

void DeleteILArithmeticOp(ILArithmeticOp* self);

char* ILArithmeticOpToString(ILArithmeticOp* self, struct Enviroment* env);
#endif