// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_arithmetic_op_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#ifndef BEACON_IL_FACTOR_BIN_IL_FACTOR_ARITHMETIC_H
#define BEACON_IL_FACTOR_BIN_IL_FACTOR_ARITHMETIC_H
#include "../../../ast/operator_type.h"
#include "../../call_context.h"
struct bc_ILBinaryOp;
struct bc_GenericType;
struct bc_Enviroment;
typedef struct bc_ILArithmeticOp {
        struct bc_ILBinaryOp* Parent;
        int OperatorIndex;
        bc_OperatorType Type;
} bc_ILArithmeticOp;

bc_ILArithmeticOp* bc_NewILArithmeticOp(bc_OperatorType type);

struct bc_GenericType* bc_EvalILArithmeticOp(bc_ILArithmeticOp* self,
                                             struct bc_Enviroment* env,
                                             bc_CallContext* cctx);

void bc_GenerateILArithmeticOp(bc_ILArithmeticOp* self,
                               struct bc_Enviroment* env, bc_CallContext* cctx);

void bc_LoadILArithmeticOp(bc_ILArithmeticOp* self, struct bc_Enviroment* env,
                           bc_CallContext* cctx);

void bc_DeleteILArithmeticOp(bc_ILArithmeticOp* self);

char* bc_ILArithmeticOpToString(bc_ILArithmeticOp* self,
                                struct bc_Enviroment* env);
#endif