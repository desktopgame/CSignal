// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_method.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_METHOD_H
#define BEACON_IL_IL_METHOD_H
#include <stdbool.h>
#include "../ast/access_level.h"
#include "../ast/modifier_type.h"
#include "../env/generic_cache.h"
#include "../util/string_pool.h"
#include "../util/vector.h"
/**
 * メソッドの定義を表す要素.
 */
typedef struct bc_ILMethod {
        bc_StringView Name;
        bc_Vector* Parameters;
        bc_Vector* Statements;
        bc_GenericCache* ReturnGCache;
        bc_AccessLevel Access;
        bc_ModifierType Modifier;
        bc_Vector* TypeParameters;
        bool IsNoStmt;
} bc_ILMethod;
/**
 * メソッドを作成します.
 * @param name
 * @return
 */
bc_ILMethod* bc_NewILMethod(bc_StringView name);

/**
 * メソッドを開放します.
 * @param self
 */
void bc_DeleteILMethod(bc_ILMethod* self);
#endif  // !SIGNAL_IL_IL_METHOD_H
