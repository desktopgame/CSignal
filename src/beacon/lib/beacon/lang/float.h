// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file float.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_LIB_SIGNAL_LANG_FLOAT_H
#define BEACON_LIB_SIGNAL_LANG_FLOAT_H
#include "../../bc_library_impl.h"
/**
 * 実数型を扱うオブジェクトです。
 */
typedef struct bc_Float {
        bc_Object Super;
        float Value;
} bc_Float;
struct bc_Type;

/**
 * 新しい実数オブジェクトを生成します。
 * @param value
 * @return
 */
struct bc_Object* bc_NewFloat(float value);

/**
 * beacon::lang::Floatクラスを初期化します.
 */
void bc_InitFloat();

/**
 * beacon::lang::Float型を返します.
 * @return
 */
struct bc_Type* bc_GetFloatType();
#endif  // !SIGNAL_LIB_SIGNAL_LANG_DOUBLE_H
