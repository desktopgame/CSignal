// BEGIN-AUTOGENERATED-BLOCK
/**
 * @file il_factor_as_impl.h
 * @brief ここに概要を記述します
 * @author koya
 * @date 2018/10/31
 */
// END-AUTOGENERATED-BLOCK

#pragma once
#ifndef BEACON_IL_IL_FACTOR_AS_H
#define BEACON_IL_IL_FACTOR_AS_H
#include "../../env/generic_cache.h"
#include "../../env/generic_type.h"
#include "../il_factor_interface.h"

typedef enum bc_CastMode {
        CAST_DOWN_T,
        CAST_UP_T,
        CAST_UNKNOWN_T,
} bc_CastMode;

/**
 * as演算子を表す構造体.
 */
typedef struct bc_ILAs {
        bc_ILFactor* Source;
        bc_GenericCache* GCache;
        bc_GenericType* GType;
        bc_CastMode Mode;
} bc_ILAs;

struct bc_Enviroment;
struct bc_Type;
struct bc_Field;

bc_ILFactor* bc_WrapILAs(bc_ILAs* self);

bc_ILAs* bc_NewILAs();

void bc_GenerateILAs(bc_ILAs* self, bc_Enviroment* env, bc_CallContext* cctx);

void bc_LoadILAs(bc_ILAs* self, bc_Enviroment* env, bc_CallContext* cctx);

bc_GenericType* bc_EvalILAs(bc_ILAs* self, bc_Enviroment* env,
                            bc_CallContext* cctx);

void bc_DeleteILAs(bc_ILAs* self);

char* bc_ILAsToString(bc_ILAs* self, bc_Enviroment* env);
#endif  // !SIGNAL_IL_IL_FACTOR_AS_H
