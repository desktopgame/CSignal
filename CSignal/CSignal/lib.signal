namespace signal.lang {
	class Object {
		public:
		ctor new() {
		}

		public:
		def toString() -> String {
			return this.nativeToString();
		}

		private:
		native def nativeToString() -> String;
	}
	class Array {
		private:
		Int length;

		public:
		ctor new(Int length) {
			this.length = length;
			nativeInit();
		}

		def length() -> Int {
			return this.length;
		}

		def set(Int index, Object v) -> Void {
			this.nativeSet(index, v);
		}

		def get(Int index) -> Object {
			return this.nativeGet(index);
		}

		//再帰関数のテスト
		def test(Int a, Int b) -> Int {
			if(b <= 0) {
				return a;
			}
			return this.test(a + b, b - 1);
		}
		
		private:
		native def nativeInit() -> Void;
		native def nativeSet(Int index, Object v) -> Void;
		native def nativeGet(Int index) -> Object;
	}
	class Console {
		public:
		static native def writeLine(String str) -> Void;

		static native def writeLine(Int i) -> Void;

		static native def writeLine(Object i) -> Void;

		static native def write(String str) -> Void;

		static native def read() -> Char;

		static native def readLine() -> String;
	}
	class Int {
		public:
		def p() -> Void {
			Console.writeLine("Foo!");
		}

		
	}
}