import "lib"
//import "../io.h"
namespace signal.lang {
	interface ICallable {
		public:
		def call() -> Void;
		def call2() -> Void;
	}

	class ImplA : ICallable {
		public:
		ctor new() {
		}

		def call2() -> Void {
			Console.writeLine("2AAA");
		}

		def call() -> Void {
			Console.writeLine("AAA");
		}
	}
	class ImplB : ICallable {
		public:
		ctor new() {
		}

		def call2() -> Void {
			Console.writeLine("2VBB");
		}

		def call() -> Void {
			Console.writeLine("BBB");
		}
	}
	class ImplX : ImplA {
		public:
		ctor new() : super() {
		}

		def call2() -> Void {
			Console.writeLine("2XXX");
		}

		def call() -> Void {
			Console.writeLine("XXX");
		}
	}
}
String s = signal::lang::Console.readLine();
signal::lang::Console.writeLine(s);
/*
signal::lang::ICallable x = new signal::lang::ImplA();
x.call();
x.call2();

x = new signal::lang::ImplB();
x.call();
x.call2();

x = new signal::lang::ImplX();
x.call();
x.call2();
*/