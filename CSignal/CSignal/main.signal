import "lib"
//import "../io.h"
namespace L.Goo.Foo {
	class Foo : SuperFoo {
		public:
		Int pointX;
		Int pointY;
	
		private:
		static def main() -> Void {

		}

		native def main(Int a, Int b, String c) -> Void {
			
		}

		static def print(String message, Int d) -> Void {
/*
			main();
		//HelloWor
			Console.writeLine("a");
			main(10, 20, "HelloWo");
			Foo a = Foo.newInstance();
			a.print();
			a.print("a");
			a.print(10, 20, "aaa");
*/
			if(10) {

			}

			if('a' || 10) {

			} elif("hello") {

			}

			if(40 == 40) {

			} elif(50 == 50) {

			} else {

			}
		}
	}
	namespace M {
		class Klass {
		}
		class Lnterface {
		}
		class Lnterface2 {
		}
	}
}
main();
Console.writeLine("a");
main(10, 20, "HelloWo");
Foo a = Foo.newInstance();
a.print();
a.print("a");
a.print(10, 20, "aaa");
signal::lang::Console.writeLine("aaa");
//Console.writeLine("HelloWorld");
//(10 + 20 + (5 * 20 + (16 / 4)) >= 20 || 0 < 0)
//TYPENAME VARIABLENAME = 10;
//STRING STR = "aaaa";
//CHAR CH = 'z';