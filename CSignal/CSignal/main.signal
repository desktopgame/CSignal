import "lib"
//import "../io.h"
namespace signal.lang {
	class Point2D {
		public:
		Int x;
		Int y;

		ctor new(Int x, Int y) {
			this.x = x;
			this.y = y;
		}

		ctor new() : this(0, 0) {
		}

		def print(Int a, Int b) -> Void {
			signal::lang::Console.writeLine("home");
			Console.writeLine(a);
			Console.writeLine(b);
		}
		def print() -> Void {
			Console.writeLine("2D");
		}

	}

	class Point3D : Point2D {
		public:
		Int z;

		ctor new(Int x, Int y, Int z) : super(x, y) {
			this.z = z;
		}

		ctor new() : this(0, 0, 0) {
		}

		def print() -> Void {
			Console.writeLine("3D");
		}
/*
		def printXYZ() -> Void {
			Console.writeLine(this.x);
			Console.writeLine(this.y);
			Console.writeLine(this.z);
		}
*/
	}
}
namespace L.Goo.Foo {
	class Foo : SuperFoo {
		public:
		Int pointX;
		Int pointY;

		private:
		static def main() -> Void {

		}

		native def main(Int a, Int b, String c) -> Void {
			
		}

		static def print(String message, Int d) -> Void {
			main();
/*
		//HelloWor
			Console.writeLine("a");
			main(10, 20, "HelloWo");
			Foo a = Foo.newInstance();
			a.print();
			a.print("a");
			a.print(10, 20, "aaa");
*/
			if(10) {

			}

			if('a' || 10) {

			} elif("hello") {

			}

			if(40 == 40) {

			} elif(50 == 50) {

			} else {

			}
		}
	}
	namespace M {
		class Klass {
		}
		class Lnterface {
		}
		class Lnterface2 {
		}
	}
}
signal::lang::Point2D c = new signal::lang::Point3D(1, 2, 3);
c.print();
/*
Int a = 2;
signal::lang::Console.writeLine(a);

a += 2;
signal::lang::Console.writeLine(a);

a = 0;
signal::lang::Console.writeLine(a);
*/
/*
signal::lang::Point3D c = new signal::lang::Point3D(1, 2, 3);
//signal::lang::Console.writeLine(c.x);
//signal::lang::Console.writeLine(c.y);
//signal::lang::Console.writeLine(c.z);
Int a = 2;
Int b = 20;
c.print(20, 5);
if(a == b) {
	signal::lang::Console.writeLine("a == b");
	signal::lang::Console.writeLine("a == b");
	signal::lang::Console.writeLine("a == b");
} elif(a > b) {
	signal::lang::Console.writeLine("a > b");
	signal::lang::Console.writeLine("a > b");
	signal::lang::Console.writeLine("a > b");
} elif(a < 0) {
	signal::lang::Console.writeLine("a < 0");
	signal::lang::Console.writeLine("a < 0");
	signal::lang::Console.writeLine("a < 0");
} else {
	signal::lang::Console.writeLine("else");
	signal::lang::Console.writeLine("else");
	signal::lang::Console.writeLine("else");
}
*/

//signal::lang::Point2D c = new signal::lang::Point2D(10, 2);
//c.print(200, 5);
//signal::lang::Console.writeLine(100);
//signal::lang::Console.writeLine(c.x);
//signal::lang::Console.writeLine("PP");