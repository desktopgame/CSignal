


expression
	: assign
	;
assign
	: or
	| primary assign_type_T assign
	{
		$$ = ast_new_generic_assign($1, $2, $3);
	}
	;
assign_type_T
	: ASSIGN
	{
		$$ = assign_otype_def;
	}
	| ADD_ASSIGN
	{
		$$ = assign_otype_add;
	}
	| SUB_ASSIGN
	{
		$$ = assign_otype_sub;
	}
	| MUL_ASSIGN
	{
		$$ = assign_otype_mul;
	}
	| DIV_ASSIGN
	{
		$$ = assign_otype_div;
	}
	| MOD_ASSIGN
	{
		$$ = assign_otype_mod;
	}
	;
or
	: and
	| or LOGIC_OR and
	{
		$$ = ast_new_logic_or($1, $3);
	}
	;
and
	: equal
	| and LOGIC_AND equal
	{
		$$ = ast_new_logic_and($1, $3);
	}
	;
equal
	: compare
	| equal EQUAL compare
	{
		$$ = ast_new_equal($1, $3);
	}
	| equal NOTEQUAL compare
	{
		$$ = ast_new_notequal($1, $3);
	}
	;
compare
	: addsub
	| compare GT addsub
	{
		$$ = ast_new_gt($1, $3);
	}
	| compare GE addsub
	{
		$$ = ast_new_ge($1, $3);
	}
	| compare LT addsub
	{
		$$ = ast_new_lt($1, $3);
	}
	| compare LE addsub
	{
		$$ = ast_new_le($1, $3);
	}
	;
addsub
	: muldiv
	| addsub ADD muldiv
	{
		$$ = ast_new_add($1, $3);
	}
	| addsub SUB muldiv
	{
		$$ = ast_new_sub($1, $3);
	}
	;
muldiv
	: unary
	| muldiv MUL unary
	{
		$$ = ast_new_mul($1, $3);
	}
	| muldiv DIV unary
	{
		$$ = ast_new_div($1, $3);
	}
	| muldiv MOD unary
	{
		$$ = ast_new_mod($1, $3);
	}
	;
unary
	: prefix
	| NOT unary
	{
		$$ = ast_new_not($2);
	}
	| '-' unary %prec UMINUS
	{
		$$ = ast_new_neg($2);
	}
	;
prefix
	: postfix
	| INC postfix
	{
		$$ = ast_new_pre_inc($2);
	}
	| DEC postfix
	{
		$$ = ast_new_pre_dec($2);
	}
	;
postfix
	: primary
	| primary INC
	{
		$$ = ast_new_post_inc($1);
	}
	| primary DEC
	{
		$$ = ast_new_post_dec($1);
	}
	| primary AS typename_T
	{
		$$ = ast_new_as($1, $3);
	}
	;
primary
	: primary_nobrace
	| '(' expression ')'
	{
		$$ = $2;
	}
	;
primary_nobrace
	: primary_literal
	| primary_assoc
	| THIS
	{
		$$ = ast_new_this();
	}
	| SUPER
	{
		$$ = ast_new_super();
	}
	| NEW typename_T LRB argument_list RRB
	{
		$$ = ast_new_new_instance($2, $4);
	}
	| NEW typename_T LRB RRB
	{
		$$ = ast_new_new_instance($2, ast_new_blank());
	}
	;

primary_literal
	: INT
	| DOUBLE
	| CHAR_LITERAL
	| STRING_LITERAL
	| TRUE_TOK
	{
		$$ = ast_new_true();
	}
	| FALSE_TOK
	{
		$$ = ast_new_false();
	}
	| NULL_TOK
	{
		$$ = ast_new_null();
	}
	;
;;$$-
primary_assoc
	: primary_faccess
	| primary_mcall
;;	| fqcn_part %prec NONAME
	{
		$$ = ast_new_blank();
	}
	;

primary_faccess
	: primary DOT IDENT
	{
		$$ = ast_new_blank();
	}
	;

primary_mcall
;;	: primary_maccess IDENT typename_group LRB argument_list RRB
	: primary_maccess typename_group LRB argument_list RRB
	{
		$$ = ast_new_blank();
	}
;;	| primary_maccess IDENT typename_group LRB RRB
	| primary_maccess typename_group LRB RRB
	{
		$$ = ast_new_blank();
	}
	;
primary_maccess
	;;: primary DOT
	: primary_nobrace
	;
;;-$$